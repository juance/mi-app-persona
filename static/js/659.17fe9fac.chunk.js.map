{"version":3,"file":"static/js/659.17fe9fac.chunk.js","mappings":"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","sources":["components/Tasks/TaskItem.js","components/Tasks/TaskList.js","components/Tasks/TaskForm.js","components/Tasks/TaskFilters.js","pages/Tasks.js","services/simpleStorage.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { FiCheck, FiClock, FiFlag, FiTrash2, FiEdit2, FiTag } from 'react-icons/fi';\n\nconst TaskContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 16px;\n  margin-bottom: 12px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  border-left: 4px solid ${props => {\n    switch (props.priority) {\n      case 'high': return 'var(--danger-color)';\n      case 'medium': return 'var(--accent-color)';\n      case 'low': return 'var(--secondary-color)';\n      default: return 'var(--primary-color)';\n    }\n  }};\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: var(--card-shadow-hover);\n  }\n\n  opacity: ${props => props.completed ? 0.7 : 1};\n`;\n\nconst TaskHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nconst TaskTitle = styled.h3`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  text-decoration: ${props => props.completed ? 'line-through' : 'none'};\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst TaskActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst TaskDetails = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-top: 12px;\n`;\n\nconst TaskDetail = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 0.85rem;\n  color: var(--text-medium);\n`;\n\nconst TaskDescription = styled.p`\n  margin: 8px 0 0;\n  font-size: 0.95rem;\n  color: var(--text-medium);\n  line-height: 1.5;\n  text-decoration: ${props => props.completed ? 'line-through' : 'none'};\n`;\n\nconst PriorityBadge = styled.span`\n  font-size: 0.75rem;\n  padding: 3px 8px;\n  border-radius: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    switch (props.priority) {\n      case 'high': return 'rgba(239, 68, 68, 0.1)';\n      case 'medium': return 'rgba(245, 158, 11, 0.1)';\n      case 'low': return 'rgba(16, 185, 129, 0.1)';\n      default: return 'rgba(99, 102, 241, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch (props.priority) {\n      case 'high': return 'var(--danger-color)';\n      case 'medium': return 'var(--accent-color)';\n      case 'low': return 'var(--secondary-color)';\n      default: return 'var(--primary-color)';\n    }\n  }};\n`;\n\nconst CategoryBadge = styled.span`\n  font-size: 0.75rem;\n  padding: 3px 8px;\n  border-radius: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    switch (props.category) {\n      case 'personal': return 'rgba(99, 102, 241, 0.1)';\n      case 'familia': return 'rgba(16, 185, 129, 0.1)';\n      case 'duchene': return 'rgba(245, 158, 11, 0.1)';\n      case 'lavadero': return 'rgba(239, 68, 68, 0.1)';\n      case 'vapea': return 'rgba(168, 85, 247, 0.1)';\n      default: return 'rgba(99, 102, 241, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch (props.category) {\n      case 'personal': return 'var(--primary-color)';\n      case 'familia': return 'var(--secondary-color)';\n      case 'duchene': return 'var(--accent-color)';\n      case 'lavadero': return 'var(--danger-color)';\n      case 'vapea': return 'var(--primary-dark)';\n      default: return 'var(--primary-color)';\n    }\n  }};\n`;\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Sin fecha';\n  const date = new Date(dateString);\n  return date.toLocaleDateString('es-ES');\n};\n\nconst TaskItem = ({ task, onToggleComplete, onEdit, onDelete }) => {\n  const { id, title, description, completed, due_date, priority, category } = task;\n\n  const getPriorityText = (priority) => {\n    switch (priority) {\n      case 'high': return 'Alta';\n      case 'medium': return 'Media';\n      case 'low': return 'Baja';\n      default: return 'Normal';\n    }\n  };\n\n  const getCategoryText = (category) => {\n    switch (category) {\n      case 'personal': return 'Personal';\n      case 'familia': return 'Familia';\n      case 'duchene': return 'Duchene';\n      case 'lavadero': return 'Lavadero';\n      case 'vapea': return 'Vapea Conmigo';\n      default: return 'Personal';\n    }\n  };\n\n  return (\n    <TaskContainer priority={priority} completed={completed}>\n      <TaskHeader>\n        <TaskTitle completed={completed}>\n          {title}\n        </TaskTitle>\n        <TaskActions>\n          <ActionButton\n            onClick={() => onToggleComplete(id)}\n            color={completed ? 'var(--text-light)' : 'var(--secondary-color)'}\n          >\n            <FiCheck />\n          </ActionButton>\n          <ActionButton onClick={() => onEdit(task)} color=\"var(--primary-color)\">\n            <FiEdit2 />\n          </ActionButton>\n          <ActionButton onClick={() => onDelete(id)} color=\"var(--danger-color)\">\n            <FiTrash2 />\n          </ActionButton>\n        </TaskActions>\n      </TaskHeader>\n\n      {description && (\n        <TaskDescription completed={completed}>{description}</TaskDescription>\n      )}\n\n      <TaskDetails>\n        {due_date && (\n          <TaskDetail>\n            <FiClock />\n            {formatDate(due_date)}\n          </TaskDetail>\n        )}\n        <TaskDetail>\n          <FiFlag />\n          <PriorityBadge priority={priority}>\n            {getPriorityText(priority)}\n          </PriorityBadge>\n        </TaskDetail>\n        <TaskDetail>\n          <FiTag />\n          <CategoryBadge category={category || 'personal'}>\n            {getCategoryText(category || 'personal')}\n          </CategoryBadge>\n        </TaskDetail>\n      </TaskDetails>\n    </TaskContainer>\n  );\n};\n\nexport default TaskItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport TaskItem from './TaskItem';\n\nconst ListContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 30px 0;\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n`;\n\nconst TaskList = ({ tasks, onToggleComplete, onEditTask, onDeleteTask }) => {\n  if (!tasks || tasks.length === 0) {\n    return (\n      <ListContainer>\n        <EmptyMessage>\n          No hay tareas. ¡Crea una nueva!\n        </EmptyMessage>\n      </ListContainer>\n    );\n  }\n\n  return (\n    <ListContainer>\n      {tasks.map(task => (\n        <TaskItem \n          key={task.id} \n          task={task} \n          onToggleComplete={onToggleComplete} \n          onEdit={onEditTask} \n          onDelete={onDeleteTask} \n        />\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default TaskList;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiX } from 'react-icons/fi';\n\nconst FormContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst FormTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  padding: 12px;\n  background-color: rgba(239, 68, 68, 0.08);\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--danger-color);\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n\n  &::after {\n    content: ' *';\n    color: var(--danger-color);\n    display: ${props => props.required ? 'inline' : 'none'};\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  min-height: 100px;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 24px;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  flex: 1;\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst CancelButton = styled.button`\n  background-color: var(--bg-medium);\n  color: var(--text-medium);\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--bg-dark);\n    color: var(--text-light);\n  }\n`;\n\nconst initialFormState = {\n  title: '',\n  description: '',\n  due_date: '',\n  priority: 'medium',\n  category: 'personal'\n};\n\nconst TaskForm = ({ task, onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState(initialFormState);\n  const [error, setError] = useState('');\n  const isEditMode = !!task?.id;\n\n  useEffect(() => {\n    if (task) {\n      setFormData({\n        title: task.title || '',\n        description: task.description || '',\n        due_date: task.due_date || '',\n        priority: task.priority || 'medium',\n        category: task.category || 'personal'\n      });\n    } else {\n      setFormData(initialFormState);\n    }\n  }, [task]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validación\n    if (!formData.title.trim()) {\n      setError('Por favor ingresa un título para la tarea.');\n      return;\n    }\n\n    // Enviar datos\n    onSubmit({\n      ...formData,\n      id: task?.id || Date.now(),\n      completed: task?.completed || false\n    });\n\n    // Resetear formulario si no estamos en modo edición\n    if (!isEditMode) {\n      setFormData(initialFormState);\n    }\n\n    setError('');\n  };\n\n  return (\n    <FormContainer>\n      <FormHeader>\n        <FormTitle>{isEditMode ? 'Editar Tarea' : 'Crear Nueva Tarea'}</FormTitle>\n        <CloseButton onClick={onCancel}>\n          <FiX />\n        </CloseButton>\n      </FormHeader>\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"title\" required>Título</Label>\n          <Input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={formData.title}\n            onChange={handleChange}\n            placeholder=\"¿Qué necesitas hacer?\"\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"description\">Descripción</Label>\n          <Textarea\n            id=\"description\"\n            name=\"description\"\n            value={formData.description}\n            onChange={handleChange}\n            placeholder=\"Añade detalles sobre esta tarea...\"\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"due_date\">Fecha límite</Label>\n          <Input\n            type=\"date\"\n            id=\"due_date\"\n            name=\"due_date\"\n            value={formData.due_date}\n            onChange={handleChange}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"priority\" required>Prioridad</Label>\n          <Select\n            id=\"priority\"\n            name=\"priority\"\n            value={formData.priority}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"low\">Baja</option>\n            <option value=\"medium\">Media</option>\n            <option value=\"high\">Alta</option>\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"category\" required>Categoría</Label>\n          <Select\n            id=\"category\"\n            name=\"category\"\n            value={formData.category}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"personal\">Personal</option>\n            <option value=\"familia\">Familia</option>\n            <option value=\"duchene\">Duchene</option>\n            <option value=\"lavadero\">Lavadero</option>\n            <option value=\"vapea\">Vapea Conmigo</option>\n          </Select>\n        </FormGroup>\n\n        <ButtonGroup>\n          <SubmitButton type=\"submit\">\n            {isEditMode ? 'Guardar Cambios' : 'Crear Tarea'}\n          </SubmitButton>\n          <CancelButton type=\"button\" onClick={onCancel}>\n            Cancelar\n          </CancelButton>\n        </ButtonGroup>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiFilter, FiSearch } from 'react-icons/fi';\n\nconst FiltersContainer = styled.div`\n  background-color: var(--bg-medium);\n  padding: 16px;\n  border-radius: var(--border-radius);\n  margin-bottom: 20px;\n`;\n\nconst FiltersHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  gap: 8px;\n  color: var(--text-medium);\n  font-weight: 500;\n  font-size: 0.95rem;\n`;\n\nconst FiltersIcon = styled(FiFilter)`\n  font-size: 1.1rem;\n`;\n\nconst FiltersContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst SearchContainer = styled.div`\n  flex: 2;\n  position: relative;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst SearchIcon = styled(FiSearch)`\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: var(--text-light);\n  font-size: 1rem;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 10px 10px 10px 36px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  &::placeholder {\n    color: var(--text-light);\n  }\n`;\n\nconst FilterGroup = styled.div`\n  flex: 1;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst FilterSelect = styled.select`\n  width: 100%;\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst TaskFilters = ({ filters, onFilterChange }) => {\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    onFilterChange({ ...filters, [name]: value });\n  };\n\n  return (\n    <FiltersContainer>\n      <FiltersHeader>\n        <FiltersIcon />\n        Filtrar tareas\n      </FiltersHeader>\n\n      <FiltersContent>\n        <SearchContainer>\n          <SearchIcon />\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Buscar tareas...\"\n            name=\"search\"\n            value={filters.search || ''}\n            onChange={handleChange}\n          />\n        </SearchContainer>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"status\"\n            value={filters.status || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todas las tareas</option>\n            <option value=\"active\">Pendientes</option>\n            <option value=\"completed\">Completadas</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"priority\"\n            value={filters.priority || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todas las prioridades</option>\n            <option value=\"high\">Alta</option>\n            <option value=\"medium\">Media</option>\n            <option value=\"low\">Baja</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"category\"\n            value={filters.category || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todas las categorías</option>\n            <option value=\"personal\">Personal</option>\n            <option value=\"familia\">Familia</option>\n            <option value=\"duchene\">Duchene</option>\n            <option value=\"lavadero\">Lavadero</option>\n            <option value=\"vapea\">Vapea Conmigo</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"sort\"\n            value={filters.sort || 'date_desc'}\n            onChange={handleChange}\n          >\n            <option value=\"date_desc\">Más recientes primero</option>\n            <option value=\"date_asc\">Más antiguas primero</option>\n            <option value=\"priority_desc\">Mayor prioridad primero</option>\n            <option value=\"priority_asc\">Menor prioridad primero</option>\n            <option value=\"name_asc\">Nombre (A-Z)</option>\n            <option value=\"name_desc\">Nombre (Z-A)</option>\n          </FilterSelect>\n        </FilterGroup>\n      </FiltersContent>\n    </FiltersContainer>\n  );\n};\n\nexport default TaskFilters;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus } from 'react-icons/fi';\nimport TaskList from '../components/Tasks/TaskList';\nimport TaskForm from '../components/Tasks/TaskForm';\nimport TaskFilters from '../components/Tasks/TaskFilters';\nimport { getTasks, saveTasks, addTask, updateTask, deleteTask, toggleTaskComplete } from '../services/simpleStorage';\n\nconst TasksContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst TasksHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst TasksSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst TasksHeaderActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst AddTaskButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst TaskStats = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 24px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 12px;\n  }\n`;\n\nconst StatCard = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 16px;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  transition: all var(--transition-speed);\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst StatValue = styled.div`\n  font-size: 2rem;\n  font-weight: 700;\n  color: ${props => props.color || 'var(--primary-color)'};\n  margin-bottom: 8px;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.9rem;\n  color: var(--text-medium);\n  font-weight: 500;\n`;\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingTask, setEditingTask] = useState(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    status: 'all',\n    priority: 'all',\n    category: 'all',\n    sort: 'date_desc'\n  });\n  const [filteredTasks, setFilteredTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar tareas desde el almacenamiento local\n  useEffect(() => {\n    const loadTasks = () => {\n      try {\n        setLoading(true);\n        // Obtener tareas del almacenamiento local\n        const savedTasks = getTasks();\n        console.log('Tareas cargadas desde el almacenamiento local:', savedTasks);\n        setTasks(savedTasks || []);\n      } catch (error) {\n        console.error('Error al cargar tareas:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadTasks();\n  }, []);\n\n  // Aplicar filtros y ordenamiento cuando cambian los filtros o las tareas\n  useEffect(() => {\n    let result = [...tasks];\n\n    // Filtrar por búsqueda\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      result = result.filter(task =>\n        task.title.toLowerCase().includes(searchTerm) ||\n        (task.description && task.description.toLowerCase().includes(searchTerm))\n      );\n    }\n\n    // Filtrar por estado\n    if (filters.status !== 'all') {\n      result = result.filter(task =>\n        (filters.status === 'completed' && task.completed) ||\n        (filters.status === 'active' && !task.completed)\n      );\n    }\n\n    // Filtrar por prioridad\n    if (filters.priority !== 'all') {\n      result = result.filter(task => task.priority === filters.priority);\n    }\n\n    // Filtrar por categoría\n    if (filters.category !== 'all') {\n      result = result.filter(task => task.category === filters.category);\n    }\n\n    // Ordenar\n    result.sort((a, b) => {\n      switch (filters.sort) {\n        case 'date_asc':\n          return new Date(a.created_at) - new Date(b.created_at);\n        case 'date_desc':\n          return new Date(b.created_at) - new Date(a.created_at);\n        case 'priority_desc':\n          const priorityOrder = { high: 3, medium: 2, low: 1 };\n          return priorityOrder[b.priority] - priorityOrder[a.priority];\n        case 'priority_asc':\n          const priorityOrderAsc = { high: 3, medium: 2, low: 1 };\n          return priorityOrderAsc[a.priority] - priorityOrderAsc[b.priority];\n        case 'name_asc':\n          return a.title.localeCompare(b.title);\n        case 'name_desc':\n          return b.title.localeCompare(a.title);\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredTasks(result);\n  }, [tasks, filters]);\n\n  const handleAddTask = (newTask) => {\n    try {\n      // Si estamos editando, actualizar la tarea existente\n      if (editingTask) {\n        // Mantener la fecha de creación original\n        const taskToUpdate = {\n          ...newTask,\n          created_at: editingTask.created_at\n        };\n\n        // Actualizar la tarea en el almacenamiento local\n        const updatedTask = updateTask(newTask.id, taskToUpdate);\n\n        if (updatedTask) {\n          console.log('Tarea actualizada correctamente:', updatedTask);\n          // Actualizar el estado\n          setTasks(prev => prev.map(task =>\n            task.id === newTask.id ? taskToUpdate : task\n          ));\n          setEditingTask(null);\n        } else {\n          console.error('No se pudo actualizar la tarea');\n          alert('No se pudo actualizar la tarea. Por favor, intenta de nuevo.');\n        }\n      } else {\n        // Si es una nueva tarea, agregarla a la lista\n        const taskWithDate = {\n          ...newTask,\n          created_at: new Date().toISOString().split('T')[0]\n        };\n\n        // Agregar la tarea al almacenamiento local\n        const savedTask = addTask(taskWithDate);\n\n        if (savedTask) {\n          console.log('Tarea agregada correctamente:', savedTask);\n          // Actualizar el estado\n          setTasks(prev => [...prev, savedTask]);\n        } else {\n          console.error('No se pudo agregar la tarea');\n          alert('No se pudo agregar la tarea. Por favor, intenta de nuevo.');\n        }\n      }\n\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error al guardar la tarea:', error);\n      alert('Error al guardar la tarea. Por favor, intenta de nuevo.');\n    }\n  };\n\n  const handleToggleComplete = (taskId) => {\n    try {\n      // Cambiar el estado de la tarea en el almacenamiento local\n      const updatedTask = toggleTaskComplete(taskId);\n\n      if (updatedTask) {\n        console.log('Estado de tarea actualizado correctamente:', updatedTask);\n        // Actualizar el estado\n        setTasks(prev => prev.map(task =>\n          task.id === taskId ? { ...task, completed: !task.completed } : task\n        ));\n      } else {\n        console.error('No se pudo actualizar el estado de la tarea');\n      }\n    } catch (error) {\n      console.error('Error al actualizar el estado de la tarea:', error);\n    }\n  };\n\n  const handleEditTask = (task) => {\n    setEditingTask(task);\n    setShowForm(true);\n  };\n\n  const handleDeleteTask = (taskId) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta tarea?')) {\n      try {\n        // Eliminar la tarea del almacenamiento local\n        const success = deleteTask(taskId);\n\n        if (success) {\n          console.log('Tarea eliminada correctamente');\n          // Actualizar el estado\n          setTasks(prev => prev.filter(task => task.id !== taskId));\n        } else {\n          console.error('No se pudo eliminar la tarea');\n          alert('No se pudo eliminar la tarea. Por favor, intenta de nuevo.');\n        }\n      } catch (error) {\n        console.error('Error al eliminar la tarea:', error);\n        alert('Error al eliminar la tarea. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingTask(null);\n  };\n\n  // Calcular estadísticas\n  const totalTasks = tasks.length;\n  const completedTasks = tasks.filter(task => task.completed).length;\n  const pendingTasks = totalTasks - completedTasks;\n  const highPriorityTasks = tasks.filter(task => task.priority === 'high' && !task.completed).length;\n\n  return (\n    <TasksContainer>\n      <TasksHeader>\n        <h1>Tareas</h1>\n        <p>Gestiona tus tareas y pendientes</p>\n      </TasksHeader>\n\n      {/* Estadísticas */}\n      <TaskStats>\n        <StatCard>\n          <StatValue>{totalTasks}</StatValue>\n          <StatLabel>Total de tareas</StatLabel>\n        </StatCard>\n\n        <StatCard>\n          <StatValue color=\"var(--secondary-color)\">{completedTasks}</StatValue>\n          <StatLabel>Completadas</StatLabel>\n        </StatCard>\n\n        <StatCard>\n          <StatValue color=\"var(--accent-color)\">{pendingTasks}</StatValue>\n          <StatLabel>Pendientes</StatLabel>\n        </StatCard>\n\n        <StatCard>\n          <StatValue color=\"var(--danger-color)\">{highPriorityTasks}</StatValue>\n          <StatLabel>Alta prioridad</StatLabel>\n        </StatCard>\n      </TaskStats>\n\n      {/* Sección de tareas */}\n      <TasksSection>\n        <TasksHeaderActions>\n          <SectionTitle>Mis Tareas</SectionTitle>\n          <AddTaskButton onClick={() => {\n            setEditingTask(null);\n            setShowForm(!showForm);\n          }}>\n            <FiPlus />\n            {showForm ? 'Cancelar' : 'Nueva Tarea'}\n          </AddTaskButton>\n        </TasksHeaderActions>\n\n        {/* Formulario para agregar/editar tareas */}\n        {showForm && (\n          <TaskForm\n            task={editingTask}\n            onSubmit={handleAddTask}\n            onCancel={handleCancelForm}\n          />\n        )}\n\n        {/* Filtros */}\n        <TaskFilters filters={filters} onFilterChange={setFilters} />\n\n        {/* Lista de tareas */}\n        <TaskList\n          tasks={filteredTasks}\n          onToggleComplete={handleToggleComplete}\n          onEditTask={handleEditTask}\n          onDeleteTask={handleDeleteTask}\n        />\n      </TasksSection>\n    </TasksContainer>\n  );\n};\n\nexport default Tasks;\n","/**\n * Servicio de almacenamiento local simple\n * Este servicio proporciona funciones básicas para guardar y recuperar datos\n * del localStorage de manera directa y sencilla\n */\n\n// Prefijo para las claves de almacenamiento\nconst STORAGE_PREFIX = 'mi_app_personal_simple_';\n\n/**\n * Guardar datos en localStorage\n * @param {string} key - Clave\n * @param {*} data - Datos a guardar\n */\nexport const saveData = (key, data) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.setItem(fullKey, JSON.stringify(data));\n    console.log(`Datos guardados en localStorage con clave ${key}:`, data);\n    return true;\n  } catch (error) {\n    console.error(`Error al guardar datos en localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n/**\n * Obtener datos de localStorage\n * @param {string} key - Clave\n * @param {*} defaultValue - Valor por defecto\n * @returns {*} - Datos guardados o valor por defecto\n */\nexport const getData = (key, defaultValue = null) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    const storedData = localStorage.getItem(fullKey);\n\n    if (!storedData) {\n      return defaultValue;\n    }\n\n    const parsedData = JSON.parse(storedData);\n    console.log(`Datos recuperados de localStorage con clave ${key}:`, parsedData);\n    return parsedData;\n  } catch (error) {\n    console.error(`Error al obtener datos de localStorage con clave ${key}:`, error);\n    return defaultValue;\n  }\n};\n\n/**\n * Eliminar datos de localStorage\n * @param {string} key - Clave\n */\nexport const removeData = (key) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.removeItem(fullKey);\n    console.log(`Datos eliminados de localStorage con clave ${key}`);\n    return true;\n  } catch (error) {\n    console.error(`Error al eliminar datos de localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n// Función genérica para generar un ID único\nconst generateId = () => `local_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// ==================== TRANSACCIONES ====================\n\n/**\n * Guardar transacciones en localStorage\n * @param {Array} transactions - Transacciones a guardar\n */\nexport const saveTransactions = (transactions) => {\n  return saveData('transactions', transactions);\n};\n\n/**\n * Obtener transacciones de localStorage\n * @returns {Array} - Transacciones guardadas o array vacío\n */\nexport const getTransactions = () => {\n  return getData('transactions', []);\n};\n\n/**\n * Agregar una transacción\n * @param {Object} transaction - Transacción a agregar\n */\nexport const addTransaction = (transaction) => {\n  try {\n    // Generar ID si no tiene\n    const transactionWithId = {\n      ...transaction,\n      id: transaction.id || generateId()\n    };\n\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Agregar la nueva transacción al principio\n    const updatedTransactions = [transactionWithId, ...currentTransactions];\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return transactionWithId;\n  } catch (error) {\n    console.error('Error al agregar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una transacción\n * @param {string} id - ID de la transacción\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTransaction = (id, updates) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Buscar la transacción\n    const index = currentTransactions.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la transacción\n    const updatedTransactions = [...currentTransactions];\n    updatedTransactions[index] = {\n      ...updatedTransactions[index],\n      ...updates\n    };\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return updatedTransactions[index];\n  } catch (error) {\n    console.error('Error al actualizar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una transacción\n * @param {string} id - ID de la transacción\n */\nexport const deleteTransaction = (id) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Filtrar la transacción a eliminar\n    const updatedTransactions = currentTransactions.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna transacción, retornar false\n    if (updatedTransactions.length === currentTransactions.length) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar transacción:', error);\n    return false;\n  }\n};\n\n// ==================== TAREAS ====================\n\n/**\n * Guardar tareas en localStorage\n * @param {Array} tasks - Tareas a guardar\n */\nexport const saveTasks = (tasks) => {\n  return saveData('tasks', tasks);\n};\n\n/**\n * Obtener tareas de localStorage\n * @returns {Array} - Tareas guardadas o array vacío\n */\nexport const getTasks = () => {\n  return getData('tasks', []);\n};\n\n/**\n * Agregar una tarea\n * @param {Object} task - Tarea a agregar\n */\nexport const addTask = (task) => {\n  try {\n    // Generar ID si no tiene\n    const taskWithId = {\n      ...task,\n      id: task.id || generateId(),\n      created_at: task.created_at || new Date().toISOString().split('T')[0]\n    };\n\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Agregar la nueva tarea\n    const updatedTasks = [...currentTasks, taskWithId];\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return taskWithId;\n  } catch (error) {\n    console.error('Error al agregar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una tarea\n * @param {string} id - ID de la tarea\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTask = (id, updates) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la tarea\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      ...updates\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al actualizar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una tarea\n * @param {string} id - ID de la tarea\n */\nexport const deleteTask = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Filtrar la tarea a eliminar\n    const updatedTasks = currentTasks.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna tarea, retornar false\n    if (updatedTasks.length === currentTasks.length) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar tarea:', error);\n    return false;\n  }\n};\n\n/**\n * Cambiar el estado de completado de una tarea\n * @param {string} id - ID de la tarea\n * @param {boolean} completed - Estado de completado\n */\nexport const toggleTaskComplete = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el estado de completado\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      completed: !updatedTasks[index].completed\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al cambiar estado de tarea:', error);\n    return null;\n  }\n};\n\n// ==================== INVERSIONES ====================\n\n/**\n * Guardar inversiones en localStorage\n * @param {Array} investments - Inversiones a guardar\n */\nexport const saveInvestments = (investments) => {\n  return saveData('investments', investments);\n};\n\n/**\n * Obtener inversiones de localStorage\n * @returns {Array} - Inversiones guardadas o array vacío\n */\nexport const getInvestments = () => {\n  return getData('investments', []);\n};\n\n/**\n * Agregar una inversión\n * @param {Object} investment - Inversión a agregar\n */\nexport const addInvestment = (investment) => {\n  try {\n    // Generar ID si no tiene\n    const investmentWithId = {\n      ...investment,\n      id: investment.id || generateId()\n    };\n\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Agregar la nueva inversión\n    const updatedInvestments = [...currentInvestments, investmentWithId];\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return investmentWithId;\n  } catch (error) {\n    console.error('Error al agregar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una inversión\n * @param {string} id - ID de la inversión\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateInvestment = (id, updates) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Buscar la inversión\n    const index = currentInvestments.findIndex(i => i.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la inversión\n    const updatedInvestments = [...currentInvestments];\n    updatedInvestments[index] = {\n      ...updatedInvestments[index],\n      ...updates\n    };\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return updatedInvestments[index];\n  } catch (error) {\n    console.error('Error al actualizar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una inversión\n * @param {string} id - ID de la inversión\n */\nexport const deleteInvestment = (id) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Filtrar la inversión a eliminar\n    const updatedInvestments = currentInvestments.filter(i => i.id !== id);\n\n    // Si no se eliminó ninguna inversión, retornar false\n    if (updatedInvestments.length === currentInvestments.length) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar inversión:', error);\n    return false;\n  }\n};\n\n// ==================== METAS FINANCIERAS ====================\n\n/**\n * Guardar metas financieras en localStorage\n * @param {Array} goals - Metas financieras a guardar\n */\nexport const saveFinancialGoals = (goals) => {\n  return saveData('financial_goals', goals);\n};\n\n/**\n * Obtener metas financieras de localStorage\n * @returns {Array} - Metas financieras guardadas o array vacío\n */\nexport const getFinancialGoals = () => {\n  return getData('financial_goals', []);\n};\n\n/**\n * Agregar una meta financiera\n * @param {Object} goal - Meta financiera a agregar\n */\nexport const addFinancialGoal = (goal) => {\n  try {\n    // Generar ID si no tiene\n    const goalWithId = {\n      ...goal,\n      id: goal.id || generateId()\n    };\n\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Agregar la nueva meta\n    const updatedGoals = [...currentGoals, goalWithId];\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return goalWithId;\n  } catch (error) {\n    console.error('Error al agregar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una meta financiera\n * @param {string} id - ID de la meta\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateFinancialGoal = (id, updates) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Buscar la meta\n    const index = currentGoals.findIndex(g => g.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la meta\n    const updatedGoals = [...currentGoals];\n    updatedGoals[index] = {\n      ...updatedGoals[index],\n      ...updates\n    };\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return updatedGoals[index];\n  } catch (error) {\n    console.error('Error al actualizar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una meta financiera\n * @param {string} id - ID de la meta\n */\nexport const deleteFinancialGoal = (id) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Filtrar la meta a eliminar\n    const updatedGoals = currentGoals.filter(g => g.id !== id);\n\n    // Si no se eliminó ninguna meta, retornar false\n    if (updatedGoals.length === currentGoals.length) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar meta financiera:', error);\n    return false;\n  }\n};\n"],"names":["TaskContainer","styled","div","props","priority","completed","TaskHeader","TaskTitle","h3","TaskActions","ActionButton","button","color","TaskDetails","TaskDetail","TaskDescription","p","PriorityBadge","span","CategoryBadge","category","formatDate","dateString","Date","toLocaleDateString","_ref","task","onToggleComplete","onEdit","onDelete","id","title","description","due_date","_jsxs","children","_jsx","onClick","FiCheck","FiEdit2","FiTrash2","FiClock","FiFlag","getPriorityText","FiTag","getCategoryText","ListContainer","EmptyMessage","tasks","onEditTask","onDeleteTask","length","map","TaskItem","FormContainer","FormHeader","FormTitle","CloseButton","ErrorMessage","FormGroup","Label","label","required","Input","input","Textarea","textarea","Select","select","ButtonGroup","SubmitButton","CancelButton","initialFormState","onSubmit","onCancel","formData","setFormData","useState","error","setError","isEditMode","useEffect","handleChange","e","name","value","target","prev","FiX","preventDefault","trim","now","htmlFor","type","onChange","placeholder","FiltersContainer","FiltersHeader","FiltersIcon","FiFilter","FiltersContent","SearchContainer","SearchIcon","FiSearch","SearchInput","FilterGroup","FilterSelect","filters","onFilterChange","search","status","sort","TasksContainer","TasksHeader","TasksSection","TasksHeaderActions","SectionTitle","h2","AddTaskButton","TaskStats","StatCard","StatValue","StatLabel","Tasks","setTasks","showForm","setShowForm","editingTask","setEditingTask","setFilters","filteredTasks","setFilteredTasks","loading","setLoading","loadTasks","savedTasks","getTasks","console","log","result","searchTerm","toLowerCase","filter","includes","a","b","created_at","priorityOrder","high","medium","low","priorityOrderAsc","localeCompare","totalTasks","completedTasks","pendingTasks","highPriorityTasks","FiPlus","TaskForm","newTask","taskToUpdate","updatedTask","updateTask","alert","taskWithDate","toISOString","split","savedTask","addTask","handleCancelForm","TaskFilters","TaskList","taskId","toggleTaskComplete","window","confirm","deleteTask","STORAGE_PREFIX","saveData","key","data","fullKey","localStorage","setItem","JSON","stringify","getData","defaultValue","arguments","undefined","storedData","getItem","parsedData","parse","generateId","Math","random","toString","substr","saveTransactions","transactions","getTransactions","addTransaction","transaction","transactionWithId","updatedTransactions","updateTransaction","updates","currentTransactions","index","findIndex","t","deleteTransaction","saveTasks","taskWithId","updatedTasks","currentTasks","saveInvestments","investments","getInvestments","addInvestment","investment","investmentWithId","updatedInvestments","updateInvestment","currentInvestments","i","deleteInvestment","saveFinancialGoals","goals","getFinancialGoals","addFinancialGoal","goal","goalWithId","updatedGoals","updateFinancialGoal","currentGoals","g","deleteFinancialGoal"],"sourceRoot":""}