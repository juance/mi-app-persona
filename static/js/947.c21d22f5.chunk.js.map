{"version":3,"file":"static/js/947.c21d22f5.chunk.js","mappings":"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","sources":["services/exportService.js","services/simpleStorage.js","components/Finances/FinancialSummary.js","hooks/useGestures.js","components/common/SwipeableCard.js","components/Finances/TransactionItem.js","hooks/useProgressiveLoading.js","components/common/ProgressiveList.js","hooks/useMemoizedList.js","components/Finances/TransactionList.js","components/Finances/CategoryManager.js","components/Finances/PlatformManager.js","components/Finances/TransactionForm.js","components/Finances/TransactionFilters.js","services/realtimeService.js","components/common/AnimatedTransition.js","components/common/ExportMenu.js","components/common/ConfirmDialog.js","pages/Finances.js"],"sourcesContent":["/**\n * Exporta datos a un archivo CSV\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToCSV = (data, filename) => {\n  if (!data || !data.length) {\n    return;\n  }\n\n  // Obtener las cabeceras del CSV\n  const headers = Object.keys(data[0]);\n  \n  // Crear el contenido del CSV\n  const csvContent = [\n    // Cabeceras\n    headers.join(','),\n    // Filas de datos\n    ...data.map(row => \n      headers.map(header => {\n        // Manejar valores especiales\n        const value = row[header];\n        \n        // Si el valor es null o undefined, devolver una cadena vacía\n        if (value === null || value === undefined) {\n          return '';\n        }\n        \n        // Si el valor es un objeto o array, convertirlo a JSON\n        if (typeof value === 'object') {\n          return `\"${JSON.stringify(value).replace(/\"/g, '\"\"')}\"`;\n        }\n        \n        // Si el valor es una cadena, escapar las comillas\n        if (typeof value === 'string') {\n          return `\"${value.replace(/\"/g, '\"\"')}\"`;\n        }\n        \n        // Para otros tipos de datos, devolver el valor como cadena\n        return String(value);\n      }).join(',')\n    )\n  ].join('\\\\n');\n  \n  // Crear un blob con el contenido del CSV\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  \n  // Crear un enlace para descargar el archivo\n  const link = document.createElement('a');\n  \n  // Crear una URL para el blob\n  const url = URL.createObjectURL(blob);\n  \n  // Configurar el enlace\n  link.setAttribute('href', url);\n  link.setAttribute('download', `${filename}.csv`);\n  link.style.visibility = 'hidden';\n  \n  // Agregar el enlace al documento\n  document.body.appendChild(link);\n  \n  // Hacer clic en el enlace para descargar el archivo\n  link.click();\n  \n  // Eliminar el enlace\n  document.body.removeChild(link);\n};\n\n/**\n * Exporta datos a un archivo JSON\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToJSON = (data, filename) => {\n  if (!data) {\n    return;\n  }\n  \n  // Crear un blob con el contenido del JSON\n  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n  \n  // Crear un enlace para descargar el archivo\n  const link = document.createElement('a');\n  \n  // Crear una URL para el blob\n  const url = URL.createObjectURL(blob);\n  \n  // Configurar el enlace\n  link.setAttribute('href', url);\n  link.setAttribute('download', `${filename}.json`);\n  link.style.visibility = 'hidden';\n  \n  // Agregar el enlace al documento\n  document.body.appendChild(link);\n  \n  // Hacer clic en el enlace para descargar el archivo\n  link.click();\n  \n  // Eliminar el enlace\n  document.body.removeChild(link);\n};\n\n/**\n * Exporta datos a un archivo Excel\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToExcel = (data, filename) => {\n  // Para exportar a Excel, primero exportamos a CSV\n  // y luego cambiamos la extensión a .xlsx\n  exportToCSV(data, filename.replace(/\\.xlsx$/, ''));\n};\n","/**\n * Servicio de almacenamiento local simple\n * Este servicio proporciona funciones básicas para guardar y recuperar datos\n * del localStorage de manera directa y sencilla\n */\n\n// Prefijo para las claves de almacenamiento\nconst STORAGE_PREFIX = 'mi_app_personal_simple_';\n\n/**\n * Guardar datos en localStorage\n * @param {string} key - Clave\n * @param {*} data - Datos a guardar\n */\nexport const saveData = (key, data) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.setItem(fullKey, JSON.stringify(data));\n    console.log(`Datos guardados en localStorage con clave ${key}:`, data);\n    return true;\n  } catch (error) {\n    console.error(`Error al guardar datos en localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n/**\n * Obtener datos de localStorage\n * @param {string} key - Clave\n * @param {*} defaultValue - Valor por defecto\n * @returns {*} - Datos guardados o valor por defecto\n */\nexport const getData = (key, defaultValue = null) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    const storedData = localStorage.getItem(fullKey);\n\n    if (!storedData) {\n      return defaultValue;\n    }\n\n    const parsedData = JSON.parse(storedData);\n    console.log(`Datos recuperados de localStorage con clave ${key}:`, parsedData);\n    return parsedData;\n  } catch (error) {\n    console.error(`Error al obtener datos de localStorage con clave ${key}:`, error);\n    return defaultValue;\n  }\n};\n\n/**\n * Eliminar datos de localStorage\n * @param {string} key - Clave\n */\nexport const removeData = (key) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.removeItem(fullKey);\n    console.log(`Datos eliminados de localStorage con clave ${key}`);\n    return true;\n  } catch (error) {\n    console.error(`Error al eliminar datos de localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n// Función genérica para generar un ID único\nconst generateId = () => `local_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// ==================== TRANSACCIONES ====================\n\n/**\n * Guardar transacciones en localStorage\n * @param {Array} transactions - Transacciones a guardar\n */\nexport const saveTransactions = (transactions) => {\n  return saveData('transactions', transactions);\n};\n\n/**\n * Obtener transacciones de localStorage\n * @returns {Array} - Transacciones guardadas o array vacío\n */\nexport const getTransactions = () => {\n  return getData('transactions', []);\n};\n\n/**\n * Agregar una transacción\n * @param {Object} transaction - Transacción a agregar\n */\nexport const addTransaction = (transaction) => {\n  try {\n    // Generar ID si no tiene\n    const transactionWithId = {\n      ...transaction,\n      id: transaction.id || generateId()\n    };\n\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Agregar la nueva transacción al principio\n    const updatedTransactions = [transactionWithId, ...currentTransactions];\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return transactionWithId;\n  } catch (error) {\n    console.error('Error al agregar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una transacción\n * @param {string} id - ID de la transacción\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTransaction = (id, updates) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Buscar la transacción\n    const index = currentTransactions.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la transacción\n    const updatedTransactions = [...currentTransactions];\n    updatedTransactions[index] = {\n      ...updatedTransactions[index],\n      ...updates\n    };\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return updatedTransactions[index];\n  } catch (error) {\n    console.error('Error al actualizar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una transacción\n * @param {string} id - ID de la transacción\n */\nexport const deleteTransaction = (id) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Filtrar la transacción a eliminar\n    const updatedTransactions = currentTransactions.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna transacción, retornar false\n    if (updatedTransactions.length === currentTransactions.length) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar transacción:', error);\n    return false;\n  }\n};\n\n// ==================== TAREAS ====================\n\n/**\n * Guardar tareas en localStorage\n * @param {Array} tasks - Tareas a guardar\n */\nexport const saveTasks = (tasks) => {\n  return saveData('tasks', tasks);\n};\n\n/**\n * Obtener tareas de localStorage\n * @returns {Array} - Tareas guardadas o array vacío\n */\nexport const getTasks = () => {\n  return getData('tasks', []);\n};\n\n/**\n * Agregar una tarea\n * @param {Object} task - Tarea a agregar\n */\nexport const addTask = (task) => {\n  try {\n    // Generar ID si no tiene\n    const taskWithId = {\n      ...task,\n      id: task.id || generateId(),\n      created_at: task.created_at || new Date().toISOString().split('T')[0]\n    };\n\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Agregar la nueva tarea\n    const updatedTasks = [...currentTasks, taskWithId];\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return taskWithId;\n  } catch (error) {\n    console.error('Error al agregar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una tarea\n * @param {string} id - ID de la tarea\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTask = (id, updates) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la tarea\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      ...updates\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al actualizar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una tarea\n * @param {string} id - ID de la tarea\n */\nexport const deleteTask = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Filtrar la tarea a eliminar\n    const updatedTasks = currentTasks.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna tarea, retornar false\n    if (updatedTasks.length === currentTasks.length) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar tarea:', error);\n    return false;\n  }\n};\n\n/**\n * Cambiar el estado de completado de una tarea\n * @param {string} id - ID de la tarea\n * @param {boolean} completed - Estado de completado\n */\nexport const toggleTaskComplete = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el estado de completado\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      completed: !updatedTasks[index].completed\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al cambiar estado de tarea:', error);\n    return null;\n  }\n};\n\n// ==================== INVERSIONES ====================\n\n/**\n * Guardar inversiones en localStorage\n * @param {Array} investments - Inversiones a guardar\n */\nexport const saveInvestments = (investments) => {\n  return saveData('investments', investments);\n};\n\n/**\n * Obtener inversiones de localStorage\n * @returns {Array} - Inversiones guardadas o array vacío\n */\nexport const getInvestments = () => {\n  return getData('investments', []);\n};\n\n/**\n * Agregar una inversión\n * @param {Object} investment - Inversión a agregar\n */\nexport const addInvestment = (investment) => {\n  try {\n    // Generar ID si no tiene\n    const investmentWithId = {\n      ...investment,\n      id: investment.id || generateId()\n    };\n\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Agregar la nueva inversión\n    const updatedInvestments = [...currentInvestments, investmentWithId];\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return investmentWithId;\n  } catch (error) {\n    console.error('Error al agregar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una inversión\n * @param {string} id - ID de la inversión\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateInvestment = (id, updates) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Buscar la inversión\n    const index = currentInvestments.findIndex(i => i.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la inversión\n    const updatedInvestments = [...currentInvestments];\n    updatedInvestments[index] = {\n      ...updatedInvestments[index],\n      ...updates\n    };\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return updatedInvestments[index];\n  } catch (error) {\n    console.error('Error al actualizar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una inversión\n * @param {string} id - ID de la inversión\n */\nexport const deleteInvestment = (id) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Filtrar la inversión a eliminar\n    const updatedInvestments = currentInvestments.filter(i => i.id !== id);\n\n    // Si no se eliminó ninguna inversión, retornar false\n    if (updatedInvestments.length === currentInvestments.length) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar inversión:', error);\n    return false;\n  }\n};\n\n// ==================== METAS FINANCIERAS ====================\n\n/**\n * Guardar metas financieras en localStorage\n * @param {Array} goals - Metas financieras a guardar\n */\nexport const saveFinancialGoals = (goals) => {\n  return saveData('financial_goals', goals);\n};\n\n/**\n * Obtener metas financieras de localStorage\n * @returns {Array} - Metas financieras guardadas o array vacío\n */\nexport const getFinancialGoals = () => {\n  return getData('financial_goals', []);\n};\n\n/**\n * Agregar una meta financiera\n * @param {Object} goal - Meta financiera a agregar\n */\nexport const addFinancialGoal = (goal) => {\n  try {\n    // Generar ID si no tiene\n    const goalWithId = {\n      ...goal,\n      id: goal.id || generateId()\n    };\n\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Agregar la nueva meta\n    const updatedGoals = [...currentGoals, goalWithId];\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return goalWithId;\n  } catch (error) {\n    console.error('Error al agregar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una meta financiera\n * @param {string} id - ID de la meta\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateFinancialGoal = (id, updates) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Buscar la meta\n    const index = currentGoals.findIndex(g => g.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la meta\n    const updatedGoals = [...currentGoals];\n    updatedGoals[index] = {\n      ...updatedGoals[index],\n      ...updates\n    };\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return updatedGoals[index];\n  } catch (error) {\n    console.error('Error al actualizar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una meta financiera\n * @param {string} id - ID de la meta\n */\nexport const deleteFinancialGoal = (id) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Filtrar la meta a eliminar\n    const updatedGoals = currentGoals.filter(g => g.id !== id);\n\n    // Si no se eliminó ninguna meta, retornar false\n    if (updatedGoals.length === currentGoals.length) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar meta financiera:', error);\n    return false;\n  }\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiArrowUp, FiArrowDown, FiDollarSign, FiCreditCard, FiPocket } from 'react-icons/fi';\n\nconst SummaryContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  margin-bottom: 30px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst SummarySection = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst SectionTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SectionIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--primary-color);\n  font-size: 1.2rem;\n`;\n\nconst SummaryCard = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  gap: 12px;\n`;\n\nconst IconContainer = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    switch (props.type) {\n      case 'income': return 'rgba(16, 185, 129, 0.1)';\n      case 'expense': return 'rgba(239, 68, 68, 0.1)';\n      default: return 'rgba(99, 102, 241, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch (props.type) {\n      case 'income': return 'var(--secondary-color)';\n      case 'expense': return 'var(--danger-color)';\n      default: return 'var(--primary-color)';\n    }\n  }};\n  font-size: 1.2rem;\n`;\n\nconst CardTitle = styled.h3`\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 500;\n  color: var(--text-medium);\n`;\n\nconst Amount = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n  color: ${props => {\n    switch (props.type) {\n      case 'income': return 'var(--secondary-color)';\n      case 'expense': return 'var(--danger-color)';\n      default: return 'var(--primary-color)';\n    }\n  }};\n`;\n\nconst SecondaryAmount = styled.div`\n  font-size: 1rem;\n  color: var(--text-light);\n`;\n\nconst formatCurrency = (amount, currency = 'ARS') => {\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency\n  }).format(amount);\n};\n\nconst FinancialSummary = ({ transactions, exchangeRate = 1.1 }) => {\n  const [activeTab, setActiveTab] = useState('total');\n\n  // Calcular totales\n  const income = transactions\n    .filter(t => t.type === 'income')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const expense = transactions\n    .filter(t => t.type === 'expense')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const balance = income - expense;\n\n  // Convertir a dólares\n  const balanceUSD = balance * exchangeRate;\n  const incomeUSD = income * exchangeRate;\n  const expenseUSD = expense * exchangeRate;\n\n  // Calcular totales por plataforma\n  const cashTransactions = transactions.filter(t =>\n    t.platform?.toLowerCase().includes('efectivo') ||\n    !t.platform // Si no tiene plataforma, asumimos que es efectivo\n  );\n\n  const digitalTransactions = transactions.filter(t =>\n    t.platform &&\n    !t.platform.toLowerCase().includes('efectivo')\n  );\n\n  // Calcular totales para efectivo\n  const cashIncome = cashTransactions\n    .filter(t => t.type === 'income')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const cashExpense = cashTransactions\n    .filter(t => t.type === 'expense')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const cashBalance = cashIncome - cashExpense;\n\n  // Calcular totales para billeteras virtuales\n  const digitalIncome = digitalTransactions\n    .filter(t => t.type === 'income')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const digitalExpense = digitalTransactions\n    .filter(t => t.type === 'expense')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const digitalBalance = digitalIncome - digitalExpense;\n\n  // Determinar qué datos mostrar según la pestaña activa\n  let currentBalance, currentIncome, currentExpense, currentBalanceUSD, currentIncomeUSD, currentExpenseUSD;\n\n  switch (activeTab) {\n    case 'cash':\n      currentBalance = cashBalance;\n      currentIncome = cashIncome;\n      currentExpense = cashExpense;\n      currentBalanceUSD = cashBalance * exchangeRate;\n      currentIncomeUSD = cashIncome * exchangeRate;\n      currentExpenseUSD = cashExpense * exchangeRate;\n      break;\n    case 'digital':\n      currentBalance = digitalBalance;\n      currentIncome = digitalIncome;\n      currentExpense = digitalExpense;\n      currentBalanceUSD = digitalBalance * exchangeRate;\n      currentIncomeUSD = digitalIncome * exchangeRate;\n      currentExpenseUSD = digitalExpense * exchangeRate;\n      break;\n    default: // 'total'\n      currentBalance = balance;\n      currentIncome = income;\n      currentExpense = expense;\n      currentBalanceUSD = balanceUSD;\n      currentIncomeUSD = incomeUSD;\n      currentExpenseUSD = expenseUSD;\n  }\n\n  // Estilos para las pestañas\n  const TabsContainer = styled.div`\n    display: flex;\n    margin-bottom: 20px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  `;\n\n  const Tab = styled.button`\n    background: none;\n    border: none;\n    padding: 10px 20px;\n    font-size: 1rem;\n    font-weight: ${props => props.active ? '600' : '400'};\n    color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-medium)'};\n    cursor: pointer;\n    position: relative;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: -1px;\n      left: 0;\n      width: 100%;\n      height: 2px;\n      background-color: ${props => props.active ? 'var(--primary-color)' : 'transparent'};\n      transition: background-color var(--transition-speed);\n    }\n\n    &:hover {\n      color: var(--primary-color);\n    }\n  `;\n\n  return (\n    <div>\n      <TabsContainer>\n        <Tab\n          active={activeTab === 'total'}\n          onClick={() => setActiveTab('total')}\n        >\n          <FiDollarSign />\n          Total\n        </Tab>\n        <Tab\n          active={activeTab === 'cash'}\n          onClick={() => setActiveTab('cash')}\n        >\n          <FiPocket />\n          Efectivo\n        </Tab>\n        <Tab\n          active={activeTab === 'digital'}\n          onClick={() => setActiveTab('digital')}\n        >\n          <FiCreditCard />\n          Billeteras Virtuales\n        </Tab>\n      </TabsContainer>\n\n      <SummaryContainer>\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"balance\">\n              <FiDollarSign />\n            </IconContainer>\n            <CardTitle>Balance</CardTitle>\n          </CardHeader>\n          <Amount type=\"balance\">{formatCurrency(currentBalance)}</Amount>\n          <SecondaryAmount>{formatCurrency(currentBalanceUSD, 'USD')}</SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"income\">\n              <FiArrowUp />\n            </IconContainer>\n            <CardTitle>Ingresos</CardTitle>\n          </CardHeader>\n          <Amount type=\"income\">{formatCurrency(currentIncome)}</Amount>\n          <SecondaryAmount>{formatCurrency(currentIncomeUSD, 'USD')}</SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"expense\">\n              <FiArrowDown />\n            </IconContainer>\n            <CardTitle>Gastos</CardTitle>\n          </CardHeader>\n          <Amount type=\"expense\">{formatCurrency(currentExpense)}</Amount>\n          <SecondaryAmount>{formatCurrency(currentExpenseUSD, 'USD')}</SecondaryAmount>\n        </SummaryCard>\n      </SummaryContainer>\n    </div>\n  );\n};\n\nexport default FinancialSummary;\n","import { useState, useEffect, useRef } from 'react';\n\n/**\n * Hook personalizado para detectar gestos táctiles\n * @param {Object} options - Opciones de configuración\n * @param {number} options.threshold - Umbral de distancia para considerar un gesto (px)\n * @param {number} options.velocityThreshold - Umbral de velocidad para considerar un gesto (px/ms)\n * @param {Function} options.onSwipeLeft - Función a ejecutar al deslizar hacia la izquierda\n * @param {Function} options.onSwipeRight - Función a ejecutar al deslizar hacia la derecha\n * @param {Function} options.onSwipeUp - Función a ejecutar al deslizar hacia arriba\n * @param {Function} options.onSwipeDown - Función a ejecutar al deslizar hacia abajo\n * @param {Function} options.onTap - Función a ejecutar al tocar\n * @param {Function} options.onDoubleTap - Función a ejecutar al tocar dos veces\n * @param {Function} options.onLongPress - Función a ejecutar al mantener presionado\n * @returns {Object} - Propiedades y métodos para manejar gestos\n */\nconst useGestures = ({\n  threshold = 50,\n  velocityThreshold = 0.3,\n  onSwipeLeft = () => {},\n  onSwipeRight = () => {},\n  onSwipeUp = () => {},\n  onSwipeDown = () => {},\n  onTap = () => {},\n  onDoubleTap = () => {},\n  onLongPress = () => {},\n} = {}) => {\n  // Estado para seguir los eventos táctiles\n  const [touchStart, setTouchStart] = useState({ x: 0, y: 0, time: 0 });\n  const [touchEnd, setTouchEnd] = useState({ x: 0, y: 0, time: 0 });\n  const [isTouching, setIsTouching] = useState(false);\n  \n  // Referencias para manejar doble toque y toque largo\n  const lastTap = useRef(0);\n  const longPressTimer = useRef(null);\n  const longPressThreshold = 500; // ms\n  const doubleTapThreshold = 300; // ms\n  \n  // Limpiar el temporizador de toque largo al desmontar\n  useEffect(() => {\n    return () => {\n      if (longPressTimer.current) {\n        clearTimeout(longPressTimer.current);\n      }\n    };\n  }, []);\n  \n  // Manejar el inicio del toque\n  const handleTouchStart = (e) => {\n    const touch = e.touches[0];\n    const now = Date.now();\n    \n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY,\n      time: now,\n    });\n    \n    setTouchEnd({\n      x: touch.clientX,\n      y: touch.clientY,\n      time: now,\n    });\n    \n    setIsTouching(true);\n    \n    // Iniciar temporizador para toque largo\n    longPressTimer.current = setTimeout(() => {\n      onLongPress(e);\n    }, longPressThreshold);\n  };\n  \n  // Manejar el movimiento del toque\n  const handleTouchMove = (e) => {\n    const touch = e.touches[0];\n    const now = Date.now();\n    \n    setTouchEnd({\n      x: touch.clientX,\n      y: touch.clientY,\n      time: now,\n    });\n    \n    // Si el usuario mueve el dedo, cancelar el toque largo\n    if (\n      Math.abs(touch.clientX - touchStart.x) > 10 ||\n      Math.abs(touch.clientY - touchStart.y) > 10\n    ) {\n      if (longPressTimer.current) {\n        clearTimeout(longPressTimer.current);\n        longPressTimer.current = null;\n      }\n    }\n  };\n  \n  // Manejar el fin del toque\n  const handleTouchEnd = (e) => {\n    const now = Date.now();\n    setIsTouching(false);\n    \n    // Cancelar el temporizador de toque largo\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current);\n      longPressTimer.current = null;\n    }\n    \n    // Calcular distancias y velocidad\n    const deltaX = touchEnd.x - touchStart.x;\n    const deltaY = touchEnd.y - touchStart.y;\n    const timeElapsed = touchEnd.time - touchStart.time || 1; // Evitar división por cero\n    const velocity = Math.sqrt(deltaX * deltaX + deltaY * deltaY) / timeElapsed;\n    \n    // Detectar gestos de deslizamiento\n    if (Math.abs(deltaX) > threshold || Math.abs(deltaY) > threshold || velocity > velocityThreshold) {\n      // Determinar la dirección del deslizamiento\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        // Deslizamiento horizontal\n        if (deltaX > 0) {\n          onSwipeRight(e);\n        } else {\n          onSwipeLeft(e);\n        }\n      } else {\n        // Deslizamiento vertical\n        if (deltaY > 0) {\n          onSwipeDown(e);\n        } else {\n          onSwipeUp(e);\n        }\n      }\n    } else {\n      // Detectar toque o doble toque\n      const timeSinceLastTap = now - lastTap.current;\n      \n      if (timeSinceLastTap < doubleTapThreshold) {\n        // Doble toque\n        onDoubleTap(e);\n        lastTap.current = 0; // Reiniciar para evitar triples toques\n      } else {\n        // Toque simple\n        onTap(e);\n        lastTap.current = now;\n      }\n    }\n  };\n  \n  // Manejar la cancelación del toque\n  const handleTouchCancel = () => {\n    setIsTouching(false);\n    \n    // Cancelar el temporizador de toque largo\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current);\n      longPressTimer.current = null;\n    }\n  };\n  \n  // Propiedades para adjuntar a un elemento\n  const gestureHandlers = {\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    onTouchCancel: handleTouchCancel,\n  };\n  \n  return {\n    gestureHandlers,\n    touchStart,\n    touchEnd,\n    isTouching,\n  };\n};\n\nexport default useGestures;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\nimport useGestures from '../../hooks/useGestures';\n\n// Contenedor principal\nconst CardContainer = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  touch-action: pan-y;\n  user-select: none;\n`;\n\n// Tarjeta animada\nconst AnimatedCard = styled(animated.div)`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 16px;\n  margin-bottom: 16px;\n  position: relative;\n  z-index: 1;\n`;\n\n// Acciones a la izquierda (aparecen al deslizar a la derecha)\nconst LeftActions = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  color: white;\n  background-color: var(--success-color);\n  border-radius: var(--border-radius);\n`;\n\n// Acciones a la derecha (aparecen al deslizar a la izquierda)\nconst RightActions = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  color: white;\n  background-color: var(--danger-color);\n  border-radius: var(--border-radius);\n`;\n\n/**\n * Componente de tarjeta deslizable\n * @param {Object} props - Propiedades del componente\n * @param {React.ReactNode} props.children - Contenido de la tarjeta\n * @param {React.ReactNode} props.leftAction - Contenido de la acción izquierda\n * @param {React.ReactNode} props.rightAction - Contenido de la acción derecha\n * @param {Function} props.onSwipeLeft - Función a ejecutar al deslizar a la izquierda\n * @param {Function} props.onSwipeRight - Función a ejecutar al deslizar a la derecha\n * @param {Function} props.onTap - Función a ejecutar al tocar\n * @param {Object} props.style - Estilos adicionales\n * @returns {JSX.Element} - Componente de tarjeta deslizable\n */\nconst SwipeableCard = ({\n  children,\n  leftAction,\n  rightAction,\n  onSwipeLeft,\n  onSwipeRight,\n  onTap,\n  style,\n  ...props\n}) => {\n  const [swiped, setSwiped] = useState(false);\n  \n  // Configurar animación con react-spring\n  const [{ x }, api] = useSpring(() => ({\n    x: 0,\n    config: { tension: 300, friction: 20 },\n  }));\n  \n  // Configurar gestos\n  const { gestureHandlers } = useGestures({\n    threshold: 80,\n    velocityThreshold: 0.5,\n    onSwipeLeft: () => {\n      if (rightAction && onSwipeLeft) {\n        api.start({ x: -200 });\n        setSwiped(true);\n        setTimeout(() => {\n          onSwipeLeft();\n        }, 300);\n      } else {\n        api.start({ x: 0 });\n      }\n    },\n    onSwipeRight: () => {\n      if (leftAction && onSwipeRight) {\n        api.start({ x: 200 });\n        setSwiped(true);\n        setTimeout(() => {\n          onSwipeRight();\n        }, 300);\n      } else {\n        api.start({ x: 0 });\n      }\n    },\n    onTap: () => {\n      if (onTap) {\n        onTap();\n      }\n    },\n  });\n  \n  // Manejar el movimiento del dedo\n  const handleTouchMove = (e) => {\n    if (swiped) return;\n    \n    gestureHandlers.onTouchMove(e);\n    \n    const touch = e.touches[0];\n    const deltaX = touch.clientX - gestureHandlers.touchStart.x;\n    \n    // Limitar el desplazamiento\n    if (\n      (deltaX > 0 && !leftAction) ||\n      (deltaX < 0 && !rightAction) ||\n      Math.abs(deltaX) > 200\n    ) {\n      return;\n    }\n    \n    api.start({ x: deltaX });\n  };\n  \n  return (\n    <CardContainer {...props}>\n      {leftAction && <LeftActions>{leftAction}</LeftActions>}\n      {rightAction && <RightActions>{rightAction}</RightActions>}\n      \n      <AnimatedCard\n        style={{\n          ...style,\n          transform: x.to(x => `translateX(${x}px)`),\n        }}\n        {...gestureHandlers}\n        onTouchMove={handleTouchMove}\n      >\n        {children}\n      </AnimatedCard>\n    </CardContainer>\n  );\n};\n\nexport default SwipeableCard;\n","import React, { memo, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { FiArrowUp, FiArrowDown, FiEdit2, FiTrash2, FiDollarSign, FiCreditCard, FiCheck } from 'react-icons/fi';\nimport SwipeableCard from '../common/SwipeableCard';\n\nconst TransactionContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 16px;\n  margin-bottom: 12px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: var(--card-shadow-hover);\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n`;\n\nconst TransactionInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nconst IconContainer = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.type === 'income'\n    ? 'rgba(16, 185, 129, 0.1)'\n    : 'rgba(239, 68, 68, 0.1)'\n  };\n  color: ${props => props.type === 'income'\n    ? 'var(--secondary-color)'\n    : 'var(--danger-color)'\n  };\n  font-size: 1.2rem;\n`;\n\nconst TransactionDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TransactionTitle = styled.h3`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst TransactionCategory = styled.span`\n  font-size: 0.85rem;\n  color: var(--text-medium);\n  margin-top: 4px;\n`;\n\nconst TransactionPlatform = styled.span`\n  font-size: 0.85rem;\n  color: ${props => props.type === 'cash' ? 'var(--accent-color)' : 'var(--primary-color)'};\n  margin-top: 4px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nconst TransactionDate = styled.span`\n  font-size: 0.85rem;\n  color: var(--text-light);\n  margin-top: 4px;\n`;\n\nconst TransactionAmount = styled.div`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${props => props.type === 'income'\n    ? 'var(--secondary-color)'\n    : 'var(--danger-color)'\n  };\n`;\n\nconst TransactionActions = styled.div`\n  display: flex;\n  gap: 8px;\n\n  @media (max-width: 768px) {\n    margin-left: auto;\n  }\n`;\n\nconst TransactionAmountContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\n// Estilos para las acciones de deslizamiento\nconst SwipeAction = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  height: 100%;\n  width: 80px;\n  color: white;\n`;\n\nconst DeleteAction = styled(SwipeAction)`\n  background-color: var(--danger-color);\n`;\n\nconst EditAction = styled(SwipeAction)`\n  background-color: var(--primary-color);\n`;\n\nconst formatCurrency = (amount, currency = 'ARS') => {\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency\n  }).format(amount);\n};\n\nconst formatDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('es-ES');\n};\n\nconst getCategoryName = (category) => {\n  // Intentar obtener categorías personalizadas del localStorage\n  let expenseCategories = [];\n  let incomeCategories = [];\n\n  try {\n    const savedExpenseCategories = localStorage.getItem('expenseCategories');\n    const savedIncomeCategories = localStorage.getItem('incomeCategories');\n\n    if (savedExpenseCategories) {\n      expenseCategories = JSON.parse(savedExpenseCategories);\n    }\n\n    if (savedIncomeCategories) {\n      incomeCategories = JSON.parse(savedIncomeCategories);\n    }\n  } catch (error) {\n    console.error('Error al cargar categorías:', error);\n  }\n\n  // Buscar en las categorías personalizadas\n  const allCategories = [...expenseCategories, ...incomeCategories];\n  const foundCategory = allCategories.find(cat => cat.id === category);\n\n  if (foundCategory) {\n    return foundCategory.name;\n  }\n\n  // Categorías por defecto si no se encuentra\n  const defaultCategories = {\n    food: 'Alimentación',\n    transport: 'Transporte',\n    housing: 'Vivienda',\n    entertainment: 'Entretenimiento',\n    utilities: 'Servicios',\n    health: 'Salud',\n    education: 'Educación',\n    shopping: 'Compras',\n    salary: 'Salario',\n    investment: 'Inversión',\n    gift: 'Regalo',\n    other: 'Otro'\n  };\n\n  return defaultCategories[category] || category;\n};\n\n// Función para extraer información de la plataforma\nconst getPlatformInfo = (platformString) => {\n  if (!platformString) {\n    return { type: 'virtual', name: '' };\n  }\n\n  // Verificar si la plataforma tiene el formato \"tipo:nombre\"\n  if (platformString.includes(':')) {\n    const [type, name] = platformString.split(':');\n    return { type, name };\n  }\n\n  // Si no tiene el formato, intentar determinar el tipo\n  try {\n    // Intentar obtener plataformas guardadas\n    const savedCashPlatforms = localStorage.getItem('cashPlatforms');\n\n    if (savedCashPlatforms) {\n      const cashPlatforms = JSON.parse(savedCashPlatforms);\n      if (cashPlatforms.includes(platformString)) {\n        return { type: 'cash', name: platformString };\n      }\n    }\n\n    // Plataformas de efectivo por defecto\n    const defaultCashPlatforms = ['Efectivo', 'Caja chica', 'Caja fuerte'];\n    if (defaultCashPlatforms.includes(platformString)) {\n      return { type: 'cash', name: platformString };\n    }\n\n    return { type: 'virtual', name: platformString };\n  } catch (error) {\n    console.error('Error al determinar tipo de plataforma:', error);\n    return { type: 'virtual', name: platformString };\n  }\n};\n\nconst TransactionItem = ({ transaction, onEdit, onDelete }) => {\n  const { id, title, amount, type, category, platform, date } = transaction;\n  const { type: platformType, name: platformName } = getPlatformInfo(platform);\n\n  // Memorizar los manejadores de eventos para evitar re-renderizados innecesarios\n  const handleEdit = useCallback(() => {\n    onEdit(transaction);\n  }, [transaction, onEdit]);\n\n  const handleDelete = useCallback(() => {\n    onDelete(id);\n  }, [id, onDelete]);\n\n  // Memorizar el formato de la fecha y el monto para evitar cálculos repetidos\n  const formattedDate = useMemo(() => formatDate(date), [date]);\n  const formattedAmount = useMemo(() => formatCurrency(amount), [amount]);\n  const categoryName = useMemo(() => getCategoryName(category), [category]);\n\n  // Detectar si estamos en un dispositivo móvil\n  const isMobile = useMemo(() => window.innerWidth <= 768, []);\n\n  // Si estamos en un dispositivo móvil, usar SwipeableCard\n  if (isMobile) {\n    return (\n      <SwipeableCard\n        leftAction={<EditAction><FiEdit2 /></EditAction>}\n        rightAction={<DeleteAction><FiTrash2 /></DeleteAction>}\n        onSwipeLeft={handleDelete}\n        onSwipeRight={handleEdit}\n        onTap={handleEdit}\n      >\n        <TransactionInfo>\n          <IconContainer type={type}>\n            {type === 'income' ? <FiArrowUp /> : <FiArrowDown />}\n          </IconContainer>\n\n          <TransactionDetails>\n            <TransactionTitle>{title}</TransactionTitle>\n            <TransactionCategory>{categoryName}</TransactionCategory>\n            {platform && (\n              <TransactionPlatform type={platformType}>\n                {platformType === 'cash' ? <FiDollarSign /> : <FiCreditCard />}\n                {platformName}\n              </TransactionPlatform>\n            )}\n            <TransactionDate>{formattedDate}</TransactionDate>\n          </TransactionDetails>\n\n          <TransactionAmount type={type} style={{ marginLeft: 'auto' }}>\n            {type === 'income' ? '+' : '-'} {formattedAmount}\n          </TransactionAmount>\n        </TransactionInfo>\n      </SwipeableCard>\n    );\n  }\n\n  // En dispositivos de escritorio, usar el diseño original\n  return (\n    <TransactionContainer>\n      <TransactionInfo>\n        <IconContainer type={type}>\n          {type === 'income' ? <FiArrowUp /> : <FiArrowDown />}\n        </IconContainer>\n\n        <TransactionDetails>\n          <TransactionTitle>{title}</TransactionTitle>\n          <TransactionCategory>{categoryName}</TransactionCategory>\n          {platform && (\n            <TransactionPlatform type={platformType}>\n              {platformType === 'cash' ? <FiDollarSign /> : <FiCreditCard />}\n              {platformName}\n            </TransactionPlatform>\n          )}\n          <TransactionDate>{formattedDate}</TransactionDate>\n        </TransactionDetails>\n      </TransactionInfo>\n\n      <TransactionAmountContainer>\n        <TransactionAmount type={type}>\n          {type === 'income' ? '+' : '-'} {formattedAmount}\n        </TransactionAmount>\n\n        <TransactionActions>\n          <ActionButton onClick={handleEdit} color=\"var(--primary-color)\" aria-label=\"Editar\">\n            <FiEdit2 />\n          </ActionButton>\n          <ActionButton onClick={handleDelete} color=\"var(--danger-color)\" aria-label=\"Eliminar\">\n            <FiTrash2 />\n          </ActionButton>\n        </TransactionActions>\n      </TransactionAmountContainer>\n    </TransactionContainer>\n  );\n};\n\n// Exportar componente memorizado para evitar re-renderizados innecesarios\nexport default memo(TransactionItem);\n","import { useState, useEffect, useCallback, useRef } from 'react';\n\n/**\n * Hook personalizado para carga progresiva de datos\n * @param {Function} fetchFunction - Función para obtener datos\n * @param {Object} options - Opciones de configuración\n * @param {number} options.initialPageSize - Tamaño inicial de página\n * @param {number} options.incrementSize - Incremento de tamaño en cada carga\n * @param {number} options.maxItems - Número máximo de elementos a cargar\n * @param {boolean} options.loadOnMount - Cargar datos al montar el componente\n * @param {Array} options.dependencies - Dependencias para recargar datos\n * @returns {Object} - Estado y funciones para manejar la carga progresiva\n */\nconst useProgressiveLoading = (\n  fetchFunction,\n  {\n    initialPageSize = 10,\n    incrementSize = 10,\n    maxItems = 100,\n    loadOnMount = true,\n    dependencies = []\n  } = {}\n) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasMore, setHasMore] = useState(true);\n  const [pageSize, setPageSize] = useState(initialPageSize);\n  const [totalCount, setTotalCount] = useState(0);\n  \n  // Referencia para evitar cargas duplicadas\n  const loadingRef = useRef(false);\n  \n  // Función para cargar datos\n  const loadData = useCallback(async (reset = false) => {\n    // Evitar cargas duplicadas\n    if (loadingRef.current) return;\n    \n    try {\n      loadingRef.current = true;\n      setLoading(true);\n      setError(null);\n      \n      // Si es reset, reiniciar el estado\n      if (reset) {\n        setData([]);\n        setPageSize(initialPageSize);\n        setHasMore(true);\n      }\n      \n      // Calcular parámetros de paginación\n      const start = reset ? 0 : data.length;\n      const end = reset ? initialPageSize : data.length + pageSize;\n      \n      // Llamar a la función de obtención de datos\n      const result = await fetchFunction({ start, end });\n      \n      // Actualizar estado\n      if (reset) {\n        setData(result.data || []);\n      } else {\n        setData(prevData => [...prevData, ...(result.data || [])]);\n      }\n      \n      // Actualizar contador total si está disponible\n      if (result.count !== undefined) {\n        setTotalCount(result.count);\n      }\n      \n      // Verificar si hay más datos para cargar\n      const loadedCount = reset ? (result.data || []).length : data.length + (result.data || []).length;\n      const hasMoreData = result.hasMore !== undefined \n        ? result.hasMore \n        : (result.count !== undefined ? loadedCount < result.count : (result.data || []).length > 0);\n      \n      setHasMore(hasMoreData && loadedCount < maxItems);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  }, [fetchFunction, data.length, pageSize, initialPageSize, maxItems]);\n  \n  // Función para cargar más datos\n  const loadMore = useCallback(() => {\n    if (!loading && hasMore) {\n      setPageSize(prevSize => prevSize + incrementSize);\n      loadData();\n    }\n  }, [loading, hasMore, incrementSize, loadData]);\n  \n  // Función para recargar datos\n  const refresh = useCallback(() => {\n    return loadData(true);\n  }, [loadData]);\n  \n  // Cargar datos al montar el componente o cuando cambian las dependencias\n  useEffect(() => {\n    if (loadOnMount) {\n      refresh();\n    }\n  }, [loadOnMount, refresh, ...dependencies]);\n  \n  return {\n    data,\n    loading,\n    error,\n    hasMore,\n    loadMore,\n    refresh,\n    totalCount,\n    loadedCount: data.length\n  };\n};\n\nexport default useProgressiveLoading;\n","import React, { useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { FiLoader } from 'react-icons/fi';\nimport useProgressiveLoading from '../../hooks/useProgressiveLoading';\n\n// Estilos\nconst ListContainer = styled.div`\n  position: relative;\n`;\n\nconst LoadingIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  color: var(--text-medium);\n  \n  svg {\n    animation: spin 1s linear infinite;\n    margin-right: 8px;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst LoadMoreButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius);\n  padding: 8px 16px;\n  font-size: 0.9rem;\n  cursor: pointer;\n  margin: 16px auto;\n  display: block;\n  transition: all 0.3s;\n  \n  &:hover {\n    background-color: var(--primary-color-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  text-align: center;\n  padding: 16px;\n  margin: 16px 0;\n  background-color: rgba(255, 99, 132, 0.1);\n  border-radius: var(--border-radius);\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  padding: 32px 16px;\n  color: var(--text-medium);\n`;\n\n/**\n * Componente para carga progresiva de listas\n * @param {Object} props - Propiedades del componente\n * @param {Function} props.fetchFunction - Función para obtener datos\n * @param {Function} props.renderItem - Función para renderizar cada elemento\n * @param {string} props.keyExtractor - Función para extraer la clave de cada elemento\n * @param {number} props.initialPageSize - Tamaño inicial de página\n * @param {number} props.incrementSize - Incremento de tamaño en cada carga\n * @param {boolean} props.useInfiniteScroll - Usar scroll infinito en lugar de botón\n * @param {string} props.emptyMessage - Mensaje cuando no hay datos\n * @param {string} props.loadingMessage - Mensaje durante la carga\n * @param {string} props.errorMessage - Mensaje de error\n * @param {string} props.loadMoreText - Texto del botón de cargar más\n * @param {Array} props.dependencies - Dependencias para recargar datos\n * @returns {JSX.Element} - Componente de lista progresiva\n */\nconst ProgressiveList = ({\n  fetchFunction,\n  renderItem,\n  keyExtractor,\n  initialPageSize = 10,\n  incrementSize = 10,\n  useInfiniteScroll = true,\n  emptyMessage = 'No hay elementos para mostrar',\n  loadingMessage = 'Cargando...',\n  errorMessage = 'Error al cargar los datos',\n  loadMoreText = 'Cargar más',\n  dependencies = [],\n  ...props\n}) => {\n  // Referencia al elemento observado para scroll infinito\n  const observerTarget = useRef(null);\n  \n  // Usar hook de carga progresiva\n  const {\n    data,\n    loading,\n    error,\n    hasMore,\n    loadMore,\n    refresh,\n    totalCount,\n    loadedCount\n  } = useProgressiveLoading(fetchFunction, {\n    initialPageSize,\n    incrementSize,\n    loadOnMount: true,\n    dependencies\n  });\n  \n  // Configurar observer para scroll infinito\n  useEffect(() => {\n    if (!useInfiniteScroll || !observerTarget.current || loading || !hasMore) {\n      return;\n    }\n    \n    const observer = new IntersectionObserver(\n      entries => {\n        if (entries[0].isIntersecting) {\n          loadMore();\n        }\n      },\n      { threshold: 0.1 }\n    );\n    \n    observer.observe(observerTarget.current);\n    \n    return () => {\n      if (observerTarget.current) {\n        observer.unobserve(observerTarget.current);\n      }\n    };\n  }, [useInfiniteScroll, loading, hasMore, loadMore]);\n  \n  // Renderizar elementos de la lista\n  const renderItems = useCallback(() => {\n    if (data.length === 0 && !loading) {\n      return <EmptyMessage>{emptyMessage}</EmptyMessage>;\n    }\n    \n    return data.map((item, index) => (\n      <React.Fragment key={keyExtractor ? keyExtractor(item) : index}>\n        {renderItem(item, index)}\n      </React.Fragment>\n    ));\n  }, [data, loading, emptyMessage, renderItem, keyExtractor]);\n  \n  return (\n    <ListContainer {...props}>\n      {renderItems()}\n      \n      {error && (\n        <ErrorMessage>\n          {errorMessage}: {error.message}\n        </ErrorMessage>\n      )}\n      \n      {loading && (\n        <LoadingIndicator>\n          <FiLoader /> {loadingMessage}\n        </LoadingIndicator>\n      )}\n      \n      {!useInfiniteScroll && hasMore && !loading && (\n        <LoadMoreButton onClick={loadMore} disabled={loading}>\n          {loadMoreText}\n        </LoadMoreButton>\n      )}\n      \n      {useInfiniteScroll && hasMore && (\n        <div ref={observerTarget} style={{ height: '20px' }} />\n      )}\n      \n      {totalCount > 0 && (\n        <div style={{ textAlign: 'center', color: 'var(--text-light)', fontSize: '0.9rem', margin: '8px 0' }}>\n          Mostrando {loadedCount} de {totalCount} elementos\n        </div>\n      )}\n    </ListContainer>\n  );\n};\n\nexport default ProgressiveList;\n","import { useMemo } from 'react';\n\n/**\n * Hook personalizado para memoizar listas de elementos\n * Útil para evitar re-renderizados innecesarios en listas\n * @param {Array} list - Lista de elementos\n * @param {Function} getItemKey - Función para obtener la clave única de cada elemento\n * @param {Function} mapItem - Función para transformar cada elemento\n * @param {Array} deps - Dependencias adicionales\n * @returns {Array} - Lista memoizada\n */\nconst useMemoizedList = (list, getItemKey, mapItem, deps = []) => {\n  // Memoizar las claves de los elementos\n  const keys = useMemo(() => {\n    return list.map(item => getItemKey(item));\n  }, [list, getItemKey]);\n  \n  // Memoizar la lista transformada\n  return useMemo(() => {\n    return list.map(item => mapItem(item));\n  }, [list, mapItem, keys, ...deps]);\n};\n\nexport default useMemoizedList;\n","import React, { memo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport TransactionItem from './TransactionItem';\nimport ProgressiveList from '../common/ProgressiveList';\nimport { getTransactionsPaginated } from '../../services/transactionService';\nimport useMemoizedList from '../../hooks/useMemoizedList';\nimport AnimatedButton from '../common/AnimatedButton';\n\nconst ListContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 30px 0;\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n`;\n\nconst FilterInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  color: var(--text-medium);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n`;\n\nconst FilterCount = styled.span`\n  font-weight: 500;\n`;\n\n// Componente de elemento de transacción memorizado\nconst MemoizedTransactionItem = memo(TransactionItem);\n\n/**\n * Componente de lista de transacciones con carga progresiva\n * @param {Object} props - Propiedades del componente\n * @param {Array} props.transactions - Lista de transacciones (opcional, para compatibilidad)\n * @param {Function} props.onEditTransaction - Función para editar transacción\n * @param {Function} props.onDeleteTransaction - Función para eliminar transacción\n * @param {Object} props.filters - Filtros a aplicar\n * @param {Object} props.sortConfig - Configuración de ordenamiento\n * @param {boolean} props.useProgressiveLoading - Usar carga progresiva (por defecto: true)\n * @returns {JSX.Element} - Componente de lista de transacciones\n */\nconst TransactionList = ({\n  transactions,\n  onEditTransaction,\n  onDeleteTransaction,\n  filters = {},\n  sortConfig = { column: 'date', direction: 'desc' },\n  useProgressiveLoading = true\n}) => {\n  // Función para obtener transacciones paginadas\n  const fetchTransactions = useCallback(async ({ start, end }) => {\n    try {\n      // Si se proporcionan transacciones directamente, usarlas (para compatibilidad)\n      if (transactions) {\n        return {\n          data: transactions.slice(start, end),\n          count: transactions.length,\n          hasMore: transactions.length > end\n        };\n      }\n\n      // Si no, obtener de la API con paginación\n      return await getTransactionsPaginated({\n        start,\n        end,\n        filters,\n        sort: {\n          column: sortConfig.column || 'date',\n          direction: sortConfig.direction || 'desc'\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n      return { data: [], count: 0, hasMore: false };\n    }\n  }, [transactions, filters, sortConfig]);\n\n  // Función para renderizar cada transacción\n  const renderTransaction = useCallback((transaction) => (\n    <MemoizedTransactionItem\n      key={transaction.id}\n      transaction={transaction}\n      onEdit={onEditTransaction}\n      onDelete={onDeleteTransaction}\n    />\n  ), [onEditTransaction, onDeleteTransaction]);\n\n  // Función para extraer la clave de cada transacción\n  const getTransactionKey = useCallback((transaction) => transaction.id, []);\n\n  // Usar hook de memoización de listas para optimizar rendimiento\n  const memoizedItems = useMemoizedList(\n    transactions || [],\n    getTransactionKey,\n    renderTransaction,\n    [onEditTransaction, onDeleteTransaction]\n  );\n\n  // Si no se usa carga progresiva, renderizar la lista tradicional\n  if (!useProgressiveLoading && transactions) {\n    if (!transactions || transactions.length === 0) {\n      return (\n        <ListContainer>\n          <EmptyMessage>\n            No hay transacciones. ¡Registra una nueva!\n          </EmptyMessage>\n        </ListContainer>\n      );\n    }\n\n    return (\n      <ListContainer>\n        {memoizedItems}\n      </ListContainer>\n    );\n  }\n\n  // Renderizar con carga progresiva\n  return (\n    <ListContainer>\n      <ProgressiveList\n        fetchFunction={fetchTransactions}\n        renderItem={renderTransaction}\n        keyExtractor={getTransactionKey}\n        initialPageSize={10}\n        incrementSize={10}\n        useInfiniteScroll={true}\n        emptyMessage=\"No hay transacciones. ¡Registra una nueva!\"\n        loadingMessage=\"Cargando transacciones...\"\n        errorMessage=\"Error al cargar las transacciones\"\n        loadMoreText=\"Cargar más transacciones\"\n        dependencies={[filters, sortConfig]}\n      />\n    </ListContainer>\n  );\n};\n\n// Exportar componente memorizado para evitar re-renderizados innecesarios\nexport default memo(TransactionList);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus, FiEdit2, FiTrash2, FiX, FiCheck, FiSave } from 'react-icons/fi';\n\nconst ManagerContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst ManagerHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst ManagerTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst Tab = styled.button`\n  background: none;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  font-weight: ${props => props.active ? '600' : '400'};\n  color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-medium)'};\n  cursor: pointer;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: ${props => props.active ? 'var(--primary-color)' : 'transparent'};\n    transition: background-color var(--transition-speed);\n  }\n\n  &:hover {\n    color: var(--primary-color);\n  }\n`;\n\nconst CategoriesList = styled.div`\n  margin-bottom: 20px;\n  max-height: 300px;\n  overflow-y: auto;\n`;\n\nconst CategoryItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  margin-bottom: 8px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  transition: all var(--transition-speed);\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst CategoryName = styled.div`\n  font-weight: 500;\n  color: var(--text-dark);\n`;\n\nconst CategoryActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst AddCategoryForm = styled.form`\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst AddButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 0 16px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 2px 4px rgba(99, 102, 241, 0.2);\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst SaveButton = styled.button`\n  background-color: var(--secondary-color);\n  color: white;\n  border: none;\n  padding: 10px 16px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  box-shadow: 0 2px 4px rgba(16, 185, 129, 0.2);\n  margin-top: 16px;\n  width: 100%;\n\n  &:hover {\n    background-color: var(--secondary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(16, 185, 129, 0.3);\n  }\n`;\n\nconst EditForm = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst EditInput = styled.input`\n  flex: 1;\n  padding: 8px 12px;\n  border: 1px solid var(--primary-color);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst EditActions = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nconst CategoryManager = ({ onClose, onCategoriesChange }) => {\n  const [activeTab, setActiveTab] = useState('expense');\n  const [expenseCategories, setExpenseCategories] = useState([\n    { id: 'food', name: 'Alimentación' },\n    { id: 'transport', name: 'Transporte' },\n    { id: 'housing', name: 'Vivienda' },\n    { id: 'entertainment', name: 'Entretenimiento' },\n    { id: 'utilities', name: 'Servicios' },\n    { id: 'health', name: 'Salud' },\n    { id: 'education', name: 'Educación' },\n    { id: 'shopping', name: 'Compras' },\n    { id: 'other', name: 'Otro' }\n  ]);\n\n  const [incomeCategories, setIncomeCategories] = useState([\n    { id: 'salary', name: 'Salario' },\n    { id: 'investment', name: 'Inversión' },\n    { id: 'gift', name: 'Regalo' },\n    { id: 'other', name: 'Otro' }\n  ]);\n\n  const [newCategory, setNewCategory] = useState('');\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editValue, setEditValue] = useState('');\n\n\n\n  // Cargar categorías guardadas al iniciar\n  useEffect(() => {\n    const savedExpenseCategories = localStorage.getItem('expenseCategories');\n    const savedIncomeCategories = localStorage.getItem('incomeCategories');\n\n    if (savedExpenseCategories) {\n      setExpenseCategories(JSON.parse(savedExpenseCategories));\n    }\n\n    if (savedIncomeCategories) {\n      setIncomeCategories(JSON.parse(savedIncomeCategories));\n    }\n  }, []);\n\n  // Función para guardar categorías manualmente\n  const saveCategories = () => {\n    try {\n      localStorage.setItem('expenseCategories', JSON.stringify(expenseCategories));\n      localStorage.setItem('incomeCategories', JSON.stringify(incomeCategories));\n\n      // Notificar al componente padre sobre el cambio de categorías\n      onCategoriesChange({\n        expense: expenseCategories,\n        income: incomeCategories\n      });\n\n      alert('Categorías guardadas correctamente');\n    } catch (error) {\n      console.error('Error al guardar categorías:', error);\n      alert('Error al guardar categorías');\n    }\n  };\n\n  const handleAddCategory = (e) => {\n    e.preventDefault();\n\n    if (!newCategory.trim()) return;\n\n    const newId = newCategory.toLowerCase().replace(/\\s+/g, '_');\n\n    if (activeTab === 'expense') {\n      // Verificar si ya existe\n      if (expenseCategories.some(cat => cat.id === newId || cat.name === newCategory)) {\n        alert('Esta categoría ya existe');\n        return;\n      }\n\n      setExpenseCategories([...expenseCategories, { id: newId, name: newCategory }]);\n    } else {\n      // Verificar si ya existe\n      if (incomeCategories.some(cat => cat.id === newId || cat.name === newCategory)) {\n        alert('Esta categoría ya existe');\n        return;\n      }\n\n      setIncomeCategories([...incomeCategories, { id: newId, name: newCategory }]);\n    }\n\n    setNewCategory('');\n  };\n\n  const handleEditCategory = (category) => {\n    setEditingCategory(category.id);\n    setEditValue(category.name);\n  };\n\n  const handleSaveEdit = (categoryId) => {\n    if (!editValue.trim()) return;\n\n    if (activeTab === 'expense') {\n      // Verificar si ya existe (excepto la que estamos editando)\n      if (expenseCategories.some(cat => cat.id !== categoryId && cat.name === editValue)) {\n        alert('Ya existe una categoría con este nombre');\n        return;\n      }\n\n      setExpenseCategories(expenseCategories.map(cat =>\n        cat.id === categoryId ? { ...cat, name: editValue } : cat\n      ));\n    } else {\n      // Verificar si ya existe (excepto la que estamos editando)\n      if (incomeCategories.some(cat => cat.id !== categoryId && cat.name === editValue)) {\n        alert('Ya existe una categoría con este nombre');\n        return;\n      }\n\n      setIncomeCategories(incomeCategories.map(cat =>\n        cat.id === categoryId ? { ...cat, name: editValue } : cat\n      ));\n    }\n\n    setEditingCategory(null);\n    setEditValue('');\n  };\n\n  const handleCancelEdit = () => {\n    setEditingCategory(null);\n    setEditValue('');\n  };\n\n  const handleDeleteCategory = (categoryId) => {\n    // No permitir eliminar la categoría \"Otro\"\n    if (categoryId === 'other') {\n      alert('No se puede eliminar la categoría \"Otro\"');\n      return;\n    }\n\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta categoría?')) {\n      if (activeTab === 'expense') {\n        setExpenseCategories(expenseCategories.filter(cat => cat.id !== categoryId));\n      } else {\n        setIncomeCategories(incomeCategories.filter(cat => cat.id !== categoryId));\n      }\n    }\n  };\n\n  const currentCategories = activeTab === 'expense' ? expenseCategories : incomeCategories;\n\n  return (\n    <ManagerContainer>\n      <ManagerHeader>\n        <ManagerTitle>Gestionar Categorías</ManagerTitle>\n        <CloseButton onClick={onClose}>\n          <FiX />\n        </CloseButton>\n      </ManagerHeader>\n\n      <TabsContainer>\n        <Tab\n          active={activeTab === 'expense'}\n          onClick={() => setActiveTab('expense')}\n        >\n          Categorías de Gastos\n        </Tab>\n        <Tab\n          active={activeTab === 'income'}\n          onClick={() => setActiveTab('income')}\n        >\n          Categorías de Ingresos\n        </Tab>\n      </TabsContainer>\n\n      <CategoriesList>\n        {currentCategories.map(category => (\n          <CategoryItem key={category.id}>\n            {editingCategory === category.id ? (\n              <EditForm>\n                <EditInput\n                  type=\"text\"\n                  value={editValue}\n                  onChange={(e) => setEditValue(e.target.value)}\n                  autoFocus\n                />\n                <EditActions>\n                  <ActionButton\n                    onClick={() => handleSaveEdit(category.id)}\n                    color=\"var(--secondary-color)\"\n                  >\n                    <FiCheck />\n                  </ActionButton>\n                  <ActionButton\n                    onClick={handleCancelEdit}\n                    color=\"var(--danger-color)\"\n                  >\n                    <FiX />\n                  </ActionButton>\n                </EditActions>\n              </EditForm>\n            ) : (\n              <>\n                <CategoryName>{category.name}</CategoryName>\n                <CategoryActions>\n                  <ActionButton\n                    onClick={() => handleEditCategory(category)}\n                    color=\"var(--primary-color)\"\n                    disabled={category.id === 'other'}\n                  >\n                    <FiEdit2 />\n                  </ActionButton>\n                  <ActionButton\n                    onClick={() => handleDeleteCategory(category.id)}\n                    color=\"var(--danger-color)\"\n                    disabled={category.id === 'other'}\n                  >\n                    <FiTrash2 />\n                  </ActionButton>\n                </CategoryActions>\n              </>\n            )}\n          </CategoryItem>\n        ))}\n      </CategoriesList>\n\n      <AddCategoryForm onSubmit={handleAddCategory}>\n        <Input\n          type=\"text\"\n          placeholder=\"Nueva categoría...\"\n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n        />\n        <AddButton type=\"submit\">\n          <FiPlus />\n        </AddButton>\n      </AddCategoryForm>\n\n      <SaveButton onClick={saveCategories}>\n        <FiSave />\n        Guardar Cambios\n      </SaveButton>\n    </ManagerContainer>\n  );\n};\n\nexport default CategoryManager;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiX, FiPlus, FiTrash2, FiSave } from 'react-icons/fi';\n\nconst ManagerContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst ManagerHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst ManagerTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.1rem;\n  font-weight: 600;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--text-dark);\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst PlatformTypeContainer = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst PlatformTypeTitle = styled.h4`\n  margin: 0 0 12px 0;\n  color: var(--text-dark);\n  font-size: 1rem;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${props => props.type === 'cash'\n      ? 'var(--accent-color)'\n      : 'var(--primary-color)'};\n  }\n`;\n\nconst PlatformList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst PlatformItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  margin-bottom: 8px;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: var(--bg-medium);\n  }\n`;\n\nconst PlatformName = styled.span`\n  color: var(--text-dark);\n  font-size: 0.95rem;\n`;\n\nconst DeleteButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst AddPlatformForm = styled.form`\n  display: flex;\n  gap: 8px;\n  margin-top: 12px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst AddButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 10px 16px;\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: var(--primary-dark);\n  }\n\n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n`;\n\nconst SaveButton = styled.button`\n  background-color: var(--secondary-color);\n  color: white;\n  border: none;\n  padding: 10px 16px;\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  box-shadow: 0 2px 4px rgba(16, 185, 129, 0.2);\n  margin-top: 16px;\n  width: 100%;\n\n  &:hover {\n    background-color: var(--secondary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(16, 185, 129, 0.3);\n  }\n`;\n\n// Plataformas predeterminadas\nconst defaultPlatforms = {\n  cash: ['Efectivo', 'Caja chica', 'Caja fuerte'],\n  virtual: ['Mercado Pago', 'Banco Nación', 'Banco Galicia', 'Ualá', 'Brubank', 'Naranja X', 'Prex']\n};\n\nconst PlatformManager = ({ onClose, onPlatformsChange }) => {\n  const [platforms, setPlatforms] = useState({\n    cash: [],\n    virtual: []\n  });\n\n  const [newPlatform, setNewPlatform] = useState('');\n  const [platformType, setPlatformType] = useState('virtual');\n\n  // Cargar plataformas guardadas o usar las predeterminadas\n  useEffect(() => {\n    try {\n      const savedCashPlatforms = localStorage.getItem('cashPlatforms');\n      const savedVirtualPlatforms = localStorage.getItem('virtualPlatforms');\n\n      const cashPlatforms = savedCashPlatforms ? JSON.parse(savedCashPlatforms) : defaultPlatforms.cash;\n      const virtualPlatforms = savedVirtualPlatforms ? JSON.parse(savedVirtualPlatforms) : defaultPlatforms.virtual;\n\n      setPlatforms({\n        cash: cashPlatforms,\n        virtual: virtualPlatforms\n      });\n    } catch (error) {\n      console.error('Error al cargar plataformas:', error);\n      setPlatforms(defaultPlatforms);\n    }\n  }, []);\n\n  // Función para guardar plataformas manualmente\n  const savePlatforms = () => {\n    try {\n      localStorage.setItem('cashPlatforms', JSON.stringify(platforms.cash));\n      localStorage.setItem('virtualPlatforms', JSON.stringify(platforms.virtual));\n\n      if (onPlatformsChange) {\n        onPlatformsChange(platforms);\n      }\n\n      alert('Plataformas guardadas correctamente');\n    } catch (error) {\n      console.error('Error al guardar plataformas:', error);\n      alert('Error al guardar plataformas');\n    }\n  };\n\n  const handleAddPlatform = (e) => {\n    e.preventDefault();\n\n    if (!newPlatform.trim()) return;\n\n    setPlatforms(prev => ({\n      ...prev,\n      [platformType]: [...prev[platformType], newPlatform.trim()]\n    }));\n\n    setNewPlatform('');\n  };\n\n  const handleDeletePlatform = (type, index) => {\n    setPlatforms(prev => ({\n      ...prev,\n      [type]: prev[type].filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleReset = () => {\n    setPlatforms(defaultPlatforms);\n  };\n\n  return (\n    <ManagerContainer>\n      <ManagerHeader>\n        <ManagerTitle>Gestionar Plataformas</ManagerTitle>\n        <CloseButton onClick={onClose}>\n          <FiX />\n        </CloseButton>\n      </ManagerHeader>\n\n      <PlatformTypeContainer>\n        <PlatformTypeTitle type=\"cash\">Efectivo</PlatformTypeTitle>\n        <PlatformList>\n          {platforms.cash.map((platform, index) => (\n            <PlatformItem key={index}>\n              <PlatformName>{platform}</PlatformName>\n              <DeleteButton onClick={() => handleDeletePlatform('cash', index)}>\n                <FiTrash2 />\n              </DeleteButton>\n            </PlatformItem>\n          ))}\n        </PlatformList>\n      </PlatformTypeContainer>\n\n      <PlatformTypeContainer>\n        <PlatformTypeTitle type=\"virtual\">Billeteras Virtuales</PlatformTypeTitle>\n        <PlatformList>\n          {platforms.virtual.map((platform, index) => (\n            <PlatformItem key={index}>\n              <PlatformName>{platform}</PlatformName>\n              <DeleteButton onClick={() => handleDeletePlatform('virtual', index)}>\n                <FiTrash2 />\n              </DeleteButton>\n            </PlatformItem>\n          ))}\n        </PlatformList>\n      </PlatformTypeContainer>\n\n      <AddPlatformForm onSubmit={handleAddPlatform}>\n        <Select\n          value={platformType}\n          onChange={(e) => setPlatformType(e.target.value)}\n        >\n          <option value=\"cash\">Efectivo</option>\n          <option value=\"virtual\">Billetera Virtual</option>\n        </Select>\n        <Input\n          type=\"text\"\n          placeholder=\"Nombre de la plataforma\"\n          value={newPlatform}\n          onChange={(e) => setNewPlatform(e.target.value)}\n        />\n        <AddButton type=\"submit\" disabled={!newPlatform.trim()}>\n          <FiPlus />\n          Agregar\n        </AddButton>\n      </AddPlatformForm>\n\n      <SaveButton onClick={savePlatforms}>\n        <FiSave />\n        Guardar Cambios\n      </SaveButton>\n\n      <div style={{ marginTop: '16px', textAlign: 'right' }}>\n        <button\n          onClick={handleReset}\n          style={{\n            background: 'none',\n            border: 'none',\n            color: 'var(--text-medium)',\n            textDecoration: 'underline',\n            cursor: 'pointer',\n            fontSize: '0.9rem'\n          }}\n        >\n          Restaurar valores predeterminados\n        </button>\n      </div>\n    </ManagerContainer>\n  );\n};\n\nexport default PlatformManager;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiX, FiSettings, FiCreditCard, FiDollarSign } from 'react-icons/fi';\nimport CategoryManager from './CategoryManager';\nimport PlatformManager from './PlatformManager';\n\nconst FormContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst FormTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  padding: 12px;\n  background-color: rgba(239, 68, 68, 0.08);\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--danger-color);\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n  position: relative;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n\n  &::after {\n    content: ' *';\n    color: var(--danger-color);\n    display: ${props => props.required ? 'inline' : 'none'};\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst RadioGroup = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 8px;\n`;\n\nconst RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: var(--border-radius);\n  transition: all var(--transition-speed);\n  background-color: ${props => props.checked\n    ? props.type === 'income'\n      ? 'rgba(16, 185, 129, 0.1)'\n      : 'rgba(239, 68, 68, 0.1)'\n    : 'transparent'\n  };\n  border: 1px solid ${props => props.checked\n    ? props.type === 'income'\n      ? 'var(--secondary-color)'\n      : 'var(--danger-color)'\n    : 'rgba(0, 0, 0, 0.1)'\n  };\n  color: ${props => props.checked\n    ? props.type === 'income'\n      ? 'var(--secondary-color)'\n      : 'var(--danger-color)'\n    : 'var(--text-medium)'\n  };\n  font-weight: ${props => props.checked ? '500' : 'normal'};\n\n  &:hover {\n    background-color: ${props => props.type === 'income'\n      ? 'rgba(16, 185, 129, 0.05)'\n      : 'rgba(239, 68, 68, 0.05)'\n    };\n  }\n`;\n\nconst RadioInput = styled.input`\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border: 2px solid ${props => props.value === 'income'\n    ? 'var(--secondary-color)'\n    : 'var(--danger-color)'\n  };\n  border-radius: 50%;\n  margin: 0;\n  display: grid;\n  place-content: center;\n  position: relative;\n  cursor: pointer;\n\n  &::before {\n    content: \"\";\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: transform 0.1s ease-in-out;\n    background-color: ${props => props.value === 'income'\n      ? 'var(--secondary-color)'\n      : 'var(--danger-color)'\n    };\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n  }\n\n  &:checked::before {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 24px;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  flex: 1;\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst CancelButton = styled.button`\n  background-color: var(--bg-medium);\n  color: var(--text-medium);\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--bg-dark);\n    color: var(--text-light);\n  }\n`;\n\nconst ManageCategoriesButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 6px;\n  background: none;\n  border: none;\n  color: var(--primary-color);\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--primary-dark);\n    background-color: rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst initialFormState = {\n  title: '',\n  amount: '',\n  type: 'expense',\n  category: 'other',\n  platformType: 'virtual', // 'cash' o 'virtual'\n  platform: '',\n  date: new Date().toISOString().split('T')[0]\n};\n\nconst TransactionForm = ({ transaction, onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState(initialFormState);\n  const [error, setError] = useState('');\n  const [showCategoryManager, setShowCategoryManager] = useState(false);\n  const [showPlatformManager, setShowPlatformManager] = useState(false);\n  const [customCategories, setCustomCategories] = useState({\n    expense: [\n      { id: 'food', name: 'Alimentación' },\n      { id: 'transport', name: 'Transporte' },\n      { id: 'housing', name: 'Vivienda' },\n      { id: 'entertainment', name: 'Entretenimiento' },\n      { id: 'utilities', name: 'Servicios' },\n      { id: 'health', name: 'Salud' },\n      { id: 'education', name: 'Educación' },\n      { id: 'shopping', name: 'Compras' },\n      { id: 'other', name: 'Otro' }\n    ],\n    income: [\n      { id: 'salary', name: 'Salario' },\n      { id: 'investment', name: 'Inversión' },\n      { id: 'gift', name: 'Regalo' },\n      { id: 'other', name: 'Otro' }\n    ]\n  });\n  const [platforms, setPlatforms] = useState({\n    cash: [],\n    virtual: []\n  });\n  const isEditMode = !!transaction?.id;\n\n  // Cargar categorías personalizadas guardadas\n  useEffect(() => {\n    const savedExpenseCategories = localStorage.getItem('expenseCategories');\n    const savedIncomeCategories = localStorage.getItem('incomeCategories');\n\n    if (savedExpenseCategories && savedIncomeCategories) {\n      setCustomCategories({\n        expense: JSON.parse(savedExpenseCategories),\n        income: JSON.parse(savedIncomeCategories)\n      });\n    }\n  }, []);\n\n  // Cargar plataformas guardadas\n  useEffect(() => {\n    const savedCashPlatforms = localStorage.getItem('cashPlatforms');\n    const savedVirtualPlatforms = localStorage.getItem('virtualPlatforms');\n\n    const defaultPlatforms = {\n      cash: ['Efectivo', 'Caja chica', 'Caja fuerte'],\n      virtual: ['Mercado Pago', 'Banco Nación', 'Banco Galicia', 'Ualá', 'Brubank', 'Naranja X', 'Prex']\n    };\n\n    setPlatforms({\n      cash: savedCashPlatforms ? JSON.parse(savedCashPlatforms) : defaultPlatforms.cash,\n      virtual: savedVirtualPlatforms ? JSON.parse(savedVirtualPlatforms) : defaultPlatforms.virtual\n    });\n  }, []);\n\n  useEffect(() => {\n    if (transaction) {\n      // Determinar el tipo de plataforma basado en la plataforma existente\n      let platformType = 'virtual';\n      if (transaction.platform) {\n        // Verificar si la plataforma está en la lista de efectivo\n        const isCashPlatform = platforms.cash.includes(transaction.platform);\n        platformType = isCashPlatform ? 'cash' : 'virtual';\n      }\n\n      setFormData({\n        title: transaction.title || '',\n        amount: transaction.amount || '',\n        type: transaction.type || 'expense',\n        category: transaction.category || 'other',\n        platformType: platformType,\n        platform: transaction.platform || '',\n        date: transaction.date || new Date().toISOString().split('T')[0]\n      });\n    } else {\n      setFormData(initialFormState);\n    }\n  }, [transaction, platforms]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validación\n    if (!formData.title.trim()) {\n      setError('Por favor ingresa un título para la transacción.');\n      return;\n    }\n\n    if (!formData.amount || parseFloat(formData.amount) <= 0) {\n      setError('Por favor ingresa un monto válido.');\n      return;\n    }\n\n    // Enviar datos\n    onSubmit({\n      ...formData,\n      id: transaction?.id, // Solo incluir el ID si estamos editando\n      amount: parseFloat(formData.amount)\n      // No necesitamos mapear platformType a platform_type, lo haremos en el servicio\n    });\n\n    // Resetear formulario si no estamos en modo edición\n    if (!isEditMode) {\n      setFormData(initialFormState);\n    }\n\n    setError('');\n  };\n\n  const handleCategoriesChange = (newCategories) => {\n    setCustomCategories(newCategories);\n  };\n\n  const handlePlatformsChange = (newPlatforms) => {\n    setPlatforms(newPlatforms);\n  };\n\n  return (\n    <FormContainer>\n      <FormHeader>\n        <FormTitle>\n          {isEditMode ? 'Editar Transacción' : 'Registrar Nueva Transacción'}\n        </FormTitle>\n        <CloseButton onClick={onCancel}>\n          <FiX />\n        </CloseButton>\n      </FormHeader>\n\n      {showCategoryManager && (\n        <CategoryManager\n          onClose={() => setShowCategoryManager(false)}\n          onCategoriesChange={handleCategoriesChange}\n        />\n      )}\n\n      {showPlatformManager && (\n        <PlatformManager\n          onClose={() => setShowPlatformManager(false)}\n          onPlatformsChange={handlePlatformsChange}\n        />\n      )}\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"type\" required>Tipo de transacción</Label>\n          <RadioGroup>\n            <RadioLabel type=\"expense\" checked={formData.type === 'expense'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"type-expense\"\n                name=\"type\"\n                value=\"expense\"\n                checked={formData.type === 'expense'}\n                onChange={handleChange}\n              />\n              Gasto\n            </RadioLabel>\n\n            <RadioLabel type=\"income\" checked={formData.type === 'income'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"type-income\"\n                name=\"type\"\n                value=\"income\"\n                checked={formData.type === 'income'}\n                onChange={handleChange}\n              />\n              Ingreso\n            </RadioLabel>\n          </RadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"title\" required>Descripción</Label>\n          <Input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={formData.title}\n            onChange={handleChange}\n            placeholder=\"Ej: Compra de comestibles\"\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"amount\" required>Monto (ARS)</Label>\n          <Input\n            type=\"number\"\n            id=\"amount\"\n            name=\"amount\"\n            value={formData.amount}\n            onChange={handleChange}\n            placeholder=\"0.00\"\n            min=\"0.01\"\n            step=\"0.01\"\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"category\" required>Categoría</Label>\n          <ManageCategoriesButton\n            type=\"button\"\n            onClick={() => setShowCategoryManager(true)}\n            title=\"Gestionar categorías\"\n          >\n            <FiSettings />\n          </ManageCategoriesButton>\n          <Select\n            id=\"category\"\n            name=\"category\"\n            value={formData.category}\n            onChange={handleChange}\n            required\n          >\n            {formData.type === 'expense' ? (\n              customCategories.expense.map(category => (\n                <option key={category.id} value={category.id}>{category.name}</option>\n              ))\n            ) : (\n              customCategories.income.map(category => (\n                <option key={category.id} value={category.id}>{category.name}</option>\n              ))\n            )}\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"platformType\" required>Tipo de plataforma</Label>\n          <RadioGroup>\n            <RadioLabel type=\"cash\" checked={formData.platformType === 'cash'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"platformType-cash\"\n                name=\"platformType\"\n                value=\"cash\"\n                checked={formData.platformType === 'cash'}\n                onChange={handleChange}\n              />\n              <FiDollarSign style={{ marginRight: '4px' }} />\n              Efectivo\n            </RadioLabel>\n\n            <RadioLabel type=\"virtual\" checked={formData.platformType === 'virtual'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"platformType-virtual\"\n                name=\"platformType\"\n                value=\"virtual\"\n                checked={formData.platformType === 'virtual'}\n                onChange={handleChange}\n              />\n              <FiCreditCard style={{ marginRight: '4px' }} />\n              Billeteras Virtuales\n            </RadioLabel>\n          </RadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"platform\" required>Plataforma</Label>\n          <ManageCategoriesButton\n            type=\"button\"\n            onClick={() => setShowPlatformManager(true)}\n            title=\"Gestionar plataformas\"\n          >\n            <FiSettings />\n          </ManageCategoriesButton>\n          <Select\n            id=\"platform\"\n            name=\"platform\"\n            value={formData.platform}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\">Seleccionar plataforma</option>\n            {formData.platformType === 'cash' ? (\n              platforms.cash.map((platform, index) => (\n                <option key={index} value={platform}>{platform}</option>\n              ))\n            ) : (\n              platforms.virtual.map((platform, index) => (\n                <option key={index} value={platform}>{platform}</option>\n              ))\n            )}\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"date\" required>Fecha</Label>\n          <Input\n            type=\"date\"\n            id=\"date\"\n            name=\"date\"\n            value={formData.date}\n            onChange={handleChange}\n            required\n          />\n        </FormGroup>\n\n        <ButtonGroup>\n          <SubmitButton type=\"submit\">\n            {isEditMode ? 'Guardar Cambios' : 'Registrar Transacción'}\n          </SubmitButton>\n          <CancelButton type=\"button\" onClick={onCancel}>\n            Cancelar\n          </CancelButton>\n        </ButtonGroup>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default TransactionForm;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiFilter, FiSearch } from 'react-icons/fi';\n\nconst FiltersContainer = styled.div`\n  background-color: var(--bg-medium);\n  padding: 16px;\n  border-radius: var(--border-radius);\n  margin-bottom: 20px;\n`;\n\nconst FiltersHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  gap: 8px;\n  color: var(--text-medium);\n  font-weight: 500;\n  font-size: 0.95rem;\n`;\n\nconst FiltersIcon = styled(FiFilter)`\n  font-size: 1.1rem;\n`;\n\nconst FiltersContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst SearchContainer = styled.div`\n  flex: 2;\n  position: relative;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst SearchIcon = styled(FiSearch)`\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: var(--text-light);\n  font-size: 1rem;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 10px 10px 10px 36px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  &::placeholder {\n    color: var(--text-light);\n  }\n`;\n\nconst FilterGroup = styled.div`\n  flex: 1;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst FilterSelect = styled.select`\n  width: 100%;\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst DateContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  flex: 2;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst DateInput = styled.input`\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst TransactionFilters = ({ filters, onFilterChange }) => {\n  const [customCategories, setCustomCategories] = useState({\n    expense: [\n      { id: 'food', name: 'Alimentación' },\n      { id: 'transport', name: 'Transporte' },\n      { id: 'housing', name: 'Vivienda' },\n      { id: 'entertainment', name: 'Entretenimiento' },\n      { id: 'utilities', name: 'Servicios' },\n      { id: 'health', name: 'Salud' },\n      { id: 'education', name: 'Educación' },\n      { id: 'shopping', name: 'Compras' },\n      { id: 'other', name: 'Otro' }\n    ],\n    income: [\n      { id: 'salary', name: 'Salario' },\n      { id: 'investment', name: 'Inversión' },\n      { id: 'gift', name: 'Regalo' },\n      { id: 'other', name: 'Otro' }\n    ]\n  });\n\n  // Cargar categorías personalizadas guardadas\n  useEffect(() => {\n    const savedExpenseCategories = localStorage.getItem('expenseCategories');\n    const savedIncomeCategories = localStorage.getItem('incomeCategories');\n\n    if (savedExpenseCategories && savedIncomeCategories) {\n      setCustomCategories({\n        expense: JSON.parse(savedExpenseCategories),\n        income: JSON.parse(savedIncomeCategories)\n      });\n    }\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    onFilterChange({ ...filters, [name]: value });\n  };\n\n  return (\n    <FiltersContainer>\n      <FiltersHeader>\n        <FiltersIcon />\n        Filtrar transacciones\n      </FiltersHeader>\n\n      <FiltersContent>\n        <SearchContainer>\n          <SearchIcon />\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Buscar transacciones...\"\n            name=\"search\"\n            value={filters.search || ''}\n            onChange={handleChange}\n          />\n        </SearchContainer>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"type\"\n            value={filters.type || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todos los tipos</option>\n            <option value=\"income\">Ingresos</option>\n            <option value=\"expense\">Gastos</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"category\"\n            value={filters.category || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todas las categorías</option>\n            <optgroup label=\"Gastos\">\n              <option value=\"food\">Alimentación</option>\n              <option value=\"transport\">Transporte</option>\n              <option value=\"housing\">Vivienda</option>\n              <option value=\"entertainment\">Entretenimiento</option>\n              <option value=\"utilities\">Servicios</option>\n              <option value=\"health\">Salud</option>\n              <option value=\"education\">Educación</option>\n              <option value=\"shopping\">Compras</option>\n            </optgroup>\n            <optgroup label=\"Ingresos\">\n              <option value=\"salary\">Salario</option>\n              <option value=\"investment\">Inversión</option>\n              <option value=\"gift\">Regalo</option>\n            </optgroup>\n            <option value=\"other\">Otro</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <DateContainer>\n          <DateInput\n            type=\"date\"\n            name=\"startDate\"\n            value={filters.startDate || ''}\n            onChange={handleChange}\n            placeholder=\"Fecha inicio\"\n          />\n          <DateInput\n            type=\"date\"\n            name=\"endDate\"\n            value={filters.endDate || ''}\n            onChange={handleChange}\n            placeholder=\"Fecha fin\"\n          />\n        </DateContainer>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"sort\"\n            value={filters.sort || 'date_desc'}\n            onChange={handleChange}\n          >\n            <option value=\"date_desc\">Más recientes primero</option>\n            <option value=\"date_asc\">Más antiguas primero</option>\n            <option value=\"amount_desc\">Mayor monto primero</option>\n            <option value=\"amount_asc\">Menor monto primero</option>\n            <option value=\"name_asc\">Nombre (A-Z)</option>\n            <option value=\"name_desc\">Nombre (Z-A)</option>\n          </FilterSelect>\n        </FilterGroup>\n      </FiltersContent>\n    </FiltersContainer>\n  );\n};\n\nexport default TransactionFilters;\n","import { supabase } from './supabase';\n\n/**\n * Suscribe a cambios en tiempo real en una tabla\n * @param {string} table - Nombre de la tabla\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {Object} options - Opciones adicionales\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToTable = (table, callback, options = {}) => {\n  const { event = '*', filter = '' } = options;\n\n  const subscription = supabase\n    .channel(`public:${table}`)\n    .on('postgres_changes', {\n      event,\n      schema: 'public',\n      table,\n      filter\n    }, (payload) => {\n      callback(payload);\n    })\n    .subscribe();\n\n  return subscription;\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de transacciones\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToTransactions = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('transactions', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('transactions', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de tareas\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToTasks = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('tasks', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('tasks', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de inversiones\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToInvestments = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('investments', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('investments', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de metas financieras\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToFinancialGoals = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('financial_goals', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('financial_goals', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de eventos\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToEvents = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('events', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('events', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de perfiles\n * @param {string} userId - ID del usuario\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToProfile = (userId, callback) => {\n  return subscribeToTable('profiles', callback, {\n    filter: `id=eq.${userId}`\n  });\n};\n\n/**\n * Cancela una suscripción\n * @param {Object} subscription - Objeto de suscripción\n */\nexport const unsubscribe = (subscription) => {\n  if (subscription) {\n    supabase.removeChannel(subscription);\n  }\n};\n","import React from 'react';\nimport { useTransition, animated } from 'react-spring';\n\n/**\n * Componente para animar la transición de elementos\n * @param {Object} props - Propiedades del componente\n * @param {Array} props.items - Elementos a animar\n * @param {Function} props.renderItem - Función para renderizar cada elemento\n * @param {string} props.keyExtractor - Función para extraer la clave de cada elemento\n * @param {Object} props.config - Configuración de la animación\n * @returns {JSX.Element} - Componente de transición animada\n */\nconst AnimatedTransition = ({ \n  items, \n  renderItem, \n  keyExtractor = (item) => item.id,\n  config = { tension: 125, friction: 20, precision: 0.1 }\n}) => {\n  // Configuración de la transición\n  const transitions = useTransition(items, {\n    keys: keyExtractor,\n    from: { opacity: 0, transform: 'translate3d(0,40px,0)' },\n    enter: { opacity: 1, transform: 'translate3d(0,0px,0)' },\n    leave: { opacity: 0, transform: 'translate3d(0,-40px,0)' },\n    config\n  });\n\n  return (\n    <>\n      {transitions((style, item) => (\n        <animated.div style={style}>\n          {renderItem(item)}\n        </animated.div>\n      ))}\n    </>\n  );\n};\n\nexport default AnimatedTransition;\n","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { FiDownload, FiFileText, FiDatabase, FiX } from 'react-icons/fi';\nimport { useSpring, animated } from 'react-spring';\nimport { exportToCSV, exportToJSON, exportToExcel } from '../../services/exportService';\nimport AnimatedButton from './AnimatedButton';\n\n// Contenedor del menú\nconst MenuContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\n// Botón de exportar\nconst ExportButton = styled(AnimatedButton)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\n// Menú desplegable\nconst DropdownMenu = styled(animated.div)`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  margin-top: 8px;\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  padding: 8px;\n  z-index: 100;\n  min-width: 200px;\n  overflow: hidden;\n`;\n\n// Título del menú\nconst MenuTitle = styled.div`\n  font-weight: 600;\n  padding: 8px 12px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\n// Opción del menú\nconst MenuItem = styled.div`\n  padding: 8px 12px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  border-radius: var(--border-radius);\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: rgba(var(--primary-color-rgb), 0.1);\n  }\n  \n  svg {\n    color: var(--primary-color);\n  }\n`;\n\n// Botón para cerrar el menú\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--text-medium);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  \n  &:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\n/**\n * Componente de menú de exportación\n * @param {Object} props - Propiedades del componente\n * @param {Array} props.data - Datos a exportar\n * @param {string} props.filename - Nombre del archivo\n * @returns {JSX.Element} - Componente de menú de exportación\n */\nconst ExportMenu = ({ data, filename = 'export' }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  \n  // Animación del menú\n  const menuAnimation = useSpring({\n    opacity: isOpen ? 1 : 0,\n    transform: isOpen ? 'translateY(0)' : 'translateY(-20px)',\n    config: { tension: 300, friction: 20 }\n  });\n  \n  // Manejador para abrir/cerrar el menú\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n  \n  // Manejador para cerrar el menú al hacer clic fuera de él\n  const handleClickOutside = (event) => {\n    if (menuRef.current && !menuRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n  \n  // Agregar/eliminar el event listener al montar/desmontar el componente\n  React.useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n  \n  // Manejadores para exportar en diferentes formatos\n  const handleExportCSV = () => {\n    exportToCSV(data, filename);\n    setIsOpen(false);\n  };\n  \n  const handleExportJSON = () => {\n    exportToJSON(data, filename);\n    setIsOpen(false);\n  };\n  \n  const handleExportExcel = () => {\n    exportToExcel(data, `${filename}.xlsx`);\n    setIsOpen(false);\n  };\n  \n  return (\n    <MenuContainer ref={menuRef}>\n      <ExportButton \n        variant=\"outline\" \n        onClick={toggleMenu}\n      >\n        <FiDownload />\n        Exportar\n      </ExportButton>\n      \n      {isOpen && (\n        <DropdownMenu style={menuAnimation}>\n          <MenuTitle>\n            Exportar datos\n            <CloseButton onClick={() => setIsOpen(false)}>\n              <FiX />\n            </CloseButton>\n          </MenuTitle>\n          \n          <MenuItem onClick={handleExportCSV}>\n            <FiFileText />\n            Exportar como CSV\n          </MenuItem>\n          \n          <MenuItem onClick={handleExportJSON}>\n            <FiDatabase />\n            Exportar como JSON\n          </MenuItem>\n          \n          <MenuItem onClick={handleExportExcel}>\n            <FiFileText />\n            Exportar como Excel\n          </MenuItem>\n        </DropdownMenu>\n      )}\n    </MenuContainer>\n  );\n};\n\nexport default ExportMenu;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\nimport AnimatedButton from './AnimatedButton';\n\n// Fondo oscuro\nconst Overlay = styled(animated.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 16px;\n`;\n\n// Contenedor del diálogo\nconst DialogContainer = styled(animated.div)`\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  padding: 24px;\n  max-width: 500px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n`;\n\n// Título del diálogo\nconst DialogTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 16px;\n  color: var(--text-dark);\n  font-size: 1.3rem;\n  font-weight: 600;\n`;\n\n// Contenido del diálogo\nconst DialogContent = styled.div`\n  margin-bottom: 24px;\n  color: var(--text-medium);\n  font-size: 1rem;\n  line-height: 1.5;\n`;\n\n// Acciones del diálogo\nconst DialogActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  \n  @media (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\n/**\n * Componente de diálogo de confirmación\n * @param {Object} props - Propiedades del componente\n * @param {boolean} props.isOpen - Si el diálogo está abierto\n * @param {Function} props.onClose - Función a ejecutar al cerrar el diálogo\n * @param {Function} props.onConfirm - Función a ejecutar al confirmar\n * @param {string} props.title - Título del diálogo\n * @param {React.ReactNode} props.children - Contenido del diálogo\n * @param {string} props.confirmText - Texto del botón de confirmación\n * @param {string} props.cancelText - Texto del botón de cancelación\n * @param {string} props.confirmVariant - Variante del botón de confirmación\n * @returns {JSX.Element} - Componente de diálogo de confirmación\n */\nconst ConfirmDialog = ({\n  isOpen,\n  onClose,\n  onConfirm,\n  title = 'Confirmar',\n  children,\n  confirmText = 'Confirmar',\n  cancelText = 'Cancelar',\n  confirmVariant = 'primary'\n}) => {\n  // Animación del fondo\n  const overlayAnimation = useSpring({\n    opacity: isOpen ? 1 : 0,\n    config: { tension: 300, friction: 20 }\n  });\n  \n  // Animación del diálogo\n  const dialogAnimation = useSpring({\n    opacity: isOpen ? 1 : 0,\n    transform: isOpen ? 'translateY(0)' : 'translateY(-50px)',\n    config: { tension: 300, friction: 20 }\n  });\n  \n  // Si el diálogo no está abierto, no renderizar nada\n  if (!isOpen) {\n    return null;\n  }\n  \n  return (\n    <Overlay style={overlayAnimation} onClick={onClose}>\n      <DialogContainer \n        style={dialogAnimation} \n        onClick={e => e.stopPropagation()}\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>{children}</DialogContent>\n        <DialogActions>\n          <AnimatedButton \n            variant=\"outline\" \n            onClick={onClose}\n            fullWidth={window.innerWidth <= 480}\n          >\n            {cancelText}\n          </AnimatedButton>\n          <AnimatedButton \n            variant={confirmVariant} \n            onClick={() => {\n              onConfirm();\n              onClose();\n            }}\n            fullWidth={window.innerWidth <= 480}\n          >\n            {confirmText}\n          </AnimatedButton>\n        </DialogActions>\n      </DialogContainer>\n    </Overlay>\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus } from 'react-icons/fi';\nimport FinancialSummary from '../components/Finances/FinancialSummary';\nimport TransactionList from '../components/Finances/TransactionList';\nimport TransactionForm from '../components/Finances/TransactionForm';\nimport TransactionFilters from '../components/Finances/TransactionFilters';\nimport { getTransactions as getTransactionsFromAPI, createTransaction as createTransactionAPI, updateTransaction as updateTransactionAPI, deleteTransaction as deleteTransactionAPI } from '../services/transactionService';\nimport { subscribeToTransactions, unsubscribe } from '../services/realtimeService';\nimport AnimatedButton from '../components/common/AnimatedButton';\nimport AnimatedTransition from '../components/common/AnimatedTransition';\nimport { showSuccess, showError, showInfo } from '../components/common/Notification';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport ExportMenu from '../components/common/ExportMenu';\nimport ConfirmDialog from '../components/common/ConfirmDialog';\n// Importar el servicio de almacenamiento simple\nimport { getTransactions, saveTransactions, addTransaction, updateTransaction, deleteTransaction } from '../services/simpleStorage';\n\nconst FinancesContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst FinancesHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst TransactionsSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst TransactionsHeaderActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\n// Usamos el componente AnimatedButton en lugar de un botón personalizado\n\n// Las transacciones se cargarán desde Supabase\n\nconst Finances = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingTransaction, setEditingTransaction] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    type: 'all',\n    category: 'all',\n    startDate: '',\n    endDate: '',\n    sort: 'date_desc'\n  });\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    message: '',\n    onConfirm: () => {},\n    confirmText: 'Confirmar',\n    confirmVariant: 'primary'\n  });\n\n  // Cargar transacciones desde el almacenamiento local y luego intentar desde Supabase\n  useEffect(() => {\n    const loadTransactions = async () => {\n      try {\n        setLoading(true);\n\n        // Primero, intentar cargar desde el almacenamiento local\n        const localData = getTransactions();\n\n        if (localData && localData.length > 0) {\n          console.log('Transacciones cargadas desde el almacenamiento local:', localData);\n          setTransactions(localData);\n          setError(null);\n          setLoading(false);\n\n          // Luego, intentar cargar desde la API en segundo plano\n          try {\n            const apiData = await getTransactionsFromAPI();\n            if (apiData && apiData.length > 0) {\n              console.log('Transacciones cargadas desde la API:', apiData);\n              setTransactions(apiData);\n              // Guardar en el almacenamiento local\n              saveTransactions(apiData);\n            }\n          } catch (apiError) {\n            console.error('Error al cargar transacciones desde la API:', apiError);\n            // No mostrar error al usuario si ya tenemos datos locales\n          }\n        } else {\n          // Si no hay datos locales, intentar cargar desde la API\n          try {\n            const apiData = await getTransactionsFromAPI();\n            console.log('Transacciones cargadas desde la API:', apiData);\n            setTransactions(apiData);\n            // Guardar en el almacenamiento local\n            saveTransactions(apiData);\n            setError(null);\n          } catch (apiError) {\n            console.error('Error al cargar transacciones desde la API:', apiError);\n            setError('Error al cargar las transacciones. Por favor, intenta de nuevo más tarde.');\n            // Usar un array vacío si no hay datos\n            setTransactions([]);\n          }\n        }\n      } catch (err) {\n        console.error('Error al cargar las transacciones:', err);\n        setError('Error al cargar las transacciones. Por favor, intenta de nuevo más tarde.');\n        // Usar un array vacío si hay error\n        setTransactions([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadTransactions();\n\n    // Suscribirse a cambios en tiempo real\n    let subscription;\n    const setupRealtimeSubscription = async () => {\n      try {\n        subscription = await subscribeToTransactions((payload) => {\n          console.log('Cambio en tiempo real:', payload);\n\n          const { eventType, new: newRecord, old: oldRecord } = payload;\n\n          // Manejar diferentes tipos de eventos\n          switch (eventType) {\n            case 'INSERT':\n              setTransactions(prev => {\n                const updated = [...prev, newRecord];\n                // Guardar en el almacenamiento local\n                saveTransactions(updated);\n                return updated;\n              });\n              showInfo(`Nueva transacción: ${newRecord.title}`);\n              break;\n            case 'UPDATE':\n              setTransactions(prev => {\n                const updated = prev.map(transaction =>\n                  transaction.id === newRecord.id ? newRecord : transaction\n                );\n                // Guardar en el almacenamiento local\n                saveTransactions(updated);\n                return updated;\n              });\n              showInfo(`Transacción actualizada: ${newRecord.title}`);\n              break;\n            case 'DELETE':\n              setTransactions(prev => {\n                const updated = prev.filter(transaction => transaction.id !== oldRecord.id);\n                // Guardar en el almacenamiento local\n                saveTransactions(updated);\n                return updated;\n              });\n              showInfo('Transacción eliminada');\n              break;\n            default:\n              break;\n          }\n        });\n      } catch (error) {\n        console.error('Error al suscribirse a cambios en tiempo real:', error);\n      }\n    };\n\n    setupRealtimeSubscription();\n\n    // Limpiar suscripción al desmontar\n    return () => {\n      unsubscribe(subscription);\n    };\n  }, []);\n\n  // Aplicar filtros y ordenamiento cuando cambian los filtros o las transacciones\n  useEffect(() => {\n    let result = [...transactions];\n\n    // Filtrar por búsqueda\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      result = result.filter(transaction =>\n        transaction.title.toLowerCase().includes(searchTerm)\n      );\n    }\n\n    // Filtrar por tipo\n    if (filters.type !== 'all') {\n      result = result.filter(transaction => transaction.type === filters.type);\n    }\n\n    // Filtrar por categoría\n    if (filters.category !== 'all') {\n      result = result.filter(transaction => transaction.category === filters.category);\n    }\n\n    // Filtrar por fecha de inicio\n    if (filters.startDate) {\n      result = result.filter(transaction => transaction.date >= filters.startDate);\n    }\n\n    // Filtrar por fecha de fin\n    if (filters.endDate) {\n      result = result.filter(transaction => transaction.date <= filters.endDate);\n    }\n\n    // Ordenar\n    result.sort((a, b) => {\n      switch (filters.sort) {\n        case 'date_asc':\n          return new Date(a.date) - new Date(b.date);\n        case 'date_desc':\n          return new Date(b.date) - new Date(a.date);\n        case 'amount_desc':\n          return b.amount - a.amount;\n        case 'amount_asc':\n          return a.amount - b.amount;\n        case 'name_asc':\n          return a.title.localeCompare(b.title);\n        case 'name_desc':\n          return b.title.localeCompare(a.title);\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredTransactions(result);\n  }, [transactions, filters]);\n\n  const handleAddTransaction = async (newTransaction) => {\n    try {\n      console.log('Transaction to save:', newTransaction);\n\n      // Si estamos editando, actualizar la transacción existente\n      if (editingTransaction) {\n        console.log('Updating transaction with ID:', newTransaction.id);\n\n        // Actualizar en el almacenamiento local primero\n        const updatedTransaction = updateTransaction(newTransaction.id, newTransaction);\n\n        if (updatedTransaction) {\n          console.log('Transaction updated successfully in local storage:', updatedTransaction);\n\n          // Actualizar el estado\n          setTransactions(prev => {\n            const updated = prev.map(transaction =>\n              transaction.id === updatedTransaction.id ? updatedTransaction : transaction\n            );\n            // Guardar en el almacenamiento local\n            saveTransactions(updated);\n            return updated;\n          });\n\n          setEditingTransaction(null);\n          showSuccess('Transacción actualizada correctamente');\n\n          // Intentar actualizar en la API en segundo plano\n          try {\n            const apiUpdated = await updateTransactionAPI(newTransaction.id, newTransaction);\n            console.log('Transaction updated in API:', apiUpdated);\n          } catch (apiError) {\n            console.error('Error updating transaction in API:', apiError);\n            // No mostrar error al usuario ya que la actualización local fue exitosa\n          }\n        }\n      } else {\n        // Si es una nueva transacción, agregarla a la lista\n        console.log('Creating new transaction');\n\n        // Agregar en el almacenamiento local primero\n        const createdTransaction = addTransaction(newTransaction);\n\n        if (createdTransaction) {\n          console.log('Transaction created successfully in local storage:', createdTransaction);\n\n          // Actualizar el estado\n          setTransactions(prev => {\n            const updated = [...prev, createdTransaction];\n            // Guardar en el almacenamiento local\n            saveTransactions(updated);\n            return updated;\n          });\n\n          showSuccess('Transacción creada correctamente');\n\n          // Intentar crear en la API en segundo plano\n          try {\n            const apiCreated = await createTransactionAPI(newTransaction);\n            console.log('Transaction created in API:', apiCreated);\n          } catch (apiError) {\n            console.error('Error creating transaction in API:', apiError);\n            // No mostrar error al usuario ya que la creación local fue exitosa\n          }\n        }\n      }\n\n      setShowForm(false);\n      setError(null);\n    } catch (err) {\n      console.error('Error al guardar la transacción:', err);\n      setError(`Error al guardar la transacción: ${err.message}`);\n      showError(`Error al guardar la transacción: ${err.message}`);\n    }\n  };\n\n  const handleEditTransaction = (transaction) => {\n    setEditingTransaction(transaction);\n    setShowForm(true);\n  };\n\n  const handleDeleteTransaction = (transactionId) => {\n    // Mostrar diálogo de confirmación\n    setConfirmDialog({\n      isOpen: true,\n      title: 'Eliminar transacción',\n      message: '¿Estás seguro de que deseas eliminar esta transacción? Esta acción no se puede deshacer.',\n      onConfirm: async () => {\n        try {\n          // Eliminar del almacenamiento local primero\n          const success = deleteTransaction(transactionId);\n\n          if (success) {\n            console.log('Transaction deleted successfully from local storage');\n\n            // Actualizar el estado\n            setTransactions(prev => {\n              const updated = prev.filter(transaction => transaction.id !== transactionId);\n              // Guardar en el almacenamiento local\n              saveTransactions(updated);\n              return updated;\n            });\n\n            showSuccess('Transacción eliminada correctamente');\n\n            // Intentar eliminar en la API en segundo plano\n            try {\n              await deleteTransactionAPI(transactionId);\n              console.log('Transaction deleted from API');\n            } catch (apiError) {\n              console.error('Error deleting transaction from API:', apiError);\n              // No mostrar error al usuario ya que la eliminación local fue exitosa\n            }\n          } else {\n            showError('No se pudo eliminar la transacción');\n          }\n        } catch (err) {\n          console.error('Error al eliminar la transacción:', err);\n          showError('Error al eliminar la transacción. Por favor, intenta de nuevo más tarde.');\n        }\n      },\n      confirmText: 'Eliminar',\n      confirmVariant: 'danger'\n    });\n  };\n\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingTransaction(null);\n  };\n\n  return (\n    <FinancesContainer>\n      <FinancesHeader>\n        <h1>Finanzas</h1>\n        <p>Controla tus ingresos y gastos</p>\n      </FinancesHeader>\n\n      {/* Mensaje de error con animación */}\n      {error && (\n        <AnimatedTransition\n          items={[error]}\n          keyExtractor={() => 'error'}\n          renderItem={(errorMessage) => (\n            <div style={{\n              padding: '16px',\n              backgroundColor: 'rgba(239, 68, 68, 0.1)',\n              color: 'var(--danger-color)',\n              borderRadius: 'var(--border-radius)',\n              marginBottom: '16px',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              boxShadow: '0 4px 6px rgba(239, 68, 68, 0.1)',\n              border: '1px solid rgba(239, 68, 68, 0.2)'\n            }}>\n              <div style={{\n                backgroundColor: 'var(--danger-color)',\n                color: 'white',\n                borderRadius: '50%',\n                width: '24px',\n                height: '24px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontWeight: 'bold'\n              }}>\n                !\n              </div>\n              {errorMessage}\n              <AnimatedButton\n                variant=\"outline\"\n                style={{\n                  marginLeft: 'auto',\n                  padding: '4px 8px',\n                  minWidth: 'auto',\n                  color: 'var(--danger-color)',\n                  borderColor: 'var(--danger-color)'\n                }}\n                onClick={() => setError(null)}\n              >\n                Cerrar\n              </AnimatedButton>\n            </div>\n          )}\n        />\n      )}\n\n      {/* Indicador de carga con animación */}\n      {loading ? (\n        <AnimatedTransition\n          items={[loading]}\n          keyExtractor={() => 'loading'}\n          renderItem={() => (\n            <LoadingSpinner text=\"Cargando transacciones...\" />\n          )}\n        />\n      ) : (\n        <>\n          {/* Resumen financiero */}\n          <FinancialSummary\n            transactions={transactions}\n            exchangeRate={1.1} // Tasa de cambio ARS a USD\n          />\n\n          {/* Sección de transacciones */}\n          <TransactionsSection>\n            <TransactionsHeaderActions>\n              <SectionTitle>Transacciones</SectionTitle>\n              <ButtonGroup>\n                <ExportMenu\n                  data={filteredTransactions}\n                  filename=\"transacciones\"\n                />\n                <AnimatedButton\n                  variant={showForm ? \"outline\" : \"primary\"}\n                  onClick={() => {\n                    setEditingTransaction(null);\n                    setShowForm(!showForm);\n                  }}\n                >\n                  <FiPlus />\n                  {showForm ? 'Cancelar' : 'Nueva Transacción'}\n                </AnimatedButton>\n              </ButtonGroup>\n            </TransactionsHeaderActions>\n\n            {/* Formulario para agregar/editar transacciones */}\n            {showForm && (\n              <TransactionForm\n                transaction={editingTransaction}\n                onSubmit={handleAddTransaction}\n                onCancel={handleCancelForm}\n              />\n            )}\n\n            {/* Filtros */}\n            <TransactionFilters filters={filters} onFilterChange={setFilters} />\n\n            {/* Lista de transacciones con carga progresiva */}\n            <TransactionList\n              transactions={filteredTransactions}\n              onEditTransaction={handleEditTransaction}\n              onDeleteTransaction={handleDeleteTransaction}\n              filters={{\n                type: filters.type !== 'all' ? filters.type : undefined,\n                category: filters.category !== 'all' ? filters.category : undefined,\n                startDate: filters.startDate || undefined,\n                endDate: filters.endDate || undefined,\n                search: filters.search || undefined\n              }}\n              sortConfig={{\n                column: filters.sort ? filters.sort.split('_')[0] : 'date',\n                direction: filters.sort ? filters.sort.split('_')[1] : 'desc'\n              }}\n              useProgressiveLoading={true}\n            />\n          </TransactionsSection>\n        </>\n      )}\n\n      {/* Diálogo de confirmación */}\n      <ConfirmDialog\n        isOpen={confirmDialog.isOpen}\n        onClose={() => setConfirmDialog({ ...confirmDialog, isOpen: false })}\n        onConfirm={confirmDialog.onConfirm}\n        title={confirmDialog.title}\n        confirmText={confirmDialog.confirmText}\n        confirmVariant={confirmDialog.confirmVariant}\n      >\n        {confirmDialog.message}\n      </ConfirmDialog>\n    </FinancesContainer>\n  );\n};\n\nexport default Finances;\n"],"names":["exportToCSV","data","filename","length","headers","Object","keys","csvContent","join","map","row","header","value","undefined","JSON","stringify","replace","String","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportToJSON","exportToExcel","STORAGE_PREFIX","saveData","key","fullKey","localStorage","setItem","console","log","error","getData","defaultValue","arguments","storedData","getItem","parsedData","parse","generateId","Date","now","Math","random","toString","substr","saveTransactions","transactions","getTransactions","addTransaction","transaction","transactionWithId","id","updatedTransactions","updateTransaction","updates","currentTransactions","index","findIndex","t","deleteTransaction","filter","saveTasks","tasks","getTasks","addTask","task","taskWithId","created_at","toISOString","split","updatedTasks","updateTask","currentTasks","deleteTask","toggleTaskComplete","completed","saveInvestments","investments","getInvestments","addInvestment","investment","investmentWithId","updatedInvestments","updateInvestment","currentInvestments","i","deleteInvestment","saveFinancialGoals","goals","getFinancialGoals","addFinancialGoal","goal","goalWithId","updatedGoals","updateFinancialGoal","currentGoals","g","deleteFinancialGoal","SummaryContainer","styled","div","SummaryCard","h3","span","CardHeader","IconContainer","props","CardTitle","Amount","SecondaryAmount","formatCurrency","amount","currency","Intl","NumberFormat","format","_ref","exchangeRate","activeTab","setActiveTab","useState","income","reduce","sum","expense","balance","balanceUSD","incomeUSD","expenseUSD","cashTransactions","_t$platform","platform","toLowerCase","includes","digitalTransactions","cashIncome","cashExpense","cashBalance","digitalIncome","digitalExpense","digitalBalance","currentBalance","currentIncome","currentExpense","currentBalanceUSD","currentIncomeUSD","currentExpenseUSD","TabsContainer","Tab","button","active","_jsxs","children","onClick","_jsx","FiDollarSign","FiPocket","FiCreditCard","FiArrowUp","FiArrowDown","threshold","velocityThreshold","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","onTap","onDoubleTap","onLongPress","touchStart","setTouchStart","x","y","time","touchEnd","setTouchEnd","isTouching","setIsTouching","lastTap","useRef","longPressTimer","useEffect","current","clearTimeout","gestureHandlers","onTouchStart","e","touch","touches","clientX","clientY","setTimeout","onTouchMove","abs","onTouchEnd","deltaX","deltaY","timeElapsed","velocity","sqrt","onTouchCancel","handleTouchCancel","CardContainer","AnimatedCard","animated","LeftActions","RightActions","leftAction","rightAction","swiped","setSwiped","api","useSpring","config","tension","friction","useGestures","start","transform","to","TransactionContainer","TransactionInfo","TransactionDetails","TransactionTitle","TransactionCategory","TransactionPlatform","TransactionDate","TransactionAmount","TransactionActions","TransactionAmountContainer","ActionButton","color","SwipeAction","DeleteAction","EditAction","TransactionItem","onEdit","onDelete","title","category","date","platformType","name","platformName","platformString","savedCashPlatforms","getPlatformInfo","handleEdit","useCallback","handleDelete","formattedDate","useMemo","toLocaleDateString","formattedAmount","categoryName","expenseCategories","incomeCategories","savedExpenseCategories","savedIncomeCategories","foundCategory","find","cat","food","transport","housing","entertainment","utilities","health","education","shopping","salary","gift","other","getCategoryName","window","innerWidth","SwipeableCard","FiEdit2","FiTrash2","marginLeft","memo","fetchFunction","initialPageSize","incrementSize","maxItems","loadOnMount","dependencies","setData","loading","setLoading","setError","hasMore","setHasMore","pageSize","setPageSize","totalCount","setTotalCount","loadingRef","loadData","async","reset","end","result","prevData","count","loadedCount","hasMoreData","err","loadMore","prevSize","refresh","ListContainer","LoadingIndicator","LoadMoreButton","ErrorMessage","EmptyMessage","renderItem","keyExtractor","useInfiniteScroll","emptyMessage","loadingMessage","errorMessage","loadMoreText","observerTarget","useProgressiveLoading","observer","IntersectionObserver","entries","isIntersecting","observe","unobserve","renderItems","item","React","message","FiLoader","disabled","ref","height","textAlign","fontSize","margin","list","getItemKey","mapItem","deps","MemoizedTransactionItem","TransactionList","onEditTransaction","onDeleteTransaction","filters","sortConfig","column","direction","fetchTransactions","_ref2","slice","getTransactionsPaginated","sort","renderTransaction","getTransactionKey","memoizedItems","useMemoizedList","ProgressiveList","ManagerContainer","ManagerHeader","ManagerTitle","CloseButton","CategoriesList","CategoryItem","CategoryName","CategoryActions","AddCategoryForm","form","Input","input","AddButton","SaveButton","EditForm","EditInput","EditActions","onClose","onCategoriesChange","setExpenseCategories","setIncomeCategories","newCategory","setNewCategory","editingCategory","setEditingCategory","editValue","setEditValue","handleCancelEdit","currentCategories","FiX","onChange","target","autoFocus","categoryId","trim","some","alert","handleSaveEdit","FiCheck","_Fragment","handleEditCategory","confirm","onSubmit","preventDefault","newId","placeholder","FiPlus","saveCategories","FiSave","PlatformTypeContainer","PlatformTypeTitle","h4","PlatformList","ul","PlatformItem","li","PlatformName","DeleteButton","AddPlatformForm","Select","select","defaultPlatforms","cash","virtual","onPlatformsChange","platforms","setPlatforms","newPlatform","setNewPlatform","setPlatformType","savedVirtualPlatforms","cashPlatforms","virtualPlatforms","handleDeletePlatform","prev","_","savePlatforms","marginTop","handleReset","background","border","textDecoration","cursor","FormContainer","FormHeader","FormTitle","FormGroup","Label","label","required","RadioGroup","RadioLabel","checked","RadioInput","ButtonGroup","SubmitButton","CancelButton","ManageCategoriesButton","initialFormState","onCancel","formData","setFormData","showCategoryManager","setShowCategoryManager","showPlatformManager","setShowPlatformManager","customCategories","setCustomCategories","isEditMode","handleChange","CategoryManager","newCategories","PlatformManager","newPlatforms","parseFloat","htmlFor","min","step","FiSettings","marginRight","FiltersContainer","FiltersHeader","FiltersIcon","FiFilter","FiltersContent","SearchContainer","SearchIcon","FiSearch","SearchInput","FilterGroup","FilterSelect","DateContainer","DateInput","onFilterChange","search","startDate","endDate","subscribeToTable","table","callback","options","event","supabase","channel","on","schema","payload","subscribe","items","precision","transitions","useTransition","from","opacity","enter","leave","MenuContainer","ExportButton","AnimatedButton","DropdownMenu","MenuTitle","MenuItem","isOpen","setIsOpen","menuRef","menuAnimation","handleClickOutside","contains","addEventListener","removeEventListener","variant","toggleMenu","FiDownload","handleExportCSV","FiFileText","handleExportJSON","FiDatabase","handleExportExcel","Overlay","DialogContainer","DialogTitle","DialogContent","DialogActions","onConfirm","confirmText","cancelText","confirmVariant","overlayAnimation","dialogAnimation","stopPropagation","fullWidth","FinancesContainer","FinancesHeader","TransactionsSection","TransactionsHeaderActions","SectionTitle","h2","Finances","setTransactions","showForm","setShowForm","editingTransaction","setEditingTransaction","setFilters","filteredTransactions","setFilteredTransactions","confirmDialog","setConfirmDialog","subscription","localData","apiData","getTransactionsFromAPI","apiError","loadTransactions","userId","user","auth","getUser","subscribeToTransactions","eventType","new","newRecord","old","oldRecord","updated","showInfo","setupRealtimeSubscription","removeChannel","unsubscribe","searchTerm","a","b","localeCompare","AnimatedTransition","padding","backgroundColor","borderRadius","marginBottom","display","alignItems","gap","boxShadow","width","justifyContent","fontWeight","minWidth","borderColor","LoadingSpinner","text","FinancialSummary","ExportMenu","TransactionForm","newTransaction","updatedTransaction","showSuccess","apiUpdated","updateTransactionAPI","createdTransaction","apiCreated","createTransactionAPI","showError","handleCancelForm","TransactionFilters","transactionId","deleteTransactionAPI","ConfirmDialog"],"sourceRoot":""}