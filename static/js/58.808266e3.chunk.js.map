{"version":3,"file":"static/js/58.808266e3.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/helpers/helpers.dataset.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea, getDatasetClipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {chart, index, line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  const meta = chart.getDatasetMeta(index);\n  const clip = getDatasetClipArea(chart, meta);\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis, clip});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale, clip} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property, clip});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property, clip});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale, clip} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, clip, bounds) {\n  const chartArea = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n\n  if (property === 'x' || property === 'y') {\n    let left, top, right, bottom;\n\n    if (property === 'x') {\n      left = start;\n      top = chartArea.top;\n      right = end;\n      bottom = chartArea.bottom;\n    } else {\n      left = chartArea.left;\n      top = start;\n      right = chartArea.right;\n      bottom = end;\n    }\n\n    ctx.beginPath();\n\n    if (clip) {\n      left = Math.max(left, clip.left);\n      right = Math.min(right, clip.right);\n      top = Math.max(top, clip.top);\n      bottom = Math.min(bottom, clip.bottom);\n    }\n\n    ctx.rect(left, top, right - left, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Line","LineController","Bar","BarController","Doughnut","DoughnutController","PolarArea","PolarAreaController","Pie","PieController","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len0","_key0","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len1","scaleOptions","_key1","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","getPointPositionForValue","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","pointPosition","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel"],"sourceRoot":""}