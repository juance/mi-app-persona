{"version":3,"file":"static/js/37.fdfa81f1.chunk.js","mappings":"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","sources":["components/Auth/LoginForm.js","components/Auth/RegisterForm.js","components/Auth/ResetPasswordForm.js","pages/Auth.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiMail, FiLock, FiLogIn } from 'react-icons/fi';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst FormContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 32px;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst FormTitle = styled.h2`\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 24px;\n  text-align: center;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-size: 0.95rem;\n  color: var(--text-medium);\n  font-weight: 500;\n`;\n\nconst InputGroup = styled.div`\n  position: relative;\n\n  svg {\n    position: absolute;\n    left: 12px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: var(--text-light);\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 12px 12px 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--bg-light);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: var(--primary-dark);\n  }\n\n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n\n  svg {\n    font-size: 1.1rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  font-size: 0.9rem;\n  margin-top: 16px;\n  padding: 8px 12px;\n  background-color: rgba(239, 68, 68, 0.1);\n  border-radius: var(--border-radius);\n  text-align: center;\n`;\n\nconst SwitchText = styled.p`\n  text-align: center;\n  margin-top: 16px;\n  font-size: 0.9rem;\n  color: var(--text-medium);\n\n  a {\n    color: var(--primary-color);\n    text-decoration: none;\n    font-weight: 500;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst ForgotPasswordContainer = styled.div`\n  text-align: right;\n  margin-top: 8px;\n  font-size: 0.9rem;\n`;\n\nconst ForgotPasswordLink = styled.a`\n  color: var(--primary-color);\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst LoginForm = ({ onSwitchToRegister, onSwitchToReset }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formError, setFormError] = useState('');\n  const { login, loading, error } = useAuth();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validación básica\n    if (!email.trim()) {\n      setFormError('Por favor ingresa tu email');\n      return;\n    }\n\n    if (!password) {\n      setFormError('Por favor ingresa tu contraseña');\n      return;\n    }\n\n    // Intentar iniciar sesión\n    const { error } = await login(email, password);\n\n    if (error) {\n      setFormError(error.message || 'Error al iniciar sesión');\n    }\n  };\n\n  return (\n    <FormContainer>\n      <FormTitle>Iniciar Sesión</FormTitle>\n\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"email\">Email</Label>\n          <InputGroup>\n            <FiMail />\n            <Input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"tu@email.com\"\n              required\n            />\n          </InputGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"password\">Contraseña</Label>\n          <InputGroup>\n            <FiLock />\n            <Input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"••••••••\"\n              required\n            />\n          </InputGroup>\n          <ForgotPasswordContainer>\n            <ForgotPasswordLink\n              href=\"#\"\n              onClick={onSwitchToReset}\n            >\n              ¿Olvidaste tu contraseña?\n            </ForgotPasswordLink>\n          </ForgotPasswordContainer>\n        </FormGroup>\n\n        <SubmitButton type=\"submit\" disabled={loading}>\n          {loading ? 'Iniciando sesión...' : (\n            <>\n              <FiLogIn />\n              Iniciar Sesión\n            </>\n          )}\n        </SubmitButton>\n\n        {(formError || error) && (\n          <ErrorMessage>\n            {formError || error}\n          </ErrorMessage>\n        )}\n      </form>\n\n      <SwitchText>\n        ¿No tienes una cuenta? <a href=\"#\" onClick={onSwitchToRegister}>Regístrate</a>\n      </SwitchText>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiMail, FiLock, FiUserPlus } from 'react-icons/fi';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst FormContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 32px;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst FormTitle = styled.h2`\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 24px;\n  text-align: center;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-size: 0.95rem;\n  color: var(--text-medium);\n  font-weight: 500;\n`;\n\nconst InputGroup = styled.div`\n  position: relative;\n  \n  svg {\n    position: absolute;\n    left: 12px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: var(--text-light);\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 12px 12px 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--bg-light);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: all var(--transition-speed);\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n  \n  svg {\n    font-size: 1.1rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  font-size: 0.9rem;\n  margin-top: 16px;\n  padding: 8px 12px;\n  background-color: rgba(239, 68, 68, 0.1);\n  border-radius: var(--border-radius);\n  text-align: center;\n`;\n\nconst SwitchText = styled.p`\n  text-align: center;\n  margin-top: 16px;\n  font-size: 0.9rem;\n  color: var(--text-medium);\n  \n  a {\n    color: var(--primary-color);\n    text-decoration: none;\n    font-weight: 500;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst RegisterForm = ({ onSwitchToLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [formError, setFormError] = useState('');\n  const { register, loading, error } = useAuth();\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validación básica\n    if (!email.trim()) {\n      setFormError('Por favor ingresa tu email');\n      return;\n    }\n    \n    if (!password) {\n      setFormError('Por favor ingresa tu contraseña');\n      return;\n    }\n    \n    if (password.length < 6) {\n      setFormError('La contraseña debe tener al menos 6 caracteres');\n      return;\n    }\n    \n    if (password !== confirmPassword) {\n      setFormError('Las contraseñas no coinciden');\n      return;\n    }\n    \n    // Intentar registrarse\n    const { error } = await register(email, password);\n    \n    if (error) {\n      setFormError(error.message || 'Error al registrarse');\n    }\n  };\n  \n  return (\n    <FormContainer>\n      <FormTitle>Crear Cuenta</FormTitle>\n      \n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"email\">Email</Label>\n          <InputGroup>\n            <FiMail />\n            <Input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"tu@email.com\"\n              required\n            />\n          </InputGroup>\n        </FormGroup>\n        \n        <FormGroup>\n          <Label htmlFor=\"password\">Contraseña</Label>\n          <InputGroup>\n            <FiLock />\n            <Input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"••••••••\"\n              required\n            />\n          </InputGroup>\n        </FormGroup>\n        \n        <FormGroup>\n          <Label htmlFor=\"confirmPassword\">Confirmar Contraseña</Label>\n          <InputGroup>\n            <FiLock />\n            <Input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              placeholder=\"••••••••\"\n              required\n            />\n          </InputGroup>\n        </FormGroup>\n        \n        <SubmitButton type=\"submit\" disabled={loading}>\n          {loading ? 'Registrando...' : (\n            <>\n              <FiUserPlus />\n              Crear Cuenta\n            </>\n          )}\n        </SubmitButton>\n        \n        {(formError || error) && (\n          <ErrorMessage>\n            {formError || error}\n          </ErrorMessage>\n        )}\n      </form>\n      \n      <SwitchText>\n        ¿Ya tienes una cuenta? <a href=\"#\" onClick={onSwitchToLogin}>Inicia sesión</a>\n      </SwitchText>\n    </FormContainer>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiMail, FiArrowLeft } from 'react-icons/fi';\nimport { resetPassword } from '../../services/authService';\n\nconst FormContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 32px;\n  width: 100%;\n  max-width: 400px;\n  margin: 0 auto;\n`;\n\nconst FormTitle = styled.h2`\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 24px;\n  text-align: center;\n`;\n\nconst FormDescription = styled.p`\n  color: var(--text-medium);\n  font-size: 0.95rem;\n  margin-bottom: 24px;\n  text-align: center;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-size: 0.95rem;\n  color: var(--text-medium);\n  font-weight: 500;\n`;\n\nconst InputGroup = styled.div`\n  position: relative;\n  \n  svg {\n    position: absolute;\n    left: 12px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: var(--text-light);\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 12px 12px 40px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--bg-light);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: all var(--transition-speed);\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n`;\n\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background: none;\n  border: none;\n  color: var(--primary-color);\n  font-size: 0.95rem;\n  font-weight: 500;\n  cursor: pointer;\n  padding: 0;\n  margin-top: 16px;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  font-size: 0.9rem;\n  margin-top: 16px;\n  padding: 8px 12px;\n  background-color: rgba(239, 68, 68, 0.1);\n  border-radius: var(--border-radius);\n  text-align: center;\n`;\n\nconst SuccessMessage = styled.div`\n  color: var(--success-color);\n  font-size: 0.9rem;\n  margin-top: 16px;\n  padding: 8px 12px;\n  background-color: rgba(34, 197, 94, 0.1);\n  border-radius: var(--border-radius);\n  text-align: center;\n`;\n\nconst ResetPasswordForm = ({ onSwitchToLogin }) => {\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validación básica\n    if (!email.trim()) {\n      setError('Por favor ingresa tu email');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n      \n      const { error: resetError } = await resetPassword(email);\n      \n      if (resetError) {\n        setError(resetError.message || 'Error al enviar el correo de recuperación');\n      } else {\n        setSuccess('Se ha enviado un correo de recuperación a tu dirección de email');\n        setEmail('');\n      }\n    } catch (err) {\n      console.error('Error resetting password:', err);\n      setError('Error al enviar el correo de recuperación');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <FormContainer>\n      <FormTitle>Recuperar Contraseña</FormTitle>\n      <FormDescription>\n        Ingresa tu dirección de email y te enviaremos un enlace para restablecer tu contraseña.\n      </FormDescription>\n      \n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"email\">Email</Label>\n          <InputGroup>\n            <FiMail />\n            <Input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"tu@email.com\"\n              required\n            />\n          </InputGroup>\n        </FormGroup>\n        \n        <SubmitButton type=\"submit\" disabled={loading}>\n          {loading ? 'Enviando...' : 'Enviar Enlace de Recuperación'}\n        </SubmitButton>\n        \n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        {success && <SuccessMessage>{success}</SuccessMessage>}\n      </form>\n      \n      <BackButton onClick={onSwitchToLogin}>\n        <FiArrowLeft /> Volver al inicio de sesión\n      </BackButton>\n    </FormContainer>\n  );\n};\n\nexport default ResetPasswordForm;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport LoginForm from '../components/Auth/LoginForm';\nimport RegisterForm from '../components/Auth/RegisterForm';\nimport ResetPasswordForm from '../components/Auth/ResetPasswordForm';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst AuthContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  padding: 20px;\n  background: linear-gradient(135deg, var(--bg-light) 0%, var(--bg-medium) 100%);\n`;\n\nconst AuthHeader = styled.div`\n  text-align: center;\n  margin-bottom: 32px;\n`;\n\nconst Logo = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 700;\n  color: var(--primary-color);\n  margin-bottom: 8px;\n`;\n\nconst Tagline = styled.p`\n  font-size: 1.1rem;\n  color: var(--text-medium);\n`;\n\nconst Auth = () => {\n  const [authMode, setAuthMode] = useState('login'); // 'login', 'register', 'reset'\n  const { user, loading } = useAuth();\n  const navigate = useNavigate();\n\n  // Redirigir si el usuario ya está autenticado\n  useEffect(() => {\n    if (user && !loading) {\n      navigate('/dashboard');\n    }\n  }, [user, loading, navigate]);\n\n  const handleSwitchToRegister = (e) => {\n    e.preventDefault();\n    setAuthMode('register');\n  };\n\n  const handleSwitchToLogin = (e) => {\n    e.preventDefault();\n    setAuthMode('login');\n  };\n\n  const handleSwitchToReset = (e) => {\n    e.preventDefault();\n    setAuthMode('reset');\n  };\n\n  if (loading) {\n    return (\n      <AuthContainer>\n        <div>Cargando...</div>\n      </AuthContainer>\n    );\n  }\n\n  return (\n    <AuthContainer>\n      <AuthHeader>\n        <Logo>Mi App Personal</Logo>\n        <Tagline>Gestiona tus finanzas, tareas e inversiones en un solo lugar</Tagline>\n      </AuthHeader>\n\n      {authMode === 'login' && (\n        <LoginForm\n          onSwitchToRegister={handleSwitchToRegister}\n          onSwitchToReset={handleSwitchToReset}\n        />\n      )}\n\n      {authMode === 'register' && (\n        <RegisterForm onSwitchToLogin={handleSwitchToLogin} />\n      )}\n\n      {authMode === 'reset' && (\n        <ResetPasswordForm onSwitchToLogin={handleSwitchToLogin} />\n      )}\n    </AuthContainer>\n  );\n};\n\nexport default Auth;\n"],"names":["FormContainer","styled","div","FormTitle","h2","FormGroup","Label","label","InputGroup","Input","input","SubmitButton","button","ErrorMessage","SwitchText","p","ForgotPasswordContainer","ForgotPasswordLink","a","_ref","onSwitchToRegister","onSwitchToReset","email","setEmail","useState","password","setPassword","formError","setFormError","login","loading","error","useAuth","_jsxs","children","_jsx","onSubmit","async","e","preventDefault","trim","message","htmlFor","FiMail","type","id","value","onChange","target","placeholder","required","FiLock","href","onClick","disabled","_Fragment","FiLogIn","onSwitchToLogin","confirmPassword","setConfirmPassword","register","length","FiUserPlus","FormDescription","BackButton","SuccessMessage","setLoading","setError","success","setSuccess","resetError","resetPassword","err","console","FiArrowLeft","AuthContainer","AuthHeader","Logo","h1","Tagline","Auth","authMode","setAuthMode","user","navigate","useNavigate","useEffect","handleSwitchToLogin","LoginForm","RegisterForm","ResetPasswordForm"],"sourceRoot":""}