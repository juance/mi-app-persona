{"version":3,"file":"static/js/138.e32cd177.chunk.js","mappings":"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","sources":["components/Investments/InvestmentSummary.js","components/Investments/InvestmentItem.js","components/Investments/InvestmentList.js","components/Investments/InvestmentForm.js","components/Investments/InvestmentFilters.js","services/externalServices.js","components/Investments/StockTracker.js","components/Investments/FinancialNews.js","components/ChatBot/ChatMessage.js","components/ChatBot/ChatInput.js","components/ChatBot/FinancialAdvice.js","services/priceService.js","components/ChatBot/ChatBot.js","pages/Investments.js","services/simpleStorage.js","components/common/AnimatedButton.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { FiDollarSign, FiTrendingUp, FiTrendingDown, FiPieChart } from 'react-icons/fi';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\n\n// Registrar componentes de Chart.js\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst SummaryContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n  margin-bottom: 30px;\n\n  @media (max-width: 1024px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst SummaryCard = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  gap: 12px;\n`;\n\nconst IconContainer = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    switch (props.type) {\n      case 'invested': return 'rgba(99, 102, 241, 0.1)';\n      case 'current': return 'rgba(16, 185, 129, 0.1)';\n      case 'profit': return props.isPositive ? 'rgba(16, 185, 129, 0.1)' : 'rgba(239, 68, 68, 0.1)';\n      default: return 'rgba(245, 158, 11, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch (props.type) {\n      case 'invested': return 'var(--primary-color)';\n      case 'current': return 'var(--secondary-color)';\n      case 'profit': return props.isPositive ? 'var(--secondary-color)' : 'var(--danger-color)';\n      default: return 'var(--accent-color)';\n    }\n  }};\n  font-size: 1.2rem;\n`;\n\nconst CardTitle = styled.h3`\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 500;\n  color: var(--text-medium);\n`;\n\nconst Amount = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n  color: ${props => {\n    switch (props.type) {\n      case 'invested': return 'var(--primary-color)';\n      case 'current': return 'var(--secondary-color)';\n      case 'profit': return props.isPositive ? 'var(--secondary-color)' : 'var(--danger-color)';\n      default: return 'var(--accent-color)';\n    }\n  }};\n`;\n\nconst SecondaryAmount = styled.div`\n  font-size: 1rem;\n  color: var(--text-light);\n`;\n\nconst ChartContainer = styled.div`\n  grid-column: span 4;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n\n  @media (max-width: 1024px) {\n    grid-column: span 2;\n  }\n\n  @media (max-width: 768px) {\n    grid-column: span 1;\n  }\n`;\n\nconst ChartHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  gap: 12px;\n`;\n\nconst ChartTitle = styled.h3`\n  margin: 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst ChartWrapper = styled.div`\n  height: 300px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst formatCurrency = (amount, currency = 'ARS') => {\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency\n  }).format(amount);\n};\n\nconst formatPercentage = (value) => {\n  return new Intl.NumberFormat('es-ES', {\n    style: 'percent',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(value / 100);\n};\n\nconst InvestmentSummary = ({ investments, exchangeRate = 1.1 }) => {\n  // Separar inversiones por moneda\n  const arsInvestments = investments.filter(inv => (inv.currency || 'ARS') === 'ARS');\n  const usdInvestments = investments.filter(inv => (inv.currency || 'ARS') === 'USD');\n\n  // Calcular valores para inversiones en ARS\n  const totalInvestedARS = arsInvestments.reduce((sum, inv) => sum + (inv.purchase_price * inv.quantity), 0);\n  const currentValueARS = arsInvestments.reduce((sum, inv) => sum + (inv.current_price * inv.quantity), 0);\n  const profitLossARS = currentValueARS - totalInvestedARS;\n  const profitLossPercentageARS = totalInvestedARS > 0 ? (profitLossARS / totalInvestedARS) * 100 : 0;\n\n  // Calcular valores para inversiones en USD\n  const totalInvestedUSD = usdInvestments.reduce((sum, inv) => sum + (inv.purchase_price * inv.quantity), 0);\n  const currentValueUSD = usdInvestments.reduce((sum, inv) => sum + (inv.current_price * inv.quantity), 0);\n  const profitLossUSD = currentValueUSD - totalInvestedUSD;\n  const profitLossPercentageUSD = totalInvestedUSD > 0 ? (profitLossUSD / totalInvestedUSD) * 100 : 0;\n\n  // Valores totales (solo para el porcentaje de rendimiento global)\n  const totalInvested = totalInvestedARS + (totalInvestedUSD * exchangeRate);\n  const currentValue = currentValueARS + (currentValueUSD * exchangeRate);\n  const profitLoss = currentValue - totalInvested;\n  const profitLossPercentage = totalInvested > 0 ? (profitLoss / totalInvested) * 100 : 0;\n  const isPositive = profitLoss >= 0;\n\n  // Preparar datos para el gráfico\n  const getInvestmentsByTypeAndCurrency = () => {\n    const typeMap = {};\n\n    // Procesar inversiones en ARS\n    arsInvestments.forEach(inv => {\n      const value = inv.current_price * inv.quantity;\n      const key = `${inv.type}_ARS`;\n      if (typeMap[key]) {\n        typeMap[key] += value;\n      } else {\n        typeMap[key] = value;\n      }\n    });\n\n    // Procesar inversiones en USD\n    usdInvestments.forEach(inv => {\n      const value = inv.current_price * inv.quantity;\n      const key = `${inv.type}_USD`;\n      if (typeMap[key]) {\n        typeMap[key] += value;\n      } else {\n        typeMap[key] = value;\n      }\n    });\n\n    return typeMap;\n  };\n\n  const investmentsByTypeAndCurrency = getInvestmentsByTypeAndCurrency();\n\n  const getTypeAndCurrencyLabel = (key) => {\n    const [type, currency] = key.split('_');\n    let typeLabel = '';\n\n    switch (type) {\n      case 'stock': typeLabel = 'Acciones'; break;\n      case 'crypto': typeLabel = 'Criptomonedas'; break;\n      case 'etf': typeLabel = 'ETFs'; break;\n      case 'bond': typeLabel = 'Bonos'; break;\n      case 'fund': typeLabel = 'Fondos'; break;\n      default: typeLabel = type;\n    }\n\n    return `${typeLabel} (${currency})`;\n  };\n\n  // Colores para ARS y USD\n  const getBackgroundColor = (key) => {\n    const [type, currency] = key.split('_');\n    const baseColors = {\n      'stock': currency === 'ARS' ? 'rgba(99, 102, 241, 0.7)' : 'rgba(99, 102, 241, 0.4)',\n      'crypto': currency === 'ARS' ? 'rgba(245, 158, 11, 0.7)' : 'rgba(245, 158, 11, 0.4)',\n      'etf': currency === 'ARS' ? 'rgba(16, 185, 129, 0.7)' : 'rgba(16, 185, 129, 0.4)',\n      'bond': currency === 'ARS' ? 'rgba(239, 68, 68, 0.7)' : 'rgba(239, 68, 68, 0.4)',\n      'fund': currency === 'ARS' ? 'rgba(168, 85, 247, 0.7)' : 'rgba(168, 85, 247, 0.4)',\n    };\n\n    return baseColors[type] || (currency === 'ARS' ? 'rgba(99, 102, 241, 0.7)' : 'rgba(99, 102, 241, 0.4)');\n  };\n\n  const getBorderColor = (key) => {\n    const [type, currency] = key.split('_');\n    const baseColors = {\n      'stock': 'rgba(99, 102, 241, 1)',\n      'crypto': 'rgba(245, 158, 11, 1)',\n      'etf': 'rgba(16, 185, 129, 1)',\n      'bond': 'rgba(239, 68, 68, 1)',\n      'fund': 'rgba(168, 85, 247, 1)',\n    };\n\n    return baseColors[type] || 'rgba(99, 102, 241, 1)';\n  };\n\n  const chartData = {\n    labels: Object.keys(investmentsByTypeAndCurrency).map(key => getTypeAndCurrencyLabel(key)),\n    datasets: [\n      {\n        data: Object.values(investmentsByTypeAndCurrency),\n        backgroundColor: Object.keys(investmentsByTypeAndCurrency).map(key => getBackgroundColor(key)),\n        borderColor: Object.keys(investmentsByTypeAndCurrency).map(key => getBorderColor(key)),\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          font: {\n            family: 'Poppins'\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const value = context.raw;\n            const key = Object.keys(investmentsByTypeAndCurrency)[context.dataIndex];\n            const [, currency] = key.split('_');\n\n            // Calcular el porcentaje del total según la moneda\n            let totalValue = currency === 'ARS' ? currentValueARS : currentValueUSD;\n            const percentage = totalValue > 0 ? (value / totalValue) * 100 : 0;\n\n            return `${context.label}: ${formatCurrency(value, currency)} (${formatPercentage(percentage)})`;\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <SummaryContainer>\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"invested\">\n              <FiDollarSign />\n            </IconContainer>\n            <CardTitle>Total Invertido (ARS)</CardTitle>\n          </CardHeader>\n          <Amount type=\"invested\">{formatCurrency(totalInvestedARS, 'ARS')}</Amount>\n          <SecondaryAmount>{arsInvestments.length} inversiones en pesos</SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"invested\">\n              <FiDollarSign />\n            </IconContainer>\n            <CardTitle>Total Invertido (USD)</CardTitle>\n          </CardHeader>\n          <Amount type=\"invested\">{formatCurrency(totalInvestedUSD, 'USD')}</Amount>\n          <SecondaryAmount>{usdInvestments.length} inversiones en dólares</SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"current\">\n              <FiDollarSign />\n            </IconContainer>\n            <CardTitle>Valor Actual (ARS)</CardTitle>\n          </CardHeader>\n          <Amount type=\"current\">{formatCurrency(currentValueARS, 'ARS')}</Amount>\n          <SecondaryAmount>\n            {profitLossARS >= 0 ? '+' : ''}{formatCurrency(profitLossARS, 'ARS')} ({formatPercentage(profitLossPercentageARS)})\n          </SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"current\">\n              <FiDollarSign />\n            </IconContainer>\n            <CardTitle>Valor Actual (USD)</CardTitle>\n          </CardHeader>\n          <Amount type=\"current\">{formatCurrency(currentValueUSD, 'USD')}</Amount>\n          <SecondaryAmount>\n            {profitLossUSD >= 0 ? '+' : ''}{formatCurrency(profitLossUSD, 'USD')} ({formatPercentage(profitLossPercentageUSD)})\n          </SecondaryAmount>\n        </SummaryCard>\n      </SummaryContainer>\n\n      <SummaryContainer>\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"profit\" isPositive={profitLossARS >= 0}>\n              {profitLossARS >= 0 ? <FiTrendingUp /> : <FiTrendingDown />}\n            </IconContainer>\n            <CardTitle>Rendimiento (ARS)</CardTitle>\n          </CardHeader>\n          <Amount type=\"profit\" isPositive={profitLossARS >= 0}>\n            {profitLossARS >= 0 ? '+' : ''}{formatPercentage(profitLossPercentageARS)}\n          </Amount>\n          <SecondaryAmount>\n            {profitLossARS >= 0 ? '+' : ''}{formatCurrency(profitLossARS, 'ARS')}\n          </SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"profit\" isPositive={profitLossUSD >= 0}>\n              {profitLossUSD >= 0 ? <FiTrendingUp /> : <FiTrendingDown />}\n            </IconContainer>\n            <CardTitle>Rendimiento (USD)</CardTitle>\n          </CardHeader>\n          <Amount type=\"profit\" isPositive={profitLossUSD >= 0}>\n            {profitLossUSD >= 0 ? '+' : ''}{formatPercentage(profitLossPercentageUSD)}\n          </Amount>\n          <SecondaryAmount>\n            {profitLossUSD >= 0 ? '+' : ''}{formatCurrency(profitLossUSD, 'USD')}\n          </SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"profit\" isPositive={isPositive}>\n              {isPositive ? <FiTrendingUp /> : <FiTrendingDown />}\n            </IconContainer>\n            <CardTitle>Rendimiento Global</CardTitle>\n          </CardHeader>\n          <Amount type=\"profit\" isPositive={isPositive}>\n            {isPositive ? '+' : ''}{formatPercentage(profitLossPercentage)}\n          </Amount>\n          <SecondaryAmount>\n            {investments.length} inversiones totales\n          </SecondaryAmount>\n        </SummaryCard>\n      </SummaryContainer>\n\n      {investments.length > 0 && (\n        <ChartContainer>\n          <ChartHeader>\n            <IconContainer type=\"distribution\">\n              <FiPieChart />\n            </IconContainer>\n            <ChartTitle>Distribución de Inversiones</ChartTitle>\n          </ChartHeader>\n\n          <ChartWrapper>\n            <Pie data={chartData} options={chartOptions} />\n          </ChartWrapper>\n        </ChartContainer>\n      )}\n    </>\n  );\n};\n\nexport default InvestmentSummary;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiTrendingUp, FiTrendingDown, FiEdit2, FiTrash2 } from 'react-icons/fi';\n\nconst InvestmentContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  margin-bottom: 16px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n`;\n\nconst InvestmentHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 16px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 12px;\n  }\n`;\n\nconst InvestmentInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nconst InvestmentSymbol = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background-color: ${props => props.type === 'stock'\n    ? 'rgba(99, 102, 241, 0.1)'\n    : props.type === 'crypto'\n      ? 'rgba(245, 158, 11, 0.1)'\n      : 'rgba(16, 185, 129, 0.1)'\n  };\n  color: ${props => props.type === 'stock'\n    ? 'var(--primary-color)'\n    : props.type === 'crypto'\n      ? 'var(--accent-color)'\n      : 'var(--secondary-color)'\n  };\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n  font-size: 1.2rem;\n`;\n\nconst InvestmentDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst InvestmentName = styled.h3`\n  margin: 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst InvestmentType = styled.span`\n  font-size: 0.85rem;\n  color: var(--text-medium);\n  margin-top: 4px;\n`;\n\nconst InvestmentPlatform = styled.span`\n  font-size: 0.85rem;\n  color: var(--accent-color);\n  margin-top: 4px;\n`;\n\nconst InvestmentActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst InvestmentBody = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  gap: 16px;\n  margin-bottom: 16px;\n`;\n\nconst InvestmentStat = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StatLabel = styled.span`\n  font-size: 0.85rem;\n  color: var(--text-medium);\n  margin-bottom: 4px;\n`;\n\nconst StatValue = styled.span`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst PerformanceContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst PerformanceValue = styled.span`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${props => props.isPositive\n    ? 'var(--secondary-color)'\n    : 'var(--danger-color)'\n  };\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nconst PerformanceIcon = styled.span`\n  font-size: 1.2rem;\n`;\n\nconst formatCurrency = (amount, currency = 'ARS') => {\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency\n  }).format(amount);\n};\n\nconst formatPercentage = (value) => {\n  return new Intl.NumberFormat('es-ES', {\n    style: 'percent',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(value / 100);\n};\n\nconst getInvestmentTypeText = (type) => {\n  switch (type) {\n    case 'stock': return 'Acción';\n    case 'crypto': return 'Criptomoneda';\n    case 'etf': return 'ETF';\n    case 'bond': return 'Bono';\n    case 'fund': return 'Fondo de inversión';\n    default: return type;\n  }\n};\n\nconst InvestmentItem = ({ investment, onEdit, onDelete }) => {\n  const {\n    id,\n    name,\n    symbol,\n    type,\n    quantity,\n    purchase_price,\n    current_price,\n    platform,\n    currency = 'ARS',\n    purchase_date\n  } = investment;\n\n  // Calcular valores\n  const totalInvested = purchase_price * quantity;\n  const currentValue = current_price * quantity;\n  const profitLoss = currentValue - totalInvested;\n  const profitLossPercentage = (profitLoss / totalInvested) * 100;\n  const isPositive = profitLoss >= 0;\n\n  // Formatear fecha de compra\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('es-ES');\n  };\n\n  return (\n    <InvestmentContainer>\n      <InvestmentHeader>\n        <InvestmentInfo>\n          <InvestmentSymbol type={type}>\n            {symbol.substring(0, 2).toUpperCase()}\n          </InvestmentSymbol>\n          <InvestmentDetails>\n            <InvestmentName>{name}</InvestmentName>\n            <InvestmentType>{getInvestmentTypeText(type)} • {symbol.toUpperCase()}</InvestmentType>\n            {platform && <InvestmentPlatform>{platform}</InvestmentPlatform>}\n          </InvestmentDetails>\n        </InvestmentInfo>\n\n        <InvestmentActions>\n          <ActionButton onClick={() => onEdit(investment)} color=\"var(--primary-color)\">\n            <FiEdit2 />\n          </ActionButton>\n          <ActionButton onClick={() => onDelete(id)} color=\"var(--danger-color)\">\n            <FiTrash2 />\n          </ActionButton>\n        </InvestmentActions>\n      </InvestmentHeader>\n\n      <InvestmentBody>\n        <InvestmentStat>\n          <StatLabel>Cantidad</StatLabel>\n          <StatValue>{quantity}</StatValue>\n        </InvestmentStat>\n\n        <InvestmentStat>\n          <StatLabel>Precio de compra ({currency})</StatLabel>\n          <StatValue>{formatCurrency(purchase_price, currency)}</StatValue>\n        </InvestmentStat>\n\n        <InvestmentStat>\n          <StatLabel>Precio actual ({currency})</StatLabel>\n          <StatValue>{formatCurrency(current_price, currency)}</StatValue>\n        </InvestmentStat>\n\n        <InvestmentStat>\n          <StatLabel>Inversión total ({currency})</StatLabel>\n          <StatValue>{formatCurrency(totalInvested, currency)}</StatValue>\n        </InvestmentStat>\n\n        <InvestmentStat>\n          <StatLabel>Valor actual ({currency})</StatLabel>\n          <StatValue>{formatCurrency(currentValue, currency)}</StatValue>\n        </InvestmentStat>\n\n        <InvestmentStat>\n          <StatLabel>Rendimiento ({currency})</StatLabel>\n          <PerformanceContainer>\n            <PerformanceValue isPositive={isPositive}>\n              <PerformanceIcon>\n                {isPositive ? <FiTrendingUp /> : <FiTrendingDown />}\n              </PerformanceIcon>\n              {formatCurrency(profitLoss, currency)}\n            </PerformanceValue>\n            <PerformanceValue isPositive={isPositive}>\n              ({formatPercentage(profitLossPercentage)})\n            </PerformanceValue>\n          </PerformanceContainer>\n        </InvestmentStat>\n      </InvestmentBody>\n\n      <div>\n        <StatLabel>Fecha de compra: {formatDate(purchase_date)}</StatLabel>\n      </div>\n    </InvestmentContainer>\n  );\n};\n\nexport default InvestmentItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport InvestmentItem from './InvestmentItem';\n\nconst ListContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 30px 0;\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n`;\n\nconst InvestmentList = ({ investments, onEditInvestment, onDeleteInvestment }) => {\n  if (!investments || investments.length === 0) {\n    return (\n      <ListContainer>\n        <EmptyMessage>\n          No hay inversiones. ¡Registra una nueva!\n        </EmptyMessage>\n      </ListContainer>\n    );\n  }\n\n  return (\n    <ListContainer>\n      {investments.map(investment => (\n        <InvestmentItem \n          key={investment.id} \n          investment={investment} \n          onEdit={onEditInvestment} \n          onDelete={onDeleteInvestment} \n        />\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default InvestmentList;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiX } from 'react-icons/fi';\n\nconst FormContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst FormTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  padding: 12px;\n  background-color: rgba(239, 68, 68, 0.08);\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--danger-color);\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n\n  &::after {\n    content: ' *';\n    color: var(--danger-color);\n    display: ${props => props.required ? 'inline' : 'none'};\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 24px;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  flex: 1;\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst CancelButton = styled.button`\n  background-color: var(--bg-medium);\n  color: var(--text-medium);\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--bg-dark);\n    color: var(--text-light);\n  }\n`;\n\nconst initialFormState = {\n  name: '',\n  symbol: '',\n  type: 'stock',\n  quantity: '',\n  purchase_price: '',\n  current_price: '',\n  platform: '',\n  currency: 'ARS',\n  purchase_date: new Date().toISOString().split('T')[0]\n};\n\nconst InvestmentForm = ({ investment, onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState(initialFormState);\n  const [error, setError] = useState('');\n  const isEditMode = !!investment?.id;\n\n  useEffect(() => {\n    if (investment) {\n      setFormData({\n        name: investment.name || '',\n        symbol: investment.symbol || '',\n        type: investment.type || 'stock',\n        quantity: investment.quantity || '',\n        purchase_price: investment.purchase_price || '',\n        current_price: investment.current_price || '',\n        platform: investment.platform || '',\n        currency: investment.currency || 'ARS',\n        purchase_date: investment.purchase_date || new Date().toISOString().split('T')[0]\n      });\n    } else {\n      setFormData(initialFormState);\n    }\n  }, [investment]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validación\n    if (!formData.name.trim()) {\n      setError('Por favor ingresa un nombre para la inversión.');\n      return;\n    }\n\n    if (!formData.symbol.trim()) {\n      setError('Por favor ingresa un símbolo para la inversión.');\n      return;\n    }\n\n    if (!formData.quantity || parseFloat(formData.quantity) <= 0) {\n      setError('Por favor ingresa una cantidad válida.');\n      return;\n    }\n\n    if (!formData.purchase_price || parseFloat(formData.purchase_price) <= 0) {\n      setError('Por favor ingresa un precio de compra válido.');\n      return;\n    }\n\n    if (!formData.current_price || parseFloat(formData.current_price) <= 0) {\n      setError('Por favor ingresa un precio actual válido.');\n      return;\n    }\n\n    // Enviar datos\n    onSubmit({\n      ...formData,\n      id: investment?.id || Date.now(),\n      quantity: parseFloat(formData.quantity),\n      purchase_price: parseFloat(formData.purchase_price),\n      current_price: parseFloat(formData.current_price)\n    });\n\n    // Resetear formulario si no estamos en modo edición\n    if (!isEditMode) {\n      setFormData(initialFormState);\n    }\n\n    setError('');\n  };\n\n  return (\n    <FormContainer>\n      <FormHeader>\n        <FormTitle>\n          {isEditMode ? 'Editar Inversión' : 'Registrar Nueva Inversión'}\n        </FormTitle>\n        <CloseButton onClick={onCancel}>\n          <FiX />\n        </CloseButton>\n      </FormHeader>\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGrid>\n          <FormGroup>\n            <Label htmlFor=\"name\" required>Nombre</Label>\n            <Input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              placeholder=\"Ej: Apple Inc.\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"symbol\" required>Símbolo</Label>\n            <Input\n              type=\"text\"\n              id=\"symbol\"\n              name=\"symbol\"\n              value={formData.symbol}\n              onChange={handleChange}\n              placeholder=\"Ej: AAPL\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"type\" required>Tipo</Label>\n            <Select\n              id=\"type\"\n              name=\"type\"\n              value={formData.type}\n              onChange={handleChange}\n              required\n            >\n              <option value=\"stock\">Acción</option>\n              <option value=\"etf\">ETF</option>\n              <option value=\"crypto\">Criptomoneda</option>\n              <option value=\"bond\">Bono</option>\n              <option value=\"fund\">Fondo de inversión</option>\n            </Select>\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"quantity\" required>Cantidad</Label>\n            <Input\n              type=\"number\"\n              id=\"quantity\"\n              name=\"quantity\"\n              value={formData.quantity}\n              onChange={handleChange}\n              placeholder=\"0\"\n              min=\"0.00000001\"\n              step=\"any\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"currency\" required>Moneda</Label>\n            <Select\n              id=\"currency\"\n              name=\"currency\"\n              value={formData.currency}\n              onChange={handleChange}\n              required\n            >\n              <option value=\"ARS\">Pesos Argentinos (ARS)</option>\n              <option value=\"USD\">Dólares (USD)</option>\n            </Select>\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"purchase_price\" required>Precio de compra ({formData.currency})</Label>\n            <Input\n              type=\"number\"\n              id=\"purchase_price\"\n              name=\"purchase_price\"\n              value={formData.purchase_price}\n              onChange={handleChange}\n              placeholder=\"0.00\"\n              min=\"0.01\"\n              step=\"0.01\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"current_price\" required>Precio actual ({formData.currency})</Label>\n            <Input\n              type=\"number\"\n              id=\"current_price\"\n              name=\"current_price\"\n              value={formData.current_price}\n              onChange={handleChange}\n              placeholder=\"0.00\"\n              min=\"0.01\"\n              step=\"0.01\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"platform\">Plataforma</Label>\n            <Input\n              type=\"text\"\n              id=\"platform\"\n              name=\"platform\"\n              value={formData.platform}\n              onChange={handleChange}\n              placeholder=\"Ej: IOL, PPI, Binance\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"purchase_date\" required>Fecha de compra</Label>\n            <Input\n              type=\"date\"\n              id=\"purchase_date\"\n              name=\"purchase_date\"\n              value={formData.purchase_date}\n              onChange={handleChange}\n              required\n            />\n          </FormGroup>\n        </FormGrid>\n\n        <ButtonGroup>\n          <SubmitButton type=\"submit\">\n            {isEditMode ? 'Guardar Cambios' : 'Registrar Inversión'}\n          </SubmitButton>\n          <CancelButton type=\"button\" onClick={onCancel}>\n            Cancelar\n          </CancelButton>\n        </ButtonGroup>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default InvestmentForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiFilter, FiSearch } from 'react-icons/fi';\n\nconst FiltersContainer = styled.div`\n  background-color: var(--bg-medium);\n  padding: 16px;\n  border-radius: var(--border-radius);\n  margin-bottom: 20px;\n`;\n\nconst FiltersHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  gap: 8px;\n  color: var(--text-medium);\n  font-weight: 500;\n  font-size: 0.95rem;\n`;\n\nconst FiltersIcon = styled(FiFilter)`\n  font-size: 1.1rem;\n`;\n\nconst FiltersContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst SearchContainer = styled.div`\n  flex: 2;\n  position: relative;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst SearchIcon = styled(FiSearch)`\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: var(--text-light);\n  font-size: 1rem;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 10px 10px 10px 36px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  &::placeholder {\n    color: var(--text-light);\n  }\n`;\n\nconst FilterGroup = styled.div`\n  flex: 1;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst FilterSelect = styled.select`\n  width: 100%;\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst InvestmentFilters = ({ filters, onFilterChange }) => {\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    onFilterChange({ ...filters, [name]: value });\n  };\n\n  return (\n    <FiltersContainer>\n      <FiltersHeader>\n        <FiltersIcon />\n        Filtrar inversiones\n      </FiltersHeader>\n\n      <FiltersContent>\n        <SearchContainer>\n          <SearchIcon />\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Buscar inversiones...\"\n            name=\"search\"\n            value={filters.search || ''}\n            onChange={handleChange}\n          />\n        </SearchContainer>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"type\"\n            value={filters.type || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todos los tipos</option>\n            <option value=\"stock\">Acciones</option>\n            <option value=\"etf\">ETFs</option>\n            <option value=\"crypto\">Criptomonedas</option>\n            <option value=\"bond\">Bonos</option>\n            <option value=\"fund\">Fondos</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"currency\"\n            value={filters.currency || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todas las monedas</option>\n            <option value=\"ARS\">Pesos Argentinos (ARS)</option>\n            <option value=\"USD\">Dólares (USD)</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"performance\"\n            value={filters.performance || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todos los rendimientos</option>\n            <option value=\"positive\">Ganancias</option>\n            <option value=\"negative\">Pérdidas</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"sort\"\n            value={filters.sort || 'name_asc'}\n            onChange={handleChange}\n          >\n            <option value=\"name_asc\">Nombre (A-Z)</option>\n            <option value=\"name_desc\">Nombre (Z-A)</option>\n            <option value=\"value_desc\">Mayor valor primero</option>\n            <option value=\"value_asc\">Menor valor primero</option>\n            <option value=\"performance_desc\">Mayor rendimiento primero</option>\n            <option value=\"performance_asc\">Menor rendimiento primero</option>\n            <option value=\"date_desc\">Más recientes primero</option>\n            <option value=\"date_asc\">Más antiguas primero</option>\n          </FilterSelect>\n        </FilterGroup>\n      </FiltersContent>\n    </FiltersContainer>\n  );\n};\n\nexport default InvestmentFilters;\n","/**\n * Servicio para integración con APIs externas\n */\n\n// API Key para Alpha Vantage (servicio de datos financieros)\nconst ALPHA_VANTAGE_API_KEY = 'demo'; // Reemplazar con tu API key real\n\n// API Key para OpenWeatherMap (servicio de clima)\nconst OPENWEATHER_API_KEY = 'demo'; // Reemplazar con tu API key real\n\n// API Key para NewsAPI (servicio de noticias)\nconst NEWS_API_KEY = 'demo'; // Reemplazar con tu API key real\n\n/**\n * Obtiene datos de cotización de una acción\n * @param {string} symbol - Símbolo de la acción (ej. AAPL, MSFT)\n * @returns {Promise<Object>} - Datos de la acción\n */\nexport const getStockQuote = async (symbol) => {\n  try {\n    const response = await fetch(\n      `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error(`Error al obtener datos de la acción: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    \n    // Verificar si hay un error en la respuesta\n    if (data['Error Message']) {\n      throw new Error(data['Error Message']);\n    }\n    \n    // Verificar si se excedió el límite de la API\n    if (data.Note && data.Note.includes('API call frequency')) {\n      throw new Error('Se ha excedido el límite de llamadas a la API. Por favor, intenta más tarde.');\n    }\n    \n    return data['Global Quote'] || {};\n  } catch (error) {\n    console.error('Error en getStockQuote:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene datos históricos de una acción\n * @param {string} symbol - Símbolo de la acción (ej. AAPL, MSFT)\n * @param {string} interval - Intervalo de tiempo (1min, 5min, 15min, 30min, 60min, daily, weekly, monthly)\n * @returns {Promise<Object>} - Datos históricos de la acción\n */\nexport const getStockHistory = async (symbol, interval = 'daily') => {\n  try {\n    const response = await fetch(\n      `https://www.alphavantage.co/query?function=TIME_SERIES_${interval.toUpperCase()}&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error(`Error al obtener datos históricos: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    \n    // Verificar si hay un error en la respuesta\n    if (data['Error Message']) {\n      throw new Error(data['Error Message']);\n    }\n    \n    // Verificar si se excedió el límite de la API\n    if (data.Note && data.Note.includes('API call frequency')) {\n      throw new Error('Se ha excedido el límite de llamadas a la API. Por favor, intenta más tarde.');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Error en getStockHistory:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene datos del clima para una ubicación\n * @param {string} city - Nombre de la ciudad\n * @param {string} country - Código del país (ej. AR, US)\n * @returns {Promise<Object>} - Datos del clima\n */\nexport const getWeather = async (city, country) => {\n  try {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&lang=es&appid=${OPENWEATHER_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error(`Error al obtener datos del clima: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    \n    return data;\n  } catch (error) {\n    console.error('Error en getWeather:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene noticias financieras\n * @param {string} query - Término de búsqueda\n * @param {number} pageSize - Número de resultados por página\n * @returns {Promise<Object>} - Noticias financieras\n */\nexport const getFinancialNews = async (query = 'finance', pageSize = 5) => {\n  try {\n    const response = await fetch(\n      `https://newsapi.org/v2/everything?q=${query}&language=es&pageSize=${pageSize}&apiKey=${NEWS_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error(`Error al obtener noticias: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    \n    return data.articles || [];\n  } catch (error) {\n    console.error('Error en getFinancialNews:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene la tasa de cambio entre dos monedas\n * @param {string} fromCurrency - Moneda de origen (ej. USD, EUR)\n * @param {string} toCurrency - Moneda de destino (ej. ARS, USD)\n * @returns {Promise<Object>} - Tasa de cambio\n */\nexport const getExchangeRate = async (fromCurrency, toCurrency) => {\n  try {\n    const response = await fetch(\n      `https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=${fromCurrency}&to_currency=${toCurrency}&apikey=${ALPHA_VANTAGE_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error(`Error al obtener tasa de cambio: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    \n    // Verificar si hay un error en la respuesta\n    if (data['Error Message']) {\n      throw new Error(data['Error Message']);\n    }\n    \n    // Verificar si se excedió el límite de la API\n    if (data.Note && data.Note.includes('API call frequency')) {\n      throw new Error('Se ha excedido el límite de llamadas a la API. Por favor, intenta más tarde.');\n    }\n    \n    return data['Realtime Currency Exchange Rate'] || {};\n  } catch (error) {\n    console.error('Error en getExchangeRate:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene datos de criptomonedas\n * @param {string} symbol - Símbolo de la criptomoneda (ej. BTC, ETH)\n * @param {string} market - Moneda de mercado (ej. USD, EUR)\n * @returns {Promise<Object>} - Datos de la criptomoneda\n */\nexport const getCryptoData = async (symbol, market = 'USD') => {\n  try {\n    const response = await fetch(\n      `https://www.alphavantage.co/query?function=CRYPTO_INTRADAY&symbol=${symbol}&market=${market}&interval=5min&apikey=${ALPHA_VANTAGE_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error(`Error al obtener datos de criptomoneda: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    \n    // Verificar si hay un error en la respuesta\n    if (data['Error Message']) {\n      throw new Error(data['Error Message']);\n    }\n    \n    // Verificar si se excedió el límite de la API\n    if (data.Note && data.Note.includes('API call frequency')) {\n      throw new Error('Se ha excedido el límite de llamadas a la API. Por favor, intenta más tarde.');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Error en getCryptoData:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene datos económicos globales\n * @param {string} indicator - Indicador económico (ej. GDP, INFLATION)\n * @returns {Promise<Object>} - Datos económicos\n */\nexport const getEconomicData = async (indicator) => {\n  try {\n    const response = await fetch(\n      `https://www.alphavantage.co/query?function=${indicator}&interval=annual&apikey=${ALPHA_VANTAGE_API_KEY}`\n    );\n    \n    if (!response.ok) {\n      throw new Error(`Error al obtener datos económicos: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    \n    // Verificar si hay un error en la respuesta\n    if (data['Error Message']) {\n      throw new Error(data['Error Message']);\n    }\n    \n    // Verificar si se excedió el límite de la API\n    if (data.Note && data.Note.includes('API call frequency')) {\n      throw new Error('Se ha excedió el límite de llamadas a la API. Por favor, intenta más tarde.');\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Error en getEconomicData:', error);\n    throw error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiRefreshCw, FiPlus, FiTrash2, FiArrowUp, FiArrowDown } from 'react-icons/fi';\nimport { getStockQuote } from '../../services/externalServices';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport AnimatedButton from '../common/AnimatedButton';\nimport { showSuccess, showError } from '../common/Notification';\n\n// Estilos\nconst TrackerContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst TrackerHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n  }\n`;\n\nconst TrackerTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst StockGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 16px;\n  margin-top: 24px;\n`;\n\nconst StockCard = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  padding: 16px;\n  position: relative;\n  transition: transform 0.3s, box-shadow 0.3s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst StockSymbol = styled.div`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  margin-bottom: 8px;\n`;\n\nconst StockPrice = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: var(--text-dark);\n  margin-bottom: 8px;\n`;\n\nconst StockChange = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: ${props => props.positive ? 'var(--success-color)' : 'var(--danger-color)'};\n  margin-bottom: 16px;\n`;\n\nconst StockInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 0.8rem;\n  color: var(--text-medium);\n`;\n\nconst StockInfoItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst DeleteButton = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  background: none;\n  border: none;\n  color: var(--text-light);\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n  \n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.08);\n  }\n`;\n\nconst AddStockForm = styled.form`\n  display: flex;\n  gap: 8px;\n  margin-top: 16px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst StockInput = styled.input`\n  padding: 8px 12px;\n  border-radius: var(--border-radius);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 0.9rem;\n  flex: 1;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 32px;\n  color: var(--text-medium);\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n`;\n\n/**\n * Componente de seguimiento de acciones\n * @returns {JSX.Element} - Componente de seguimiento de acciones\n */\nconst StockTracker = () => {\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newSymbol, setNewSymbol] = useState('');\n  const [refreshing, setRefreshing] = useState(false);\n  \n  // Cargar símbolos guardados\n  useEffect(() => {\n    const savedStocks = localStorage.getItem('trackedStocks');\n    if (savedStocks) {\n      setStocks(JSON.parse(savedStocks));\n    }\n  }, []);\n  \n  // Guardar símbolos\n  useEffect(() => {\n    if (stocks.length > 0) {\n      localStorage.setItem('trackedStocks', JSON.stringify(stocks));\n    }\n  }, [stocks]);\n  \n  // Formatear precio\n  const formatPrice = (price) => {\n    return new Intl.NumberFormat('es-AR', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(price);\n  };\n  \n  // Formatear porcentaje\n  const formatPercent = (percent) => {\n    return new Intl.NumberFormat('es-AR', {\n      style: 'percent',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(percent / 100);\n  };\n  \n  // Agregar símbolo\n  const handleAddStock = async (e) => {\n    e.preventDefault();\n    \n    if (!newSymbol.trim()) {\n      return;\n    }\n    \n    // Verificar si el símbolo ya está en la lista\n    if (stocks.some(stock => stock.symbol === newSymbol.toUpperCase())) {\n      showError(`El símbolo ${newSymbol.toUpperCase()} ya está en la lista`);\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      const data = await getStockQuote(newSymbol);\n      \n      if (!data || Object.keys(data).length === 0) {\n        showError(`No se encontraron datos para el símbolo ${newSymbol}`);\n        return;\n      }\n      \n      const newStock = {\n        symbol: data['01. symbol'] || newSymbol.toUpperCase(),\n        price: parseFloat(data['05. price']) || 0,\n        change: parseFloat(data['09. change']) || 0,\n        changePercent: parseFloat(data['10. change percent'].replace('%', '')) || 0,\n        volume: parseInt(data['06. volume']) || 0,\n        lastUpdated: data['07. latest trading day'] || new Date().toISOString().split('T')[0],\n      };\n      \n      setStocks(prev => [...prev, newStock]);\n      setNewSymbol('');\n      showSuccess(`Símbolo ${newStock.symbol} agregado correctamente`);\n    } catch (error) {\n      console.error('Error al agregar símbolo:', error);\n      showError(`Error al agregar símbolo: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Eliminar símbolo\n  const handleDeleteStock = (symbol) => {\n    setStocks(prev => prev.filter(stock => stock.symbol !== symbol));\n    showSuccess(`Símbolo ${symbol} eliminado correctamente`);\n  };\n  \n  // Actualizar datos\n  const handleRefresh = async () => {\n    if (stocks.length === 0) {\n      return;\n    }\n    \n    try {\n      setRefreshing(true);\n      \n      const updatedStocks = await Promise.all(\n        stocks.map(async (stock) => {\n          try {\n            const data = await getStockQuote(stock.symbol);\n            \n            if (!data || Object.keys(data).length === 0) {\n              return stock;\n            }\n            \n            return {\n              symbol: data['01. symbol'] || stock.symbol,\n              price: parseFloat(data['05. price']) || stock.price,\n              change: parseFloat(data['09. change']) || stock.change,\n              changePercent: parseFloat(data['10. change percent'].replace('%', '')) || stock.changePercent,\n              volume: parseInt(data['06. volume']) || stock.volume,\n              lastUpdated: data['07. latest trading day'] || new Date().toISOString().split('T')[0],\n            };\n          } catch (error) {\n            console.error(`Error al actualizar ${stock.symbol}:`, error);\n            return stock;\n          }\n        })\n      );\n      \n      setStocks(updatedStocks);\n      showSuccess('Datos actualizados correctamente');\n    } catch (error) {\n      console.error('Error al actualizar datos:', error);\n      showError(`Error al actualizar datos: ${error.message}`);\n    } finally {\n      setRefreshing(false);\n    }\n  };\n  \n  return (\n    <TrackerContainer>\n      <TrackerHeader>\n        <TrackerTitle>Seguimiento de Acciones</TrackerTitle>\n        <AnimatedButton\n          variant=\"outline\"\n          onClick={handleRefresh}\n          disabled={refreshing || stocks.length === 0}\n        >\n          <FiRefreshCw /> Actualizar\n        </AnimatedButton>\n      </TrackerHeader>\n      \n      <AddStockForm onSubmit={handleAddStock}>\n        <StockInput\n          type=\"text\"\n          placeholder=\"Símbolo (ej. AAPL, MSFT)\"\n          value={newSymbol}\n          onChange={(e) => setNewSymbol(e.target.value.toUpperCase())}\n          disabled={loading}\n        />\n        <AnimatedButton\n          type=\"submit\"\n          disabled={loading || !newSymbol.trim()}\n        >\n          <FiPlus /> Agregar\n        </AnimatedButton>\n      </AddStockForm>\n      \n      {loading ? (\n        <LoadingSpinner text=\"Cargando datos...\" />\n      ) : (\n        <>\n          {stocks.length > 0 ? (\n            <StockGrid>\n              {stocks.map((stock) => (\n                <StockCard key={stock.symbol}>\n                  <DeleteButton onClick={() => handleDeleteStock(stock.symbol)}>\n                    <FiTrash2 />\n                  </DeleteButton>\n                  <StockSymbol>{stock.symbol}</StockSymbol>\n                  <StockPrice>{formatPrice(stock.price)}</StockPrice>\n                  <StockChange positive={stock.change >= 0}>\n                    {stock.change >= 0 ? <FiArrowUp /> : <FiArrowDown />}\n                    {formatPrice(Math.abs(stock.change))} ({formatPercent(stock.changePercent)})\n                  </StockChange>\n                  <StockInfo>\n                    <StockInfoItem>\n                      <span>Volumen:</span>\n                      <span>{stock.volume.toLocaleString()}</span>\n                    </StockInfoItem>\n                    <StockInfoItem>\n                      <span>Última actualización:</span>\n                      <span>{stock.lastUpdated}</span>\n                    </StockInfoItem>\n                  </StockInfo>\n                </StockCard>\n              ))}\n            </StockGrid>\n          ) : (\n            <EmptyState>\n              <p>No hay acciones en seguimiento</p>\n              <p>Agrega símbolos para comenzar a seguir sus cotizaciones</p>\n            </EmptyState>\n          )}\n        </>\n      )}\n    </TrackerContainer>\n  );\n};\n\nexport default StockTracker;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiExternalLink, FiRefreshCw } from 'react-icons/fi';\nimport { getFinancialNews } from '../../services/externalServices';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport AnimatedButton from '../common/AnimatedButton';\nimport { showError } from '../common/Notification';\n\n// Estilos\nconst NewsContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst NewsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n  }\n`;\n\nconst NewsTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst NewsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 24px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst NewsCard = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  overflow: hidden;\n  transition: transform 0.3s, box-shadow 0.3s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst NewsImage = styled.div`\n  height: 180px;\n  background-image: url(${props => props.src || 'https://via.placeholder.com/300x180?text=No+Image'});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nconst NewsContent = styled.div`\n  padding: 16px;\n`;\n\nconst NewsHeadline = styled.h3`\n  margin: 0 0 8px 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst NewsSource = styled.div`\n  font-size: 0.8rem;\n  color: var(--text-medium);\n  margin-bottom: 8px;\n`;\n\nconst NewsDescription = styled.p`\n  margin: 0 0 16px 0;\n  font-size: 0.9rem;\n  color: var(--text-medium);\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst NewsLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--primary-color);\n  text-decoration: none;\n  font-size: 0.9rem;\n  font-weight: 500;\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst NewsDate = styled.div`\n  font-size: 0.8rem;\n  color: var(--text-light);\n  margin-top: 8px;\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 16px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst SearchInput = styled.input`\n  padding: 8px 12px;\n  border-radius: var(--border-radius);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-size: 0.9rem;\n  flex: 1;\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);\n  }\n`;\n\n/**\n * Componente de noticias financieras\n * @returns {JSX.Element} - Componente de noticias financieras\n */\nconst FinancialNews = () => {\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState('finanzas argentina');\n  const [searchQuery, setSearchQuery] = useState('finanzas argentina');\n  \n  // Cargar noticias\n  useEffect(() => {\n    const loadNews = async () => {\n      try {\n        setLoading(true);\n        const articles = await getFinancialNews(query, 6);\n        setNews(articles);\n      } catch (error) {\n        console.error('Error al cargar noticias:', error);\n        showError('Error al cargar noticias financieras');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadNews();\n  }, [query]);\n  \n  // Formatear fecha\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('es-AR', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n  \n  // Manejar búsqueda\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setQuery(searchQuery);\n  };\n  \n  return (\n    <NewsContainer>\n      <NewsHeader>\n        <NewsTitle>Noticias Financieras</NewsTitle>\n        <AnimatedButton\n          variant=\"outline\"\n          onClick={() => setQuery(searchQuery)}\n          disabled={loading}\n        >\n          <FiRefreshCw /> Actualizar\n        </AnimatedButton>\n      </NewsHeader>\n      \n      <SearchContainer>\n        <SearchInput\n          type=\"text\"\n          placeholder=\"Buscar noticias...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleSearch(e)}\n        />\n        <AnimatedButton\n          onClick={handleSearch}\n          disabled={loading}\n        >\n          Buscar\n        </AnimatedButton>\n      </SearchContainer>\n      \n      {loading ? (\n        <LoadingSpinner text=\"Cargando noticias...\" />\n      ) : (\n        <NewsGrid>\n          {news.length > 0 ? (\n            news.map((article, index) => (\n              <NewsCard key={index}>\n                <NewsImage src={article.urlToImage} />\n                <NewsContent>\n                  <NewsHeadline>{article.title}</NewsHeadline>\n                  <NewsSource>{article.source.name}</NewsSource>\n                  <NewsDescription>{article.description}</NewsDescription>\n                  <NewsLink href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    Leer más <FiExternalLink />\n                  </NewsLink>\n                  <NewsDate>{formatDate(article.publishedAt)}</NewsDate>\n                </NewsContent>\n              </NewsCard>\n            ))\n          ) : (\n            <div>No se encontraron noticias para \"{query}\"</div>\n          )}\n        </NewsGrid>\n      )}\n    </NewsContainer>\n  );\n};\n\nexport default FinancialNews;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiUser, FiMessageSquare } from 'react-icons/fi';\n\nconst MessageContainer = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  flex-direction: ${props => props.isUser ? 'row-reverse' : 'row'};\n`;\n\nconst MessageBubble = styled.div`\n  max-width: 80%;\n  padding: 12px 16px;\n  border-radius: 18px;\n  background-color: ${props => props.isUser ? 'var(--primary-color)' : 'var(--card-bg)'};\n  color: ${props => props.isUser ? 'white' : 'var(--text-dark)'};\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  position: relative;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    ${props => props.isUser \n      ? 'border-width: 8px 0 8px 8px; border-color: transparent transparent transparent var(--primary-color); right: -8px;' \n      : 'border-width: 8px 8px 8px 0; border-color: transparent var(--card-bg) transparent transparent; left: -8px;'\n    }\n    top: 12px;\n  }\n`;\n\nconst MessageContent = styled.div`\n  font-size: 0.95rem;\n  line-height: 1.5;\n  \n  p {\n    margin: 0 0 8px 0;\n    \n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  \n  a {\n    color: ${props => props.isUser ? 'white' : 'var(--primary-color)'};\n    text-decoration: underline;\n    \n    &:hover {\n      text-decoration: none;\n    }\n  }\n  \n  code {\n    background-color: ${props => props.isUser ? 'rgba(255, 255, 255, 0.2)' : 'rgba(0, 0, 0, 0.05)'};\n    padding: 2px 4px;\n    border-radius: 4px;\n    font-family: monospace;\n    font-size: 0.9em;\n  }\n  \n  ul, ol {\n    margin: 8px 0;\n    padding-left: 20px;\n  }\n  \n  strong {\n    font-weight: 600;\n  }\n`;\n\nconst Avatar = styled.div`\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: ${props => props.isUser ? 'var(--primary-light)' : 'var(--secondary-light)'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: ${props => props.isUser ? '0 0 0 12px' : '0 12px 0 0'};\n  color: white;\n  font-size: 1.2rem;\n`;\n\nconst Timestamp = styled.div`\n  font-size: 0.7rem;\n  color: ${props => props.isUser ? 'rgba(255, 255, 255, 0.7)' : 'var(--text-light)'};\n  margin-top: 4px;\n  text-align: ${props => props.isUser ? 'right' : 'left'};\n`;\n\nconst ChatMessage = ({ message, isUser }) => {\n  // Función para formatear la fecha\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n  \n  // Función para renderizar el contenido con formato\n  const renderContent = (content) => {\n    // Aquí podrías implementar un parser de markdown simple\n    // Por ahora, solo dividimos por saltos de línea\n    return content.split('\\\\n').map((line, index) => (\n      <p key={index}>{line}</p>\n    ));\n  };\n  \n  return (\n    <MessageContainer isUser={isUser}>\n      <Avatar isUser={isUser}>\n        {isUser ? <FiUser /> : <FiMessageSquare />}\n      </Avatar>\n      <div>\n        <MessageBubble isUser={isUser}>\n          <MessageContent isUser={isUser}>\n            {renderContent(message.content)}\n          </MessageContent>\n        </MessageBubble>\n        <Timestamp isUser={isUser}>\n          {formatTime(message.timestamp)}\n        </Timestamp>\n      </div>\n    </MessageContainer>\n  );\n};\n\nexport default ChatMessage;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiSend, FiRefreshCw } from 'react-icons/fi';\n\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background-color: var(--bg-light);\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  border-radius: 0 0 var(--border-radius) var(--border-radius);\n`;\n\nconst StyledInput = styled.input`\n  flex: 1;\n  padding: 12px 16px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n  \n  &::placeholder {\n    color: var(--text-light);\n  }\n`;\n\nconst SendButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 12px;\n  cursor: pointer;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(99, 102, 241, 0.2);\n  \n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(99, 102, 241, 0.3);\n  }\n  \n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n    transform: none;\n    box-shadow: none;\n  }\n`;\n\nconst RefreshButton = styled.button`\n  background-color: var(--bg-medium);\n  color: var(--text-medium);\n  border: none;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 8px;\n  cursor: pointer;\n  transition: all var(--transition-speed);\n  \n  &:hover {\n    background-color: var(--bg-dark);\n    color: var(--text-dark);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  \n  svg {\n    transition: transform 0.3s ease;\n  }\n  \n  &:hover svg {\n    transform: rotate(180deg);\n  }\n`;\n\nconst ChatInput = ({ onSendMessage, onRefreshPrices, isRefreshing }) => {\n  const [message, setMessage] = useState('');\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (message.trim()) {\n      onSendMessage(message);\n      setMessage('');\n    }\n  };\n  \n  return (\n    <InputContainer>\n      <form onSubmit={handleSubmit} style={{ display: 'flex', width: '100%' }}>\n        <StyledInput\n          type=\"text\"\n          placeholder=\"Pregunta sobre inversiones o finanzas...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <SendButton type=\"submit\" disabled={!message.trim()}>\n          <FiSend />\n        </SendButton>\n      </form>\n      <RefreshButton \n        onClick={onRefreshPrices} \n        disabled={isRefreshing}\n        title=\"Actualizar precios\"\n      >\n        <FiRefreshCw style={{ animation: isRefreshing ? 'spin 1s linear infinite' : 'none' }} />\n      </RefreshButton>\n    </InputContainer>\n  );\n};\n\nexport default ChatInput;\n","// Servicio para generar consejos financieros y responder preguntas\nconst FinancialAdvice = {\n  // Respuestas predefinidas para preguntas comunes\n  commonQuestions: {\n    'hola': 'Hola, soy tu asistente financiero. ¿En qué puedo ayudarte hoy?',\n    'ayuda': 'Puedo ayudarte con consejos sobre inversiones, finanzas personales, ahorro, y más. Intenta preguntarme algo específico como \"¿Cómo diversificar mi cartera?\" o \"¿Qué es un ETF?\"',\n    'gracias': 'De nada. Estoy aquí para ayudarte con tus consultas financieras.',\n    'adios': 'Hasta luego. Si tienes más preguntas sobre finanzas o inversiones, no dudes en volver a consultarme.',\n    'chau': 'Hasta pronto. Recuerda revisar regularmente tus inversiones y ajustar tu estrategia según sea necesario.'\n  },\n  \n  // Consejos generales sobre inversiones\n  investmentAdvice: [\n    \"Diversifica tu cartera para reducir el riesgo. No pongas todos tus huevos en la misma canasta.\",\n    \"Invierte a largo plazo. El mercado puede ser volátil a corto plazo, pero históricamente tiende a subir a largo plazo.\",\n    \"Considera tu tolerancia al riesgo al elegir inversiones. Las inversiones más arriesgadas pueden ofrecer mayores rendimientos, pero también mayores pérdidas potenciales.\",\n    \"Reinvierte tus dividendos para aprovechar el interés compuesto.\",\n    \"Mantén un fondo de emergencia antes de comenzar a invertir en activos de mayor riesgo.\",\n    \"Investiga bien antes de invertir. Comprende en qué estás invirtiendo y por qué.\",\n    \"Considera los costos de transacción y las comisiones, ya que pueden reducir significativamente tus rendimientos.\",\n    \"Revisa y reequilibra tu cartera periódicamente para mantener tu asignación de activos deseada.\",\n    \"No intentes cronometrar el mercado. Es muy difícil predecir los movimientos a corto plazo.\",\n    \"Considera invertir regularmente (dollar-cost averaging) para reducir el impacto de la volatilidad del mercado.\"\n  ],\n  \n  // Consejos sobre finanzas personales\n  personalFinanceAdvice: [\n    \"Crea y sigue un presupuesto para controlar tus gastos y maximizar tus ahorros.\",\n    \"Establece metas financieras claras y específicas, tanto a corto como a largo plazo.\",\n    \"Reduce y elimina deudas de alto interés lo antes posible.\",\n    \"Ahorra al menos el 20% de tus ingresos para metas a largo plazo como la jubilación.\",\n    \"Mantén un fondo de emergencia que cubra de 3 a 6 meses de gastos.\",\n    \"Automatiza tus ahorros e inversiones para mantener la disciplina financiera.\",\n    \"Revisa regularmente tus gastos para identificar áreas donde puedes reducir.\",\n    \"Considera diversificar tus fuentes de ingresos para aumentar tu estabilidad financiera.\",\n    \"Edúcate continuamente sobre finanzas personales y estrategias de inversión.\",\n    \"Planifica para grandes gastos futuros como educación, vivienda o jubilación.\"\n  ],\n  \n  // Consejos específicos por tipo de inversión\n  specificAdvice: {\n    stocks: [\n      \"Las acciones ofrecen potencial de crecimiento a largo plazo, pero vienen con mayor volatilidad.\",\n      \"Considera invertir en empresas con fundamentos sólidos, buen historial de crecimiento y ventajas competitivas.\",\n      \"Los dividendos pueden proporcionar ingresos regulares además de la apreciación del capital.\",\n      \"Las acciones de valor tienden a ser más estables, mientras que las de crecimiento ofrecen mayor potencial de apreciación pero con más riesgo.\",\n      \"Diversifica entre diferentes sectores e industrias para reducir el riesgo específico de cada empresa.\"\n    ],\n    bonds: [\n      \"Los bonos generalmente ofrecen menor rendimiento pero también menor riesgo que las acciones.\",\n      \"La duración del bono afecta su sensibilidad a los cambios en las tasas de interés.\",\n      \"Los bonos gubernamentales suelen ser más seguros, mientras que los corporativos ofrecen mayores rendimientos con mayor riesgo.\",\n      \"Considera la calificación crediticia del emisor al evaluar el riesgo de un bono.\",\n      \"En entornos de tasas de interés crecientes, los bonos de corto plazo suelen tener mejor desempeño.\"\n    ],\n    crypto: [\n      \"Las criptomonedas son inversiones de alto riesgo y alta volatilidad.\",\n      \"Solo invierte en criptomonedas el dinero que estés dispuesto a perder.\",\n      \"Diversifica entre diferentes criptomonedas para reducir el riesgo.\",\n      \"Mantén tus criptomonedas en billeteras seguras y considera opciones de almacenamiento en frío para mayor seguridad.\",\n      \"Mantente informado sobre desarrollos regulatorios que puedan afectar el mercado de criptomonedas.\"\n    ],\n    etfs: [\n      \"Los ETFs ofrecen diversificación instantánea a un costo relativamente bajo.\",\n      \"Considera los ETFs de índice para una estrategia pasiva de bajo costo.\",\n      \"Revisa la composición y metodología del ETF antes de invertir.\",\n      \"Presta atención al ratio de gastos, ya que afecta directamente tu rendimiento.\",\n      \"Los ETFs temáticos pueden ofrecer exposición a sectores específicos o tendencias emergentes.\"\n    ],\n    funds: [\n      \"Los fondos mutuos ofrecen gestión profesional y diversificación.\",\n      \"Compara el rendimiento del fondo con su benchmark para evaluar su desempeño.\",\n      \"Considera los fondos de índice para una estrategia pasiva de bajo costo.\",\n      \"Presta atención a las comisiones y gastos, ya que pueden reducir significativamente tus rendimientos.\",\n      \"Revisa la filosofía de inversión y el historial del gestor del fondo.\"\n    ]\n  },\n  \n  // Respuestas a preguntas específicas sobre términos financieros\n  financialTerms: {\n    \"qué es un etf\": \"Un ETF (Exchange-Traded Fund) es un fondo que cotiza en bolsa y sigue el rendimiento de un índice, sector, materia prima o activo específico. Los ETFs combinan la diversificación de los fondos mutuos con la flexibilidad de negociación de las acciones.\",\n    \"qué es la diversificación\": \"La diversificación es una estrategia que consiste en distribuir tus inversiones entre diferentes tipos de activos, sectores e instrumentos para reducir el riesgo. La idea es que si una inversión tiene un mal desempeño, otras pueden compensar esas pérdidas.\",\n    \"qué es el interés compuesto\": \"El interés compuesto es el proceso por el cual el interés se suma al capital inicial, generando a su vez más interés sobre el nuevo monto total. Es como 'interés sobre interés' y es una de las fuerzas más poderosas en las finanzas.\",\n    \"qué es la inflación\": \"La inflación es el aumento generalizado y sostenido de los precios de bienes y servicios en una economía durante un período de tiempo. Reduce el poder adquisitivo del dinero, por lo que es importante que tus inversiones superen la tasa de inflación.\",\n    \"qué es un cedear\": \"Un CEDEAR (Certificado de Depósito Argentino) es un certificado que representa acciones de empresas extranjeras y cotiza en la bolsa argentina. Permite a los inversores argentinos acceder a acciones internacionales en pesos argentinos.\",\n    \"qué es el dca\": \"DCA (Dollar-Cost Averaging) o Promediación de Costos es una estrategia de inversión que consiste en invertir cantidades fijas de dinero a intervalos regulares, independientemente del precio del activo. Esto reduce el impacto de la volatilidad y elimina la necesidad de cronometrar el mercado.\",\n    \"qué es un plazo fijo\": \"Un plazo fijo es un instrumento financiero que consiste en depositar dinero en una entidad financiera por un período determinado a cambio de una tasa de interés fija. Al finalizar el plazo, recibes tu capital más los intereses generados.\",\n    \"qué es el riesgo\": \"En finanzas, el riesgo es la posibilidad de que el rendimiento real de una inversión sea diferente al esperado, especialmente la posibilidad de perder parte o la totalidad del capital invertido. Generalmente, a mayor riesgo, mayor rendimiento potencial.\",\n    \"qué es un bono\": \"Un bono es un instrumento de deuda emitido por gobiernos, municipalidades o empresas para financiar proyectos o actividades. Al comprar un bono, estás prestando dinero al emisor a cambio de pagos periódicos de interés y la devolución del principal al vencimiento.\",\n    \"qué es el rendimiento\": \"El rendimiento es la ganancia o pérdida total de una inversión durante un período específico, expresada como porcentaje del costo inicial. Incluye tanto los ingresos (dividendos, intereses) como la apreciación o depreciación del capital.\"\n  },\n  \n  // Función para generar una respuesta basada en la pregunta del usuario\n  generateResponse: (question, investments) => {\n    // Convertir la pregunta a minúsculas para facilitar la comparación\n    const lowerQuestion = question.toLowerCase();\n    \n    // Verificar si es una pregunta común\n    for (const [key, response] of Object.entries(FinancialAdvice.commonQuestions)) {\n      if (lowerQuestion.includes(key)) {\n        return response;\n      }\n    }\n    \n    // Verificar si es una pregunta sobre un término financiero\n    for (const [term, explanation] of Object.entries(FinancialAdvice.financialTerms)) {\n      if (lowerQuestion.includes(term)) {\n        return explanation;\n      }\n    }\n    \n    // Verificar si es una pregunta sobre un tipo específico de inversión\n    if (lowerQuestion.includes('accion') || lowerQuestion.includes('stock')) {\n      return FinancialAdvice.specificAdvice.stocks[Math.floor(Math.random() * FinancialAdvice.specificAdvice.stocks.length)];\n    } else if (lowerQuestion.includes('bono')) {\n      return FinancialAdvice.specificAdvice.bonds[Math.floor(Math.random() * FinancialAdvice.specificAdvice.bonds.length)];\n    } else if (lowerQuestion.includes('cripto') || lowerQuestion.includes('bitcoin') || lowerQuestion.includes('ethereum')) {\n      return FinancialAdvice.specificAdvice.crypto[Math.floor(Math.random() * FinancialAdvice.specificAdvice.crypto.length)];\n    } else if (lowerQuestion.includes('etf')) {\n      return FinancialAdvice.specificAdvice.etfs[Math.floor(Math.random() * FinancialAdvice.specificAdvice.etfs.length)];\n    } else if (lowerQuestion.includes('fondo') || lowerQuestion.includes('mutual')) {\n      return FinancialAdvice.specificAdvice.funds[Math.floor(Math.random() * FinancialAdvice.specificAdvice.funds.length)];\n    }\n    \n    // Si la pregunta incluye \"consejo\" o \"recomendación\", dar un consejo general\n    if (lowerQuestion.includes('consejo') || lowerQuestion.includes('recomend') || lowerQuestion.includes('suger')) {\n      if (lowerQuestion.includes('inver')) {\n        return FinancialAdvice.investmentAdvice[Math.floor(Math.random() * FinancialAdvice.investmentAdvice.length)];\n      } else {\n        return FinancialAdvice.personalFinanceAdvice[Math.floor(Math.random() * FinancialAdvice.personalFinanceAdvice.length)];\n      }\n    }\n    \n    // Si la pregunta es sobre las inversiones actuales del usuario\n    if (lowerQuestion.includes('mi') && (lowerQuestion.includes('inver') || lowerQuestion.includes('cartera'))) {\n      if (investments && investments.length > 0) {\n        // Analizar la cartera del usuario\n        const totalValue = investments.reduce((sum, inv) => sum + (inv.quantity * inv.current_price), 0);\n        const stocksValue = investments.filter(inv => inv.type === 'stock').reduce((sum, inv) => sum + (inv.quantity * inv.current_price), 0);\n        const cryptoValue = investments.filter(inv => inv.type === 'crypto').reduce((sum, inv) => sum + (inv.quantity * inv.current_price), 0);\n        const bondsValue = investments.filter(inv => inv.type === 'bond').reduce((sum, inv) => sum + (inv.quantity * inv.current_price), 0);\n        const etfsValue = investments.filter(inv => inv.type === 'etf').reduce((sum, inv) => sum + (inv.quantity * inv.current_price), 0);\n        \n        const stocksPercentage = totalValue > 0 ? (stocksValue / totalValue * 100).toFixed(1) : 0;\n        const cryptoPercentage = totalValue > 0 ? (cryptoValue / totalValue * 100).toFixed(1) : 0;\n        const bondsPercentage = totalValue > 0 ? (bondsValue / totalValue * 100).toFixed(1) : 0;\n        const etfsPercentage = totalValue > 0 ? (etfsValue / totalValue * 100).toFixed(1) : 0;\n        \n        let advice = `Basado en tu cartera actual, tienes aproximadamente:\\n`;\n        advice += `- ${stocksPercentage}% en acciones\\n`;\n        advice += `- ${cryptoPercentage}% en criptomonedas\\n`;\n        advice += `- ${bondsPercentage}% en bonos\\n`;\n        advice += `- ${etfsPercentage}% en ETFs\\n\\n`;\n        \n        // Dar un consejo basado en la composición de la cartera\n        if (cryptoPercentage > 20) {\n          advice += `Tu exposición a criptomonedas es relativamente alta (${cryptoPercentage}%). Considera si esto se alinea con tu tolerancia al riesgo, ya que las criptomonedas son muy volátiles.`;\n        } else if (stocksPercentage + cryptoPercentage > 80 && bondsPercentage < 10) {\n          advice += `Tu cartera está muy orientada al crecimiento con ${stocksPercentage + cryptoPercentage}% en activos de renta variable. Considera añadir más bonos para equilibrar el riesgo, especialmente si estás cerca de necesitar estos fondos.`;\n        } else if (bondsPercentage > 70) {\n          advice += `Tu cartera es bastante conservadora con ${bondsPercentage}% en bonos. Si tu horizonte de inversión es largo, podrías considerar aumentar tu exposición a acciones para potenciar el crecimiento.`;\n        } else {\n          advice += `Tu cartera parece estar razonablemente diversificada entre diferentes clases de activos. Recuerda revisar y reequilibrar periódicamente para mantener tu asignación de activos deseada.`;\n        }\n        \n        return advice;\n      } else {\n        return \"No veo inversiones en tu cartera actualmente. ¿Te gustaría que te dé algunos consejos para comenzar a invertir?\";\n      }\n    }\n    \n    // Si la pregunta es sobre precios o mercado\n    if (lowerQuestion.includes('precio') || lowerQuestion.includes('mercado') || lowerQuestion.includes('valor')) {\n      return \"Los mercados financieros son impredecibles a corto plazo. En lugar de intentar predecir movimientos de precios, considera enfocarte en los fundamentos de tus inversiones y en tu estrategia a largo plazo. Recuerda que puedes actualizar los precios de tus inversiones haciendo clic en el botón de actualización.\";\n    }\n    \n    // Respuesta por defecto si no se identifica la pregunta\n    return \"Esa es una buena pregunta. Como asistente financiero, puedo ayudarte con consejos sobre inversiones, explicaciones de términos financieros, y análisis básico de tu cartera. ¿Podrías reformular tu pregunta o ser más específico sobre qué información buscas?\";\n  },\n  \n  // Función para generar un consejo aleatorio\n  getRandomAdvice: () => {\n    const allAdvice = [\n      ...FinancialAdvice.investmentAdvice,\n      ...FinancialAdvice.personalFinanceAdvice,\n      ...FinancialAdvice.specificAdvice.stocks,\n      ...FinancialAdvice.specificAdvice.bonds,\n      ...FinancialAdvice.specificAdvice.crypto,\n      ...FinancialAdvice.specificAdvice.etfs,\n      ...FinancialAdvice.specificAdvice.funds\n    ];\n    \n    return allAdvice[Math.floor(Math.random() * allAdvice.length)];\n  }\n};\n\nexport default FinancialAdvice;\n","// import { supabase } from './supabase';\n// Comentado hasta que se implemente la integración con Supabase\n\n// Función para obtener precios actualizados de acciones\nexport const getStockPrice = async (symbol) => {\n  try {\n    // En una implementación real, aquí se haría una llamada a una API de precios de acciones\n    // Por ejemplo: Alpha Vantage, Yahoo Finance, etc.\n    // Por ahora, simularemos una respuesta con un precio aleatorio\n\n    // Simulación de delay de red\n    await new Promise(resolve => setTimeout(resolve, 500));\n\n    // Generamos un precio base según el símbolo (para que sea consistente)\n    const basePrice = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0) % 1000;\n\n    // Añadimos una variación aleatoria de hasta ±5%\n    const variation = (Math.random() * 10 - 5) / 100;\n    const price = basePrice * (1 + variation);\n\n    return {\n      symbol,\n      price: parseFloat(price.toFixed(2)),\n      currency: symbol.includes('BTC') || symbol.includes('ETH') ? 'USD' : 'ARS',\n      timestamp: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('Error fetching stock price:', error);\n    return null;\n  }\n};\n\n// Función para obtener precios actualizados de criptomonedas\nexport const getCryptoPrice = async (symbol) => {\n  try {\n    // En una implementación real, aquí se haría una llamada a una API de precios de criptomonedas\n    // Por ejemplo: CoinGecko, Binance, etc.\n\n    // Simulación de delay de red\n    await new Promise(resolve => setTimeout(resolve, 700));\n\n    // Precios base para criptomonedas comunes\n    const basePrices = {\n      'BTC': 35000,\n      'ETH': 2200,\n      'SOL': 120,\n      'ADA': 0.5,\n      'DOT': 7,\n      'MATIC': 1.2,\n      'XRP': 0.6,\n      'DOGE': 0.08,\n      'SHIB': 0.00001,\n      'AVAX': 30\n    };\n\n    // Si no tenemos un precio base para este símbolo, generamos uno aleatorio\n    const basePrice = basePrices[symbol] ||\n      (symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0) % 100);\n\n    // Añadimos una variación aleatoria de hasta ±8% (las criptos son más volátiles)\n    const variation = (Math.random() * 16 - 8) / 100;\n    const price = basePrice * (1 + variation);\n\n    return {\n      symbol,\n      price: parseFloat(price.toFixed(symbol === 'SHIB' ? 8 : 2)),\n      currency: 'USD',\n      timestamp: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('Error fetching crypto price:', error);\n    return null;\n  }\n};\n\n// Función para obtener precios actualizados de bonos\nexport const getBondPrice = async (symbol) => {\n  try {\n    // Simulación de delay de red\n    await new Promise(resolve => setTimeout(resolve, 600));\n\n    // Para bonos, el precio suele estar entre 0 y 1 (como porcentaje del valor nominal)\n    const basePrice = (symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0) % 30) / 100 + 0.7;\n\n    // Añadimos una variación aleatoria de hasta ±2%\n    const variation = (Math.random() * 4 - 2) / 100;\n    const price = basePrice * (1 + variation);\n\n    return {\n      symbol,\n      price: parseFloat(price.toFixed(3)),\n      currency: symbol.includes('US') ? 'USD' : 'ARS',\n      timestamp: new Date().toISOString()\n    };\n  } catch (error) {\n    console.error('Error fetching bond price:', error);\n    return null;\n  }\n};\n\n// Función para actualizar los precios de todas las inversiones\nexport const updateAllPrices = async (investments) => {\n  try {\n    const updatedInvestments = await Promise.all(\n      investments.map(async (investment) => {\n        let priceData;\n\n        switch (investment.type) {\n          case 'crypto':\n            priceData = await getCryptoPrice(investment.symbol);\n            break;\n          case 'bond':\n            priceData = await getBondPrice(investment.symbol);\n            break;\n          case 'stock':\n          case 'etf':\n          default:\n            priceData = await getStockPrice(investment.symbol);\n            break;\n        }\n\n        if (priceData) {\n          return {\n            ...investment,\n            current_price: priceData.price\n          };\n        }\n\n        return investment;\n      })\n    );\n\n    return updatedInvestments;\n  } catch (error) {\n    console.error('Error updating all prices:', error);\n    return investments;\n  }\n};\n\n// Función para guardar los precios actualizados en la base de datos\nexport const savePriceUpdates = async (investments) => {\n  try {\n    // En una implementación real, aquí se guardarían los precios en Supabase\n    // Por ahora, solo simularemos el guardado\n    console.log('Saving updated prices to database:', investments);\n\n    // Aquí iría el código para guardar en Supabase\n    // Por ejemplo:\n    /*\n    const { data, error } = await supabase\n      .from('investments')\n      .upsert(\n        investments.map(inv => ({\n          id: inv.id,\n          current_price: inv.current_price,\n          updated_at: new Date()\n        })),\n        { onConflict: 'id' }\n      );\n\n    if (error) throw error;\n    return data;\n    */\n\n    return investments;\n  } catch (error) {\n    console.error('Error saving price updates:', error);\n    return investments;\n  }\n};\n\n// Función para obtener el historial de precios de una inversión\nexport const getPriceHistory = async (symbol, type, days = 30) => {\n  try {\n    // En una implementación real, aquí se obtendría el historial de precios de una API\n    // Por ahora, generaremos datos aleatorios\n\n    const today = new Date();\n    const priceHistory = [];\n\n    // Determinamos un precio base según el tipo y símbolo\n    let basePrice;\n    if (type === 'crypto') {\n      const cryptoPrices = {\n        'BTC': 35000,\n        'ETH': 2200,\n        'SOL': 120,\n        'ADA': 0.5,\n        'DOT': 7,\n        'MATIC': 1.2,\n        'XRP': 0.6,\n        'DOGE': 0.08,\n        'SHIB': 0.00001,\n        'AVAX': 30\n      };\n      basePrice = cryptoPrices[symbol] || 100;\n    } else if (type === 'bond') {\n      basePrice = 0.85;\n    } else {\n      // Acciones y ETFs\n      basePrice = symbol.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0) % 1000;\n      if (basePrice < 100) basePrice += 100; // Aseguramos un precio mínimo\n    }\n\n    // Generamos datos históricos con tendencia\n    let currentPrice = basePrice;\n    const trend = Math.random() > 0.5 ? 1 : -1; // Tendencia alcista o bajista\n    const volatility = type === 'crypto' ? 0.03 : 0.01; // Las criptos son más volátiles\n\n    for (let i = days; i >= 0; i--) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n\n      // Añadimos una variación aleatoria con tendencia\n      const dailyChange = (Math.random() * volatility * 2 - volatility) + (trend * volatility / 2);\n      currentPrice = currentPrice * (1 + dailyChange);\n\n      priceHistory.push({\n        date: date.toISOString().split('T')[0],\n        price: parseFloat(currentPrice.toFixed(2))\n      });\n    }\n\n    return priceHistory;\n  } catch (error) {\n    console.error('Error fetching price history:', error);\n    return [];\n  }\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { FiMessageSquare, FiChevronDown, FiChevronUp } from 'react-icons/fi';\nimport ChatMessage from './ChatMessage';\nimport ChatInput from './ChatInput';\nimport FinancialAdvice from './FinancialAdvice';\nimport { updateAllPrices, savePriceUpdates } from '../../services/priceService';\n\nconst ChatBotContainer = styled.div`\n  position: fixed;\n  bottom: ${props => props.isOpen ? '0' : '0'};\n  right: 20px;\n  width: 360px;\n  max-width: calc(100vw - 40px);\n  height: ${props => props.isOpen ? '500px' : '60px'};\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius) var(--border-radius) 0 0;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    right: 10px;\n    width: calc(100vw - 20px);\n    height: ${props => props.isOpen ? '400px' : '60px'};\n  }\n`;\n\nconst ChatHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 16px;\n  background-color: var(--primary-color);\n  color: white;\n  cursor: pointer;\n`;\n\nconst HeaderTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 600;\n\n  svg {\n    font-size: 1.2rem;\n  }\n`;\n\nconst HeaderActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\n// Botón para acciones en el encabezado (no utilizado actualmente, pero disponible para futuras funcionalidades)\n// const HeaderButton = styled.button`\n//   background: none;\n//   border: none;\n//   color: white;\n//   font-size: 1.2rem;\n//   cursor: pointer;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   padding: 4px;\n//   border-radius: 50%;\n//   transition: all var(--transition-speed);\n//\n//   &:hover {\n//     background-color: rgba(255, 255, 255, 0.2);\n//   }\n// `;\n\nconst ChatBody = styled.div`\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst WelcomeMessage = styled.div`\n  text-align: center;\n  margin: 20px 0;\n  color: var(--text-medium);\n  font-size: 0.9rem;\n\n  h3 {\n    margin-bottom: 8px;\n    color: var(--text-dark);\n  }\n\n  p {\n    margin-bottom: 16px;\n  }\n`;\n\nconst SuggestedQuestions = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 16px;\n`;\n\nconst QuestionButton = styled.button`\n  background-color: var(--bg-medium);\n  border: none;\n  padding: 8px 12px;\n  border-radius: var(--border-radius);\n  text-align: left;\n  font-size: 0.9rem;\n  color: var(--text-dark);\n  cursor: pointer;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: var(--bg-dark);\n  }\n`;\n\nconst ChatBot = ({ investments }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Scroll al final de los mensajes cuando se añade uno nuevo\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  // Mensaje de bienvenida al abrir el chat por primera vez\n  useEffect(() => {\n    if (isOpen && messages.length === 0) {\n      const welcomeMessage = {\n        id: Date.now(),\n        content: \"Hola, soy tu asistente financiero. Puedo ayudarte con consejos sobre inversiones, finanzas personales y responder tus preguntas sobre términos financieros. ¿En qué puedo ayudarte hoy?\",\n        timestamp: new Date().toISOString(),\n        isUser: false\n      };\n\n      setMessages([welcomeMessage]);\n    }\n  }, [isOpen, messages.length]);\n\n  // Función para enviar un mensaje\n  const handleSendMessage = (content) => {\n    // Añadir el mensaje del usuario\n    const userMessage = {\n      id: Date.now(),\n      content,\n      timestamp: new Date().toISOString(),\n      isUser: true\n    };\n\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n\n    // Simular un pequeño delay antes de la respuesta del bot\n    setTimeout(() => {\n      // Generar respuesta del bot\n      const botResponse = {\n        id: Date.now() + 1,\n        content: FinancialAdvice.generateResponse(content, investments),\n        timestamp: new Date().toISOString(),\n        isUser: false\n      };\n\n      setMessages(prevMessages => [...prevMessages, botResponse]);\n    }, 500);\n  };\n\n  // Función para actualizar los precios de las inversiones\n  const handleRefreshPrices = async () => {\n    if (!investments || investments.length === 0 || isRefreshing) {\n      return;\n    }\n\n    setIsRefreshing(true);\n\n    try {\n      // Añadir mensaje del sistema\n      const systemMessage = {\n        id: Date.now(),\n        content: \"Actualizando precios de tus inversiones...\",\n        timestamp: new Date().toISOString(),\n        isUser: false\n      };\n\n      setMessages(prevMessages => [...prevMessages, systemMessage]);\n\n      // Actualizar precios\n      const updatedInvestments = await updateAllPrices(investments);\n\n      // Guardar precios actualizados\n      await savePriceUpdates(updatedInvestments);\n\n      // Calcular cambios\n      const changes = updatedInvestments.map(inv => {\n        const originalInv = investments.find(i => i.id === inv.id);\n        if (!originalInv) return null;\n\n        const priceDiff = inv.current_price - originalInv.current_price;\n        const percentChange = (priceDiff / originalInv.current_price) * 100;\n\n        return {\n          name: inv.name,\n          symbol: inv.symbol,\n          oldPrice: originalInv.current_price,\n          newPrice: inv.current_price,\n          priceDiff,\n          percentChange,\n          currency: inv.currency || 'ARS'\n        };\n      }).filter(Boolean);\n\n      // Generar mensaje de resumen\n      let summaryContent = \"Precios actualizados:\\\\n\\\\n\";\n\n      if (changes.length === 0) {\n        summaryContent += \"No se encontraron cambios en los precios.\";\n      } else {\n        changes.forEach(change => {\n          const direction = change.priceDiff >= 0 ? '↑' : '↓';\n          const formattedPrice = new Intl.NumberFormat('es-AR', {\n            style: 'currency',\n            currency: change.currency\n          }).format(change.newPrice);\n\n          const formattedPercent = new Intl.NumberFormat('es-AR', {\n            style: 'percent',\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          }).format(Math.abs(change.percentChange) / 100);\n\n          summaryContent += `${change.name} (${change.symbol}): ${formattedPrice} ${direction} ${formattedPercent}\\\\n`;\n        });\n      }\n\n      // Añadir mensaje de resumen\n      const summaryMessage = {\n        id: Date.now() + 1,\n        content: summaryContent,\n        timestamp: new Date().toISOString(),\n        isUser: false\n      };\n\n      setMessages(prevMessages => [...prevMessages, summaryMessage]);\n\n    } catch (error) {\n      console.error('Error refreshing prices:', error);\n\n      // Añadir mensaje de error\n      const errorMessage = {\n        id: Date.now() + 1,\n        content: \"Lo siento, hubo un error al actualizar los precios. Por favor, intenta de nuevo más tarde.\",\n        timestamp: new Date().toISOString(),\n        isUser: false\n      };\n\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  // Preguntas sugeridas\n  const suggestedQuestions = [\n    \"¿Qué es un ETF?\",\n    \"¿Cómo diversificar mi cartera?\",\n    \"¿Qué opinas de mis inversiones actuales?\",\n    \"Dame un consejo sobre inversiones\",\n    \"¿Qué es el interés compuesto?\"\n  ];\n\n  return (\n    <ChatBotContainer isOpen={isOpen}>\n      <ChatHeader onClick={() => setIsOpen(!isOpen)}>\n        <HeaderTitle>\n          <FiMessageSquare />\n          Asistente Financiero\n        </HeaderTitle>\n        <HeaderActions>\n          {isOpen ? <FiChevronDown /> : <FiChevronUp />}\n        </HeaderActions>\n      </ChatHeader>\n\n      {isOpen && (\n        <>\n          <ChatBody>\n            {messages.map(message => (\n              <ChatMessage\n                key={message.id}\n                message={message}\n                isUser={message.isUser}\n              />\n            ))}\n\n            {messages.length === 0 && (\n              <WelcomeMessage>\n                <h3>Bienvenido al Asistente Financiero</h3>\n                <p>Puedo ayudarte con consejos sobre inversiones, finanzas personales y responder tus preguntas sobre términos financieros.</p>\n\n                <SuggestedQuestions>\n                  {suggestedQuestions.map((question, index) => (\n                    <QuestionButton\n                      key={index}\n                      onClick={() => handleSendMessage(question)}\n                    >\n                      {question}\n                    </QuestionButton>\n                  ))}\n                </SuggestedQuestions>\n              </WelcomeMessage>\n            )}\n\n            <div ref={messagesEndRef} />\n          </ChatBody>\n\n          <ChatInput\n            onSendMessage={handleSendMessage}\n            onRefreshPrices={handleRefreshPrices}\n            isRefreshing={isRefreshing}\n          />\n        </>\n      )}\n    </ChatBotContainer>\n  );\n};\n\nexport default ChatBot;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus } from 'react-icons/fi';\nimport InvestmentSummary from '../components/Investments/InvestmentSummary';\nimport InvestmentList from '../components/Investments/InvestmentList';\nimport InvestmentForm from '../components/Investments/InvestmentForm';\nimport InvestmentFilters from '../components/Investments/InvestmentFilters';\nimport StockTracker from '../components/Investments/StockTracker';\nimport FinancialNews from '../components/Investments/FinancialNews';\nimport ChatBot from '../components/ChatBot/ChatBot';\nimport AnimatedButton from '../components/common/AnimatedButton';\nimport { getInvestments, saveInvestments, addInvestment, updateInvestment, deleteInvestment } from '../services/simpleStorage';\n\nconst InvestmentsContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst InvestmentsHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst InvestmentsSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst InvestmentsHeaderActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst AddInvestmentButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst Investments = () => {\n  const [investments, setInvestments] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingInvestment, setEditingInvestment] = useState(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    type: 'all',\n    currency: 'all',\n    performance: 'all',\n    sort: 'name_asc'\n  });\n  const [filteredInvestments, setFilteredInvestments] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar inversiones desde el almacenamiento local\n  useEffect(() => {\n    const loadInvestments = () => {\n      try {\n        setLoading(true);\n        // Obtener inversiones del almacenamiento local\n        const savedInvestments = getInvestments();\n        console.log('Inversiones cargadas desde el almacenamiento local:', savedInvestments);\n        setInvestments(savedInvestments || []);\n      } catch (error) {\n        console.error('Error al cargar inversiones:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadInvestments();\n  }, []);\n\n  // Aplicar filtros y ordenamiento cuando cambian los filtros o las inversiones\n  useEffect(() => {\n    let result = [...investments];\n\n    // Filtrar por búsqueda\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      result = result.filter(investment =>\n        investment.name.toLowerCase().includes(searchTerm) ||\n        investment.symbol.toLowerCase().includes(searchTerm)\n      );\n    }\n\n    // Filtrar por tipo\n    if (filters.type !== 'all') {\n      result = result.filter(investment => investment.type === filters.type);\n    }\n\n    // Filtrar por moneda\n    if (filters.currency !== 'all') {\n      result = result.filter(investment =>\n        (investment.currency || 'ARS') === filters.currency\n      );\n    }\n\n    // Filtrar por rendimiento\n    if (filters.performance !== 'all') {\n      result = result.filter(investment => {\n        const profitLoss = investment.current_price - investment.purchase_price;\n        return filters.performance === 'positive' ? profitLoss >= 0 : profitLoss < 0;\n      });\n    }\n\n    // Ordenar\n    result.sort((a, b) => {\n      switch (filters.sort) {\n        case 'name_desc':\n          return b.name.localeCompare(a.name);\n        case 'value_desc':\n          return (b.current_price * b.quantity) - (a.current_price * a.quantity);\n        case 'value_asc':\n          return (a.current_price * a.quantity) - (b.current_price * b.quantity);\n        case 'performance_desc': {\n          const perfA = ((a.current_price - a.purchase_price) / a.purchase_price) * 100;\n          const perfB = ((b.current_price - b.purchase_price) / b.purchase_price) * 100;\n          return perfB - perfA;\n        }\n        case 'performance_asc': {\n          const perfA = ((a.current_price - a.purchase_price) / a.purchase_price) * 100;\n          const perfB = ((b.current_price - b.purchase_price) / b.purchase_price) * 100;\n          return perfA - perfB;\n        }\n        case 'date_desc':\n          return new Date(b.purchase_date) - new Date(a.purchase_date);\n        case 'date_asc':\n          return new Date(a.purchase_date) - new Date(b.purchase_date);\n        case 'name_asc':\n        default:\n          return a.name.localeCompare(b.name);\n      }\n    });\n\n    setFilteredInvestments(result);\n  }, [investments, filters]);\n\n  const handleAddInvestment = (newInvestment) => {\n    try {\n      // Si estamos editando, actualizar la inversión existente\n      if (editingInvestment) {\n        // Actualizar la inversión en el almacenamiento local\n        const updatedInvestment = updateInvestment(newInvestment.id, newInvestment);\n\n        if (updatedInvestment) {\n          console.log('Inversión actualizada correctamente:', updatedInvestment);\n          // Actualizar el estado\n          setInvestments(prev => prev.map(investment =>\n            investment.id === newInvestment.id ? newInvestment : investment\n          ));\n          setEditingInvestment(null);\n        } else {\n          console.error('No se pudo actualizar la inversión');\n          alert('No se pudo actualizar la inversión. Por favor, intenta de nuevo.');\n        }\n      } else {\n        // Si es una nueva inversión, agregarla a la lista\n        // Generar un ID si no tiene\n        const investmentWithId = {\n          ...newInvestment,\n          id: newInvestment.id || `inv_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n        };\n\n        // Agregar la inversión al almacenamiento local\n        const savedInvestment = addInvestment(investmentWithId);\n\n        if (savedInvestment) {\n          console.log('Inversión agregada correctamente:', savedInvestment);\n          // Actualizar el estado\n          setInvestments(prev => [...prev, savedInvestment]);\n        } else {\n          console.error('No se pudo agregar la inversión');\n          alert('No se pudo agregar la inversión. Por favor, intenta de nuevo.');\n        }\n      }\n\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error al guardar la inversión:', error);\n      alert('Error al guardar la inversión. Por favor, intenta de nuevo.');\n    }\n  };\n\n  const handleEditInvestment = (investment) => {\n    setEditingInvestment(investment);\n    setShowForm(true);\n  };\n\n  const handleDeleteInvestment = (investmentId) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta inversión?')) {\n      try {\n        // Eliminar la inversión del almacenamiento local\n        const success = deleteInvestment(investmentId);\n\n        if (success) {\n          console.log('Inversión eliminada correctamente');\n          // Actualizar el estado\n          setInvestments(prev => prev.filter(investment => investment.id !== investmentId));\n        } else {\n          console.error('No se pudo eliminar la inversión');\n          alert('No se pudo eliminar la inversión. Por favor, intenta de nuevo.');\n        }\n      } catch (error) {\n        console.error('Error al eliminar la inversión:', error);\n        alert('Error al eliminar la inversión. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingInvestment(null);\n  };\n\n  return (\n    <InvestmentsContainer>\n      <InvestmentsHeader>\n        <h1>Inversiones</h1>\n        <p>Gestiona tu cartera de inversiones</p>\n      </InvestmentsHeader>\n\n      {/* Resumen de inversiones */}\n      <InvestmentSummary\n        investments={investments}\n        exchangeRate={1.1} // Tasa de cambio EUR a USD\n      />\n\n      {/* Sección de inversiones */}\n      <InvestmentsSection>\n        <InvestmentsHeaderActions>\n          <SectionTitle>Mi Cartera</SectionTitle>\n          <AnimatedButton\n            variant={showForm ? \"outline\" : \"primary\"}\n            onClick={() => {\n              setEditingInvestment(null);\n              setShowForm(!showForm);\n            }}\n          >\n            <FiPlus />\n            {showForm ? 'Cancelar' : 'Nueva Inversión'}\n          </AnimatedButton>\n        </InvestmentsHeaderActions>\n\n        {/* Formulario para agregar/editar inversiones */}\n        {showForm && (\n          <InvestmentForm\n            investment={editingInvestment}\n            onSubmit={handleAddInvestment}\n            onCancel={handleCancelForm}\n          />\n        )}\n\n        {/* Filtros */}\n        <InvestmentFilters filters={filters} onFilterChange={setFilters} />\n\n        {/* Lista de inversiones */}\n        <InvestmentList\n          investments={filteredInvestments}\n          onEditInvestment={handleEditInvestment}\n          onDeleteInvestment={handleDeleteInvestment}\n        />\n      </InvestmentsSection>\n\n      {/* Seguimiento de acciones */}\n      <StockTracker />\n\n      {/* Noticias financieras */}\n      <FinancialNews />\n\n      {/* Chatbot de consejos financieros */}\n      <ChatBot investments={investments} />\n    </InvestmentsContainer>\n  );\n};\n\nexport default Investments;\n","/**\n * Servicio de almacenamiento local simple\n * Este servicio proporciona funciones básicas para guardar y recuperar datos\n * del localStorage de manera directa y sencilla\n */\n\n// Prefijo para las claves de almacenamiento\nconst STORAGE_PREFIX = 'mi_app_personal_simple_';\n\n/**\n * Guardar datos en localStorage\n * @param {string} key - Clave\n * @param {*} data - Datos a guardar\n */\nexport const saveData = (key, data) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.setItem(fullKey, JSON.stringify(data));\n    console.log(`Datos guardados en localStorage con clave ${key}:`, data);\n    return true;\n  } catch (error) {\n    console.error(`Error al guardar datos en localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n/**\n * Obtener datos de localStorage\n * @param {string} key - Clave\n * @param {*} defaultValue - Valor por defecto\n * @returns {*} - Datos guardados o valor por defecto\n */\nexport const getData = (key, defaultValue = null) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    const storedData = localStorage.getItem(fullKey);\n\n    if (!storedData) {\n      return defaultValue;\n    }\n\n    const parsedData = JSON.parse(storedData);\n    console.log(`Datos recuperados de localStorage con clave ${key}:`, parsedData);\n    return parsedData;\n  } catch (error) {\n    console.error(`Error al obtener datos de localStorage con clave ${key}:`, error);\n    return defaultValue;\n  }\n};\n\n/**\n * Eliminar datos de localStorage\n * @param {string} key - Clave\n */\nexport const removeData = (key) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.removeItem(fullKey);\n    console.log(`Datos eliminados de localStorage con clave ${key}`);\n    return true;\n  } catch (error) {\n    console.error(`Error al eliminar datos de localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n// Función genérica para generar un ID único\nconst generateId = () => `local_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// ==================== TRANSACCIONES ====================\n\n/**\n * Guardar transacciones en localStorage\n * @param {Array} transactions - Transacciones a guardar\n */\nexport const saveTransactions = (transactions) => {\n  return saveData('transactions', transactions);\n};\n\n/**\n * Obtener transacciones de localStorage\n * @returns {Array} - Transacciones guardadas o array vacío\n */\nexport const getTransactions = () => {\n  return getData('transactions', []);\n};\n\n/**\n * Agregar una transacción\n * @param {Object} transaction - Transacción a agregar\n */\nexport const addTransaction = (transaction) => {\n  try {\n    // Generar ID si no tiene\n    const transactionWithId = {\n      ...transaction,\n      id: transaction.id || generateId()\n    };\n\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Agregar la nueva transacción al principio\n    const updatedTransactions = [transactionWithId, ...currentTransactions];\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return transactionWithId;\n  } catch (error) {\n    console.error('Error al agregar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una transacción\n * @param {string} id - ID de la transacción\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTransaction = (id, updates) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Buscar la transacción\n    const index = currentTransactions.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la transacción\n    const updatedTransactions = [...currentTransactions];\n    updatedTransactions[index] = {\n      ...updatedTransactions[index],\n      ...updates\n    };\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return updatedTransactions[index];\n  } catch (error) {\n    console.error('Error al actualizar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una transacción\n * @param {string} id - ID de la transacción\n */\nexport const deleteTransaction = (id) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Filtrar la transacción a eliminar\n    const updatedTransactions = currentTransactions.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna transacción, retornar false\n    if (updatedTransactions.length === currentTransactions.length) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar transacción:', error);\n    return false;\n  }\n};\n\n// ==================== TAREAS ====================\n\n/**\n * Guardar tareas en localStorage\n * @param {Array} tasks - Tareas a guardar\n */\nexport const saveTasks = (tasks) => {\n  return saveData('tasks', tasks);\n};\n\n/**\n * Obtener tareas de localStorage\n * @returns {Array} - Tareas guardadas o array vacío\n */\nexport const getTasks = () => {\n  return getData('tasks', []);\n};\n\n/**\n * Agregar una tarea\n * @param {Object} task - Tarea a agregar\n */\nexport const addTask = (task) => {\n  try {\n    // Generar ID si no tiene\n    const taskWithId = {\n      ...task,\n      id: task.id || generateId(),\n      created_at: task.created_at || new Date().toISOString().split('T')[0]\n    };\n\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Agregar la nueva tarea\n    const updatedTasks = [...currentTasks, taskWithId];\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return taskWithId;\n  } catch (error) {\n    console.error('Error al agregar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una tarea\n * @param {string} id - ID de la tarea\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTask = (id, updates) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la tarea\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      ...updates\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al actualizar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una tarea\n * @param {string} id - ID de la tarea\n */\nexport const deleteTask = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Filtrar la tarea a eliminar\n    const updatedTasks = currentTasks.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna tarea, retornar false\n    if (updatedTasks.length === currentTasks.length) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar tarea:', error);\n    return false;\n  }\n};\n\n/**\n * Cambiar el estado de completado de una tarea\n * @param {string} id - ID de la tarea\n * @param {boolean} completed - Estado de completado\n */\nexport const toggleTaskComplete = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el estado de completado\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      completed: !updatedTasks[index].completed\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al cambiar estado de tarea:', error);\n    return null;\n  }\n};\n\n// ==================== INVERSIONES ====================\n\n/**\n * Guardar inversiones en localStorage\n * @param {Array} investments - Inversiones a guardar\n */\nexport const saveInvestments = (investments) => {\n  return saveData('investments', investments);\n};\n\n/**\n * Obtener inversiones de localStorage\n * @returns {Array} - Inversiones guardadas o array vacío\n */\nexport const getInvestments = () => {\n  return getData('investments', []);\n};\n\n/**\n * Agregar una inversión\n * @param {Object} investment - Inversión a agregar\n */\nexport const addInvestment = (investment) => {\n  try {\n    // Generar ID si no tiene\n    const investmentWithId = {\n      ...investment,\n      id: investment.id || generateId()\n    };\n\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Agregar la nueva inversión\n    const updatedInvestments = [...currentInvestments, investmentWithId];\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return investmentWithId;\n  } catch (error) {\n    console.error('Error al agregar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una inversión\n * @param {string} id - ID de la inversión\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateInvestment = (id, updates) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Buscar la inversión\n    const index = currentInvestments.findIndex(i => i.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la inversión\n    const updatedInvestments = [...currentInvestments];\n    updatedInvestments[index] = {\n      ...updatedInvestments[index],\n      ...updates\n    };\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return updatedInvestments[index];\n  } catch (error) {\n    console.error('Error al actualizar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una inversión\n * @param {string} id - ID de la inversión\n */\nexport const deleteInvestment = (id) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Filtrar la inversión a eliminar\n    const updatedInvestments = currentInvestments.filter(i => i.id !== id);\n\n    // Si no se eliminó ninguna inversión, retornar false\n    if (updatedInvestments.length === currentInvestments.length) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar inversión:', error);\n    return false;\n  }\n};\n\n// ==================== METAS FINANCIERAS ====================\n\n/**\n * Guardar metas financieras en localStorage\n * @param {Array} goals - Metas financieras a guardar\n */\nexport const saveFinancialGoals = (goals) => {\n  return saveData('financial_goals', goals);\n};\n\n/**\n * Obtener metas financieras de localStorage\n * @returns {Array} - Metas financieras guardadas o array vacío\n */\nexport const getFinancialGoals = () => {\n  return getData('financial_goals', []);\n};\n\n/**\n * Agregar una meta financiera\n * @param {Object} goal - Meta financiera a agregar\n */\nexport const addFinancialGoal = (goal) => {\n  try {\n    // Generar ID si no tiene\n    const goalWithId = {\n      ...goal,\n      id: goal.id || generateId()\n    };\n\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Agregar la nueva meta\n    const updatedGoals = [...currentGoals, goalWithId];\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return goalWithId;\n  } catch (error) {\n    console.error('Error al agregar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una meta financiera\n * @param {string} id - ID de la meta\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateFinancialGoal = (id, updates) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Buscar la meta\n    const index = currentGoals.findIndex(g => g.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la meta\n    const updatedGoals = [...currentGoals];\n    updatedGoals[index] = {\n      ...updatedGoals[index],\n      ...updates\n    };\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return updatedGoals[index];\n  } catch (error) {\n    console.error('Error al actualizar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una meta financiera\n * @param {string} id - ID de la meta\n */\nexport const deleteFinancialGoal = (id) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Filtrar la meta a eliminar\n    const updatedGoals = currentGoals.filter(g => g.id !== id);\n\n    // Si no se eliminó ninguna meta, retornar false\n    if (updatedGoals.length === currentGoals.length) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar meta financiera:', error);\n    return false;\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\n\n// Estilos para el botón\nconst ButtonContainer = styled(animated.button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  border-radius: var(--border-radius);\n  font-weight: 500;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.2s, transform 0.1s;\n  border: none;\n  outline: none;\n  gap: 8px;\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  ${props => props.variant === 'primary' && `\n    background-color: var(--primary-color);\n    color: white;\n    \n    &:hover:not(:disabled) {\n      background-color: var(--primary-color-dark);\n    }\n  `}\n  \n  ${props => props.variant === 'secondary' && `\n    background-color: var(--secondary-color);\n    color: white;\n    \n    &:hover:not(:disabled) {\n      background-color: var(--secondary-color-dark);\n    }\n  `}\n  \n  ${props => props.variant === 'danger' && `\n    background-color: var(--danger-color);\n    color: white;\n    \n    &:hover:not(:disabled) {\n      background-color: var(--danger-color-dark);\n    }\n  `}\n  \n  ${props => props.variant === 'outline' && `\n    background-color: transparent;\n    color: var(--primary-color);\n    border: 1px solid var(--primary-color);\n    \n    &:hover:not(:disabled) {\n      background-color: rgba(var(--primary-color-rgb), 0.1);\n    }\n  `}\n  \n  ${props => props.fullWidth && `\n    width: 100%;\n  `}\n`;\n\n/**\n * Componente de botón con animación\n * @param {Object} props - Propiedades del componente\n * @param {string} props.variant - Variante del botón (primary, secondary, danger, outline)\n * @param {boolean} props.fullWidth - Si el botón debe ocupar todo el ancho disponible\n * @param {boolean} props.disabled - Si el botón está deshabilitado\n * @param {Function} props.onClick - Función a ejecutar al hacer clic en el botón\n * @param {React.ReactNode} props.children - Contenido del botón\n * @returns {JSX.Element} - Componente de botón animado\n */\nconst AnimatedButton = ({ \n  variant = 'primary', \n  fullWidth = false, \n  disabled = false, \n  onClick, \n  children,\n  ...rest \n}) => {\n  // Animación al pasar el mouse por encima\n  const [springs, api] = useSpring(() => ({\n    scale: 1,\n    config: { tension: 300, friction: 10 }\n  }));\n  \n  // Manejadores de eventos\n  const handleMouseEnter = () => {\n    if (!disabled) {\n      api.start({ scale: 1.05 });\n    }\n  };\n  \n  const handleMouseLeave = () => {\n    api.start({ scale: 1 });\n  };\n  \n  const handleClick = (e) => {\n    if (!disabled && onClick) {\n      // Animación al hacer clic\n      api.start({\n        scale: 0.95,\n        onRest: () => {\n          api.start({ scale: 1 });\n          onClick(e);\n        }\n      });\n    }\n  };\n  \n  return (\n    <ButtonContainer\n      variant={variant}\n      fullWidth={fullWidth}\n      disabled={disabled}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={springs}\n      {...rest}\n    >\n      {children}\n    </ButtonContainer>\n  );\n};\n\nexport default AnimatedButton;\n"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","SummaryContainer","styled","div","SummaryCard","CardHeader","IconContainer","props","type","isPositive","CardTitle","h3","Amount","SecondaryAmount","ChartContainer","ChartHeader","ChartTitle","ChartWrapper","formatCurrency","amount","currency","arguments","length","undefined","Intl","NumberFormat","style","format","formatPercentage","value","minimumFractionDigits","maximumFractionDigits","_ref","investments","exchangeRate","arsInvestments","filter","inv","usdInvestments","totalInvestedARS","reduce","sum","purchase_price","quantity","currentValueARS","current_price","profitLossARS","profitLossPercentageARS","totalInvestedUSD","currentValueUSD","profitLossUSD","profitLossPercentageUSD","totalInvested","profitLoss","profitLossPercentage","investmentsByTypeAndCurrency","getInvestmentsByTypeAndCurrency","typeMap","forEach","key","chartData","labels","Object","keys","map","split","typeLabel","getTypeAndCurrencyLabel","datasets","data","values","backgroundColor","getBackgroundColor","borderColor","getBorderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","font","family","tooltip","callbacks","label","context","raw","dataIndex","totalValue","percentage","_jsxs","_Fragment","children","_jsx","FiDollarSign","FiTrendingUp","FiTrendingDown","FiPieChart","Pie","options","InvestmentContainer","InvestmentHeader","InvestmentInfo","InvestmentSymbol","InvestmentDetails","InvestmentName","InvestmentType","span","InvestmentPlatform","InvestmentActions","ActionButton","button","color","InvestmentBody","InvestmentStat","StatLabel","StatValue","PerformanceContainer","PerformanceValue","PerformanceIcon","getInvestmentTypeText","investment","onEdit","onDelete","id","name","symbol","platform","purchase_date","currentValue","substring","toUpperCase","onClick","FiEdit2","FiTrash2","dateString","Date","toLocaleDateString","ListContainer","EmptyMessage","onEditInvestment","onDeleteInvestment","InvestmentItem","FormContainer","FormHeader","FormTitle","CloseButton","ErrorMessage","FormGrid","FormGroup","Label","required","Input","input","Select","select","ButtonGroup","SubmitButton","CancelButton","initialFormState","toISOString","onSubmit","onCancel","formData","setFormData","useState","error","setError","isEditMode","useEffect","handleChange","e","target","prev","FiX","preventDefault","trim","parseFloat","now","htmlFor","onChange","placeholder","min","step","FiltersContainer","FiltersHeader","FiltersIcon","FiFilter","FiltersContent","SearchContainer","SearchIcon","FiSearch","SearchInput","FilterGroup","FilterSelect","filters","onFilterChange","search","performance","sort","ALPHA_VANTAGE_API_KEY","getStockQuote","async","response","fetch","ok","Error","statusText","json","Note","includes","console","TrackerContainer","TrackerHeader","TrackerTitle","h2","StockGrid","StockCard","StockSymbol","StockPrice","StockChange","positive","StockInfo","StockInfoItem","DeleteButton","AddStockForm","form","StockInput","EmptyState","StockTracker","stocks","setStocks","loading","setLoading","newSymbol","setNewSymbol","refreshing","setRefreshing","savedStocks","localStorage","getItem","JSON","parse","setItem","stringify","formatPrice","price","AnimatedButton","variant","updatedStocks","Promise","all","stock","change","changePercent","replace","volume","parseInt","lastUpdated","showSuccess","showError","message","disabled","FiRefreshCw","some","newStock","FiPlus","LoadingSpinner","text","handleDeleteStock","FiArrowUp","FiArrowDown","Math","abs","percent","toLocaleString","NewsContainer","NewsHeader","NewsTitle","NewsGrid","NewsCard","NewsImage","src","NewsContent","NewsHeadline","NewsSource","NewsDescription","p","NewsLink","a","NewsDate","FinancialNews","news","setNews","query","setQuery","searchQuery","setSearchQuery","articles","pageSize","getFinancialNews","loadNews","handleSearch","onKeyPress","article","index","urlToImage","title","source","description","href","url","rel","FiExternalLink","publishedAt","year","month","day","MessageContainer","isUser","MessageBubble","MessageContent","Avatar","Timestamp","FiUser","FiMessageSquare","content","line","timestamp","toLocaleTimeString","hour","minute","InputContainer","StyledInput","SendButton","RefreshButton","onSendMessage","onRefreshPrices","isRefreshing","setMessage","display","width","FiSend","animation","FinancialAdvice","commonQuestions","investmentAdvice","personalFinanceAdvice","specificAdvice","bonds","crypto","etfs","funds","financialTerms","generateResponse","question","lowerQuestion","toLowerCase","entries","term","explanation","floor","random","stocksValue","cryptoValue","bondsValue","etfsValue","stocksPercentage","toFixed","cryptoPercentage","bondsPercentage","advice","getRandomAdvice","allAdvice","updateAllPrices","priceData","resolve","setTimeout","basePrice","acc","char","charCodeAt","variation","getCryptoPrice","getBondPrice","getStockPrice","ChatBotContainer","isOpen","ChatHeader","HeaderTitle","HeaderActions","ChatBody","WelcomeMessage","SuggestedQuestions","QuestionButton","setIsOpen","messages","setMessages","setIsRefreshing","messagesEndRef","useRef","current","scrollIntoView","behavior","welcomeMessage","handleSendMessage","userMessage","prevMessages","botResponse","FiChevronDown","FiChevronUp","ChatMessage","ref","ChatInput","systemMessage","updatedInvestments","log","savePriceUpdates","changes","originalInv","find","i","priceDiff","percentChange","oldPrice","newPrice","Boolean","summaryContent","direction","formattedPrice","formattedPercent","summaryMessage","errorMessage","InvestmentsContainer","InvestmentsHeader","InvestmentsSection","InvestmentsHeaderActions","SectionTitle","Investments","setInvestments","showForm","setShowForm","editingInvestment","setEditingInvestment","setFilters","filteredInvestments","setFilteredInvestments","loadInvestments","savedInvestments","getInvestments","result","searchTerm","b","localeCompare","perfA","InvestmentSummary","InvestmentForm","newInvestment","updatedInvestment","updateInvestment","alert","investmentWithId","toString","substr","savedInvestment","addInvestment","handleCancelForm","InvestmentFilters","InvestmentList","investmentId","window","confirm","deleteInvestment","ChatBot","STORAGE_PREFIX","saveData","fullKey","getData","defaultValue","storedData","parsedData","generateId","saveTransactions","transactions","getTransactions","addTransaction","transaction","transactionWithId","updatedTransactions","updateTransaction","updates","currentTransactions","findIndex","t","deleteTransaction","saveTasks","tasks","getTasks","addTask","task","taskWithId","created_at","updatedTasks","updateTask","currentTasks","deleteTask","toggleTaskComplete","completed","saveInvestments","currentInvestments","saveFinancialGoals","goals","getFinancialGoals","addFinancialGoal","goal","goalWithId","updatedGoals","updateFinancialGoal","currentGoals","g","deleteFinancialGoal","ButtonContainer","animated","fullWidth","rest","springs","api","useSpring","scale","config","tension","friction","start","onRest","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave"],"sourceRoot":""}