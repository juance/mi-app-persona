{"version":3,"file":"static/js/204.e8dec706.chunk.js","mappings":"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","sources":["components/Calendar/CalendarGrid.js","components/Calendar/EventList.js","components/Calendar/EventForm.js","pages/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\n\nconst CalendarContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 16px;\n  margin-bottom: 24px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst CalendarHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst MonthNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst MonthTitle = styled.h2`\n  margin: 0;\n  font-size: 1.3rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  min-width: 180px;\n  text-align: center;\n`;\n\nconst NavButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.3rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--primary-color);\n    background-color: rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst TodayButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 6px 12px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 0.85rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  }\n`;\n\nconst WeekdaysRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 6px;\n  margin-bottom: 6px;\n\n  @media (max-width: 768px) {\n    gap: 3px;\n  }\n`;\n\nconst Weekday = styled.div`\n  text-align: center;\n  font-weight: 600;\n  color: var(--text-medium);\n  padding: 6px 4px;\n  font-size: 0.8rem;\n`;\n\nconst DaysGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 6px;\n\n  @media (max-width: 768px) {\n    gap: 3px;\n  }\n`;\n\nconst DayCell = styled.div`\n  aspect-ratio: 1;\n  border-radius: var(--border-radius);\n  padding: 6px 4px;\n  cursor: pointer;\n  position: relative;\n  background-color: ${props => {\n    if (props.isToday) return 'rgba(99, 102, 241, 0.1)';\n    if (props.isSelected) return 'rgba(99, 102, 241, 0.2)';\n    if (props.isCurrentMonth) return 'var(--bg-light)';\n    return 'var(--bg-medium)';\n  }};\n  color: ${props => {\n    if (props.isToday) return 'var(--primary-color)';\n    if (!props.isCurrentMonth) return 'var(--text-light)';\n    return 'var(--text-dark)';\n  }};\n  font-weight: ${props => props.isToday ? '600' : 'normal'};\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: ${props => props.isToday\n      ? 'rgba(99, 102, 241, 0.2)'\n      : 'rgba(99, 102, 241, 0.1)'\n    };\n    transform: translateY(-1px);\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  }\n\n  @media (max-width: 768px) {\n    padding: 3px 2px;\n  }\n`;\n\nconst DayNumber = styled.div`\n  font-size: 0.85rem;\n  margin-bottom: 2px;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    font-size: 0.75rem;\n    margin-bottom: 1px;\n  }\n`;\n\nconst EventIndicatorsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1px;\n  justify-content: center;\n`;\n\nconst EventIndicator = styled.div`\n  width: 4px;\n  height: 4px;\n  border-radius: 50%;\n  background-color: ${props => {\n    switch (props.category) {\n      case 'personal': return 'var(--primary-color)';\n      case 'familia': return 'var(--secondary-color)';\n      case 'duchene': return 'var(--accent-color)';\n      case 'lavadero': return 'var(--danger-color)';\n      case 'vapea': return 'var(--primary-dark)';\n      default: return 'var(--text-light)';\n    }\n  }};\n\n  @media (max-width: 768px) {\n    width: 3px;\n    height: 3px;\n  }\n`;\n\nconst CalendarGrid = ({ events, onSelectDate }) => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // Obtener el primer día del mes actual\n  const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n\n  // Obtener el último día del mes actual\n  const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n\n  // Obtener el día de la semana del primer día del mes (0 = Domingo, 1 = Lunes, etc.)\n  const firstDayOfWeek = firstDayOfMonth.getDay();\n\n  // Ajustar para que la semana comience en lunes (0 = Lunes, 6 = Domingo)\n  const adjustedFirstDayOfWeek = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;\n\n  // Calcular el primer día que se mostrará en el calendario (puede ser del mes anterior)\n  const firstDayToShow = new Date(firstDayOfMonth);\n  firstDayToShow.setDate(firstDayToShow.getDate() - adjustedFirstDayOfWeek);\n\n  // Generar los días para mostrar en el calendario (6 semanas)\n  const daysToShow = [];\n  const currentDay = new Date(firstDayToShow);\n\n  for (let i = 0; i < 42; i++) {\n    daysToShow.push(new Date(currentDay));\n    currentDay.setDate(currentDay.getDate() + 1);\n  }\n\n  // Nombres de los días de la semana\n  const weekdays = ['Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb', 'Dom'];\n\n  // Nombres de los meses\n  const months = [\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\n  ];\n\n  // Navegar al mes anterior\n  const goToPreviousMonth = () => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() - 1);\n    setCurrentDate(newDate);\n  };\n\n  // Navegar al mes siguiente\n  const goToNextMonth = () => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() + 1);\n    setCurrentDate(newDate);\n  };\n\n  // Ir al mes actual\n  const goToToday = () => {\n    setCurrentDate(new Date());\n    setSelectedDate(new Date());\n    onSelectDate(new Date());\n  };\n\n  // Verificar si una fecha es hoy\n  const isToday = (date) => {\n    const today = new Date();\n    return date.getDate() === today.getDate() &&\n           date.getMonth() === today.getMonth() &&\n           date.getFullYear() === today.getFullYear();\n  };\n\n  // Verificar si una fecha está seleccionada\n  const isSelected = (date) => {\n    return date.getDate() === selectedDate.getDate() &&\n           date.getMonth() === selectedDate.getMonth() &&\n           date.getFullYear() === selectedDate.getFullYear();\n  };\n\n  // Verificar si una fecha pertenece al mes actual\n  const isCurrentMonth = (date) => {\n    return date.getMonth() === currentDate.getMonth();\n  };\n\n  // Obtener eventos para una fecha específica\n  const getEventsForDate = (date) => {\n    return events.filter(event => {\n      const eventDate = new Date(event.date);\n      return eventDate.getDate() === date.getDate() &&\n             eventDate.getMonth() === date.getMonth() &&\n             eventDate.getFullYear() === date.getFullYear();\n    });\n  };\n\n  // Manejar clic en una celda de día\n  const handleDayClick = (date) => {\n    setSelectedDate(date);\n    onSelectDate(date);\n  };\n\n  return (\n    <CalendarContainer>\n      <CalendarHeader>\n        <MonthNavigation>\n          <NavButton onClick={goToPreviousMonth}>\n            <FiChevronLeft />\n          </NavButton>\n          <MonthTitle>\n            {months[currentDate.getMonth()]} {currentDate.getFullYear()}\n          </MonthTitle>\n          <NavButton onClick={goToNextMonth}>\n            <FiChevronRight />\n          </NavButton>\n        </MonthNavigation>\n\n        <TodayButton onClick={goToToday}>\n          Hoy\n        </TodayButton>\n      </CalendarHeader>\n\n      <WeekdaysRow>\n        {weekdays.map(day => (\n          <Weekday key={day}>{day}</Weekday>\n        ))}\n      </WeekdaysRow>\n\n      <DaysGrid>\n        {daysToShow.map((day, index) => {\n          const dayEvents = getEventsForDate(day);\n\n          return (\n            <DayCell\n              key={index}\n              isToday={isToday(day)}\n              isSelected={isSelected(day)}\n              isCurrentMonth={isCurrentMonth(day)}\n              onClick={() => handleDayClick(day)}\n            >\n              <DayNumber>{day.getDate()}</DayNumber>\n\n              <EventIndicatorsContainer>\n                {dayEvents.slice(0, 3).map((event, i) => (\n                  <EventIndicator key={i} category={event.category} />\n                ))}\n              </EventIndicatorsContainer>\n            </DayCell>\n          );\n        })}\n      </DaysGrid>\n    </CalendarContainer>\n  );\n};\n\nexport default CalendarGrid;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiClock, FiMapPin, FiEdit2, FiTrash2 } from 'react-icons/fi';\n\nconst ListContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst EventsTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 30px 0;\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n`;\n\nconst EventItem = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 16px;\n  margin-bottom: 12px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  border-left: 4px solid ${props => {\n    switch (props.category) {\n      case 'personal': return 'var(--primary-color)';\n      case 'familia': return 'var(--secondary-color)';\n      case 'duchene': return 'var(--accent-color)';\n      case 'lavadero': return 'var(--danger-color)';\n      case 'vapea': return 'var(--primary-dark)';\n      default: return 'var(--text-light)';\n    }\n  }};\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: var(--card-shadow-hover);\n  }\n`;\n\nconst EventHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 12px;\n`;\n\nconst EventTitle = styled.h4`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst EventActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst EventDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst EventDetail = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-medium);\n  font-size: 0.9rem;\n`;\n\nconst EventDescription = styled.p`\n  margin: 12px 0 0;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n  line-height: 1.5;\n`;\n\nconst CategoryBadge = styled.span`\n  font-size: 0.8rem;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    switch (props.category) {\n      case 'personal': return 'rgba(99, 102, 241, 0.1)';\n      case 'familia': return 'rgba(16, 185, 129, 0.1)';\n      case 'duchene': return 'rgba(245, 158, 11, 0.1)';\n      case 'lavadero': return 'rgba(239, 68, 68, 0.1)';\n      case 'vapea': return 'rgba(168, 85, 247, 0.1)';\n      default: return 'rgba(156, 163, 175, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch (props.category) {\n      case 'personal': return 'var(--primary-color)';\n      case 'familia': return 'var(--secondary-color)';\n      case 'duchene': return 'var(--accent-color)';\n      case 'lavadero': return 'var(--danger-color)';\n      case 'vapea': return 'var(--primary-dark)';\n      default: return 'var(--text-medium)';\n    }\n  }};\n`;\n\nconst formatTime = (timeString) => {\n  if (!timeString) return '';\n\n  const [hours, minutes] = timeString.split(':');\n  return `${hours}:${minutes}`;\n};\n\nconst getCategoryName = (category) => {\n  switch (category) {\n    case 'personal': return 'Personal';\n    case 'familia': return 'Familia';\n    case 'duchene': return 'Duchene';\n    case 'lavadero': return 'Lavadero';\n    case 'vapea': return 'Vapea Conmigo';\n    default: return 'Otro';\n  }\n};\n\nconst EventList = ({ events, selectedDate, onEditEvent, onDeleteEvent }) => {\n  // Filtrar eventos para la fecha seleccionada\n  const filteredEvents = events.filter(event => {\n    const eventDate = new Date(event.date);\n    return eventDate.getDate() === selectedDate.getDate() &&\n           eventDate.getMonth() === selectedDate.getMonth() &&\n           eventDate.getFullYear() === selectedDate.getFullYear();\n  });\n\n  // Formatear fecha\n  const formatDate = (date) => {\n    const options = { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' };\n    return date.toLocaleDateString('es-ES', options);\n  };\n\n  return (\n    <ListContainer>\n      <EventsTitle>Eventos para {formatDate(selectedDate)}</EventsTitle>\n\n      {filteredEvents.length === 0 ? (\n        <EmptyMessage>\n          No hay eventos para esta fecha. ¡Agrega uno nuevo!\n        </EmptyMessage>\n      ) : (\n        filteredEvents.map(event => (\n          <EventItem key={event.id} category={event.category}>\n            <EventHeader>\n              <EventTitle>{event.title}</EventTitle>\n              <EventActions>\n                <ActionButton onClick={() => onEditEvent(event)} color=\"var(--primary-color)\">\n                  <FiEdit2 />\n                </ActionButton>\n                <ActionButton onClick={() => onDeleteEvent(event.id)} color=\"var(--danger-color)\">\n                  <FiTrash2 />\n                </ActionButton>\n              </EventActions>\n            </EventHeader>\n\n            <EventDetails>\n              {(event.start_time || event.end_time) && (\n                <EventDetail>\n                  <FiClock />\n                  {event.start_time && formatTime(event.start_time)}\n                  {event.end_time && ` - ${formatTime(event.end_time)}`}\n                </EventDetail>\n              )}\n\n              {event.location && (\n                <EventDetail>\n                  <FiMapPin />\n                  {event.location}\n                </EventDetail>\n              )}\n\n              <EventDetail>\n                <CategoryBadge category={event.category}>\n                  {getCategoryName(event.category)}\n                </CategoryBadge>\n              </EventDetail>\n            </EventDetails>\n\n            {event.description && (\n              <EventDescription>{event.description}</EventDescription>\n            )}\n          </EventItem>\n        ))\n      )}\n    </ListContainer>\n  );\n};\n\nexport default EventList;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiX } from 'react-icons/fi';\n\nconst FormContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst FormTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  padding: 12px;\n  background-color: rgba(239, 68, 68, 0.08);\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--danger-color);\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n  grid-column: ${props => props.fullWidth ? 'span 2' : 'span 1'};\n\n  @media (max-width: 768px) {\n    grid-column: span 1;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n\n  &::after {\n    content: ' *';\n    color: var(--danger-color);\n    display: ${props => props.required ? 'inline' : 'none'};\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  min-height: 100px;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 24px;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  flex: 1;\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst CancelButton = styled.button`\n  background-color: var(--bg-medium);\n  color: var(--text-medium);\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--bg-dark);\n    color: var(--text-light);\n  }\n`;\n\nconst EventForm = ({ event, selectedDate, onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    date: selectedDate ? selectedDate.toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\n    start_time: '',\n    end_time: '',\n    location: '',\n    category: 'personal'\n  });\n  const [error, setError] = useState('');\n  const isEditMode = !!event?.id;\n\n  useEffect(() => {\n    if (event) {\n      setFormData({\n        title: event.title || '',\n        description: event.description || '',\n        date: event.date || (selectedDate ? selectedDate.toISOString().split('T')[0] : new Date().toISOString().split('T')[0]),\n        start_time: event.start_time || '',\n        end_time: event.end_time || '',\n        location: event.location || '',\n        category: event.category || 'personal'\n      });\n    } else if (selectedDate) {\n      setFormData(prev => ({\n        ...prev,\n        date: selectedDate.toISOString().split('T')[0]\n      }));\n    }\n  }, [event, selectedDate]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validación\n    if (!formData.title.trim()) {\n      setError('Por favor ingresa un título para el evento.');\n      return;\n    }\n\n    if (formData.start_time && formData.end_time && formData.start_time > formData.end_time) {\n      setError('La hora de inicio debe ser anterior a la hora de fin.');\n      return;\n    }\n\n    // Enviar datos\n    onSubmit({\n      ...formData,\n      id: event?.id || Date.now()\n    });\n\n    setError('');\n  };\n\n  return (\n    <FormContainer>\n      <FormHeader>\n        <FormTitle>\n          {isEditMode ? 'Editar Evento' : 'Crear Nuevo Evento'}\n        </FormTitle>\n        <CloseButton onClick={onCancel}>\n          <FiX />\n        </CloseButton>\n      </FormHeader>\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGrid>\n          <FormGroup fullWidth>\n            <Label htmlFor=\"title\" required>Título</Label>\n            <Input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={formData.title}\n              onChange={handleChange}\n              placeholder=\"Ej: Reunión de trabajo\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"date\" required>Fecha</Label>\n            <Input\n              type=\"date\"\n              id=\"date\"\n              name=\"date\"\n              value={formData.date}\n              onChange={handleChange}\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"category\" required>Categoría</Label>\n            <Select\n              id=\"category\"\n              name=\"category\"\n              value={formData.category}\n              onChange={handleChange}\n              required\n            >\n              <option value=\"personal\">Personal</option>\n              <option value=\"familia\">Familia</option>\n              <option value=\"duchene\">Duchene</option>\n              <option value=\"lavadero\">Lavadero</option>\n              <option value=\"vapea\">Vapea Conmigo</option>\n              <option value=\"other\">Otro</option>\n            </Select>\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"start_time\">Hora de inicio</Label>\n            <Input\n              type=\"time\"\n              id=\"start_time\"\n              name=\"start_time\"\n              value={formData.start_time}\n              onChange={handleChange}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"end_time\">Hora de fin</Label>\n            <Input\n              type=\"time\"\n              id=\"end_time\"\n              name=\"end_time\"\n              value={formData.end_time}\n              onChange={handleChange}\n            />\n          </FormGroup>\n\n          <FormGroup fullWidth>\n            <Label htmlFor=\"location\">Ubicación</Label>\n            <Input\n              type=\"text\"\n              id=\"location\"\n              name=\"location\"\n              value={formData.location}\n              onChange={handleChange}\n              placeholder=\"Ej: Oficina central\"\n            />\n          </FormGroup>\n\n          <FormGroup fullWidth>\n            <Label htmlFor=\"description\">Descripción</Label>\n            <Textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              placeholder=\"Añade detalles sobre este evento...\"\n            />\n          </FormGroup>\n        </FormGrid>\n\n        <ButtonGroup>\n          <SubmitButton type=\"submit\">\n            {isEditMode ? 'Guardar Cambios' : 'Crear Evento'}\n          </SubmitButton>\n          <CancelButton type=\"button\" onClick={onCancel}>\n            Cancelar\n          </CancelButton>\n        </ButtonGroup>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default EventForm;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus } from 'react-icons/fi';\nimport CalendarGrid from '../components/Calendar/CalendarGrid';\nimport EventList from '../components/Calendar/EventList';\nimport EventForm from '../components/Calendar/EventForm';\n\nconst CalendarContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst CalendarHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst EventsSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst EventsHeaderActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst AddEventButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\n// Lista vacía de eventos\nconst sampleEvents = [];\n\nconst Calendar = () => {\n  const [events, setEvents] = useState(sampleEvents);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showForm, setShowForm] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n\n  const handleSelectDate = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleAddEvent = (newEvent) => {\n    // Si estamos editando, actualizar el evento existente\n    if (editingEvent) {\n      setEvents(prev => prev.map(event =>\n        event.id === newEvent.id ? newEvent : event\n      ));\n      setEditingEvent(null);\n    } else {\n      // Si es un nuevo evento, agregarlo a la lista\n      setEvents(prev => [...prev, newEvent]);\n    }\n\n    setShowForm(false);\n  };\n\n  const handleEditEvent = (event) => {\n    setEditingEvent(event);\n    setShowForm(true);\n  };\n\n  const handleDeleteEvent = (eventId) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este evento?')) {\n      setEvents(prev => prev.filter(event => event.id !== eventId));\n    }\n  };\n\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingEvent(null);\n  };\n\n  return (\n    <CalendarContainer>\n      <CalendarHeader>\n        <h1>Calendario</h1>\n        <p>Organiza tus eventos y citas</p>\n      </CalendarHeader>\n\n      {/* Calendario */}\n      <CalendarGrid\n        events={events}\n        onSelectDate={handleSelectDate}\n      />\n\n      {/* Sección de eventos */}\n      <EventsSection>\n        <EventsHeaderActions>\n          <SectionTitle>Eventos</SectionTitle>\n          <AddEventButton onClick={() => {\n            setEditingEvent(null);\n            setShowForm(!showForm);\n          }}>\n            <FiPlus />\n            {showForm ? 'Cancelar' : 'Nuevo Evento'}\n          </AddEventButton>\n        </EventsHeaderActions>\n\n        {/* Formulario para agregar/editar eventos */}\n        {showForm && (\n          <EventForm\n            event={editingEvent}\n            selectedDate={selectedDate}\n            onSubmit={handleAddEvent}\n            onCancel={handleCancelForm}\n          />\n        )}\n\n        {/* Lista de eventos */}\n        <EventList\n          events={events}\n          selectedDate={selectedDate}\n          onEditEvent={handleEditEvent}\n          onDeleteEvent={handleDeleteEvent}\n        />\n      </EventsSection>\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n"],"names":["CalendarContainer","styled","div","CalendarHeader","MonthNavigation","MonthTitle","h2","NavButton","button","TodayButton","WeekdaysRow","Weekday","DaysGrid","DayCell","props","isToday","isSelected","isCurrentMonth","DayNumber","EventIndicatorsContainer","EventIndicator","category","_ref","events","onSelectDate","currentDate","setCurrentDate","useState","Date","selectedDate","setSelectedDate","firstDayOfMonth","getFullYear","getMonth","firstDayOfWeek","getDay","adjustedFirstDayOfWeek","firstDayToShow","setDate","getDate","daysToShow","currentDay","i","push","date","today","_jsxs","children","_jsx","onClick","goToPreviousMonth","newDate","setMonth","FiChevronLeft","goToNextMonth","FiChevronRight","goToToday","map","day","index","dayEvents","filter","event","eventDate","handleDayClick","slice","ListContainer","EventsTitle","h3","EmptyMessage","EventItem","EventHeader","EventTitle","h4","EventActions","ActionButton","color","EventDetails","EventDetail","EventDescription","p","CategoryBadge","span","formatTime","timeString","hours","minutes","split","getCategoryName","onEditEvent","onDeleteEvent","filteredEvents","toLocaleDateString","weekday","month","year","length","title","FiEdit2","id","FiTrash2","start_time","end_time","FiClock","location","FiMapPin","description","FormContainer","FormHeader","FormTitle","CloseButton","ErrorMessage","FormGrid","FormGroup","fullWidth","Label","label","required","Input","input","Textarea","textarea","Select","select","ButtonGroup","SubmitButton","CancelButton","onSubmit","onCancel","formData","setFormData","toISOString","error","setError","isEditMode","useEffect","prev","handleChange","e","name","value","target","FiX","preventDefault","trim","now","htmlFor","type","onChange","placeholder","EventsSection","EventsHeaderActions","SectionTitle","AddEventButton","sampleEvents","Calendar","setEvents","showForm","setShowForm","editingEvent","setEditingEvent","CalendarGrid","FiPlus","EventForm","newEvent","handleCancelForm","EventList","eventId","window","confirm"],"sourceRoot":""}