{"version":3,"file":"static/js/217.a67fc3b3.chunk.js","mappings":"kNAOAA,EAAAA,GAAQC,SAASC,EAAAA,GAAYC,EAAAA,GAASC,EAAAA,GAAQC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAYC,EAAAA,IAEtF,MAAMC,EAAiBC,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;EAe3BC,EAAaF,EAAAA,GAAOG,EAAE;;;;;;;EAStBC,EAAeJ,EAAAA,GAAOC,GAAG;;;;;EAOzBI,EAAkBL,EAAAA,GAAOM,MAAM;sBACfC,GAASA,EAAMC,OAAS,uBAAyB;WAC5DD,GAASA,EAAMC,OAAS,QAAU;;;;;;;;gBAQ7BD,GAASA,EAAMC,OAAS,oCAAsC;;;wBAGtDD,GAASA,EAAMC,OAAS,uBAAyB;;;EAKnEC,EAAeT,EAAAA,GAAOC,GAAG;;;;;EAiL/B,EA1KkBS,IAAgB,IAAf,MAAEC,GAAOD,EAC1B,MAAOE,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,QACrC,SAAEC,IAAaC,EAAAA,EAAAA,MACdC,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,OACpCK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,MAoIjD,OAlIAO,EAAAA,EAAAA,YAAU,KACR,IAAKV,GAA0B,IAAjBA,EAAMW,OAAc,OAElC,MAAMC,EAASZ,EAAMa,KAAIC,GAAQA,EAAKC,OAChCC,EAAiBhB,EAAMa,KAAIC,GAAQA,EAAKG,iBAExCC,GADgBlB,EAAMa,KAAIC,GAAQA,EAAKK,gBACpBnB,EAAMa,KAAIC,GAAQM,KAAKC,IAAI,EAAGP,EAAKK,cAAgBL,EAAKG,mBAG3EK,EAAmB,CACvB,0BACA,yBACA,0BACA,0BACA,0BACA,0BACA,2BAGgB,QAAdrB,GACFM,EAAa,CACXK,SACAW,SAAU,CACR,CACEC,MAAO,eACPC,KAAMT,EACNU,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,GAEf,CACEJ,MAAO,iBACPC,KAAMP,EACNQ,gBAAiB,yBACjBC,YAAa,uBACbC,YAAa,MAKnBnB,EAAgB,CACdoB,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTC,MAAO,CACLC,MAAO/B,EAAW,UAAY,WAEhCgC,KAAM,CACJD,MAAO/B,EAAW,2BAA6B,uBAGnDiC,EAAG,CACDJ,SAAS,EACTK,aAAa,EACbJ,MAAO,CACLK,SAAU,SAASC,GACjB,OAAO,IAAIC,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IACtBC,OAAON,EACZ,EACAL,MAAO/B,EAAW,UAAY,WAEhCgC,KAAM,CACJD,MAAO/B,EAAW,2BAA6B,wBAIrD2C,QAAS,CACPC,OAAQ,CACNpC,OAAQ,CACNuB,MAAO/B,EAAW,UAAY,YAGlC6C,QAAS,CACPC,UAAW,CACT1B,MAAO,SAAS2B,GACd,OAAOA,EAAQC,QAAQ5B,MAAQ,KAC7B,IAAIiB,KAAKC,aAAa,QAAS,CAC7BC,MAAO,WACPC,SAAU,QACTE,OAAOK,EAAQE,IACtB,SAMR9C,EAAa,CACXK,SACAW,SAAU,CAAC,CACTE,KAAMT,EACNU,gBAAiBJ,EACjBK,YAAaL,EAAiBT,KAAIsB,GAASA,EAAMmB,QAAQ,MAAO,OAChE1B,YAAa,MAIjBnB,EAAgB,CACdoB,YAAY,EACZC,qBAAqB,EACrBiB,QAAS,CACPC,OAAQ,CACNO,SAAU,QACV3C,OAAQ,CACNuB,MAAO/B,EAAW,UAAY,YAGlC6C,QAAS,CACPC,UAAW,CACT1B,MAAO,SAAS2B,GACd,MAAMrC,EAAOd,EAAMmD,EAAQK,WACrBC,EAAarC,KAAKsC,MAAO5C,EAAKG,eAAiBH,EAAKK,cAAiB,KAC3E,OAAOgC,EAAQ3B,MAAQ,KACrB,IAAIiB,KAAKC,aAAa,QAAS,CAC7BC,MAAO,WACPC,SAAU,QACTE,OAAOK,EAAQE,KAClB,KAAKI,kBACT,OAKV,GACC,CAACzD,EAAOC,EAAWG,IAEjBJ,GAA0B,IAAjBA,EAAMW,QAAiBL,GAAcE,GAKjDmD,EAAAA,EAAAA,MAACvE,EAAc,CAAAwE,SAAA,EACbC,EAAAA,EAAAA,KAACtE,EAAU,CAAAqE,SAAC,kCAEZD,EAAAA,EAAAA,MAAClE,EAAY,CAAAmE,SAAA,EACXC,EAAAA,EAAAA,KAACnE,EAAe,CACdG,OAAsB,QAAdI,EACR6D,QAASA,IAAM5D,EAAa,OAAO0D,SACpC,YAGDC,EAAAA,EAAAA,KAACnE,EAAe,CACdG,OAAsB,QAAdI,EACR6D,QAASA,IAAM5D,EAAa,OAAO0D,SACpC,iBAKHC,EAAAA,EAAAA,KAAC/D,EAAY,CAAA8D,SACI,QAAd3D,GACC4D,EAAAA,EAAAA,KAACE,EAAAA,GAAG,CAACtC,KAAMnB,EAAW0D,QAASxD,KAE/BqD,EAAAA,EAAAA,KAACI,EAAAA,GAAG,CAACxC,KAAMnB,EAAW0D,QAASxD,SA1B9B,IA6BU,ECpOf0D,EAAmB7E,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgB7B6E,EAAc9E,EAAAA,GAAOC,GAAG;;;;;;;;;EAWxB8E,EAAQ/E,EAAAA,GAAOmC,KAAK;;;;;EAOpB6C,EAAShF,EAAAA,GAAOiF,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;EA0F5B,EA9DoBvE,IAAkC,IAAjC,QAAEwE,EAAO,eAAEC,GAAgBzE,EAC9C,MAAM0E,EAAgBC,IACpB,MAAM,KAAE3D,EAAI,MAAEyB,GAAUkC,EAAEC,OAC1BH,EAAe,IAAKD,EAAS,CAACxD,GAAOyB,GAAQ,EAG/C,OACEmB,EAAAA,EAAAA,MAACO,EAAgB,CAAAN,SAAA,EACfD,EAAAA,EAAAA,MAACQ,EAAW,CAAAP,SAAA,EACVC,EAAAA,EAAAA,KAACO,EAAK,CAACQ,QAAQ,iBAAgBhB,SAAC,+BAChCD,EAAAA,EAAAA,MAACU,EAAM,CACLQ,GAAG,iBACH9D,KAAK,WACLyB,MAAO+B,EAAQO,SACfC,SAAUN,EAAab,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,MAAKoB,SAAC,6BACpBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,UAASoB,SAAC,aACxBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,aAAYoB,SAAC,kBAC3BC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,WAAUoB,SAAC,YACzBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,SAAQoB,SAAC,WACvBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,YAAWoB,SAAC,kBAC1BC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,OAAMoB,SAAC,WACrBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,QAAOoB,SAAC,gBAI1BD,EAAAA,EAAAA,MAACQ,EAAW,CAAAP,SAAA,EACVC,EAAAA,EAAAA,KAACO,EAAK,CAACQ,QAAQ,iBAAgBhB,SAAC,2BAChCD,EAAAA,EAAAA,MAACU,EAAM,CACLQ,GAAG,iBACH9D,KAAK,WACLyB,MAAO+B,EAAQS,SACfD,SAAUN,EAAab,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,MAAKoB,SAAC,WACpBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,SAAQoB,SAAC,mBACvBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,SAAQoB,SAAC,eACvBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,SAAQoB,SAAC,eACvBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,SAAQoB,SAAC,oBACvBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,YAAWoB,SAAC,uBAI9BD,EAAAA,EAAAA,MAACQ,EAAW,CAAAP,SAAA,EACVC,EAAAA,EAAAA,KAACO,EAAK,CAACQ,QAAQ,SAAQhB,SAAC,kBACxBD,EAAAA,EAAAA,MAACU,EAAM,CACLQ,GAAG,SACH9D,KAAK,SACLyB,MAAO+B,EAAQU,OACfF,SAAUN,EAAab,SAAA,EAEvBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,OAAMoB,SAAC,YACrBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,WAAUoB,SAAC,qBACzBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,WAAUoB,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQrB,MAAM,SAAQoB,SAAC,2BAGV,E,aCxHvB,MAAMsB,EAAiC,6BAGjCC,EAAqC,CACzC,CAAEpE,KAAM,UAAWyB,MAAO,WAC1B,CAAEzB,KAAM,eAAayB,MAAO,cAC5B,CAAEzB,KAAM,SAAUyB,MAAO,YACzB,CAAEzB,KAAM,QAASyB,MAAO,UACxB,CAAEzB,KAAM,eAAayB,MAAO,aAC5B,CAAEzB,KAAM,QAASyB,MAAO,QACxB,CAAEzB,KAAM,OAAQyB,MAAO,UA+LZ4C,EAA8BC,UACzC,IAEE,MAAQ5D,MAAM,KAAE6D,UAAiBC,EAAAA,EAASC,KAAKC,UAE/C,GAAIH,EAAM,CACR,MAAM,KAAE7D,EAAI,MAAEiE,SAAgBH,EAAAA,EAC3BI,KAAK,cACLrB,OAAO,KACPsB,GAAG,OAAQ,kBACXC,GAAG,8BAA8BP,EAAKT,MACtCiB,MAAM,OAAQ,CAAEC,WAAW,IAE9B,IAAKL,GAASjE,GAAQA,EAAKd,OAAS,EAAG,CAErC,MAAMqF,EAAsBvE,EAAKZ,KAAIoF,IAAG,CACtClF,KAAMkF,EAAIlF,KACVyB,MAAOyD,EAAIzD,UAMb,OAFA0D,aAAaC,QAAQjB,EAAgCkB,KAAKC,UAAUL,IAE7DA,CACT,CACF,CAGA,MAAMM,EAAiBJ,aAAaK,QAAQrB,GAE5C,OAAKoB,EAIEF,KAAKI,MAAMF,GAHTnB,CAIX,CAAE,MAAOO,GACPe,QAAQf,MAAM,2DAAyDA,GAGvE,MAAMY,EAAiBJ,aAAaK,QAAQrB,GAE5C,OAAKoB,EAIEF,KAAKI,MAAMF,GAHTnB,CAIX,GCtPIuB,EAAgBrH,EAAAA,GAAOC,GAAG;;;;;;;EAS1BqH,EAAYtH,EAAAA,GAAOuH,EAAE;;;;;;;;;;;;;;;;;;;EAqBrBC,EAAexH,EAAAA,GAAOC,GAAG;;;;;;;;EAUzBwH,EAAYzH,EAAAA,GAAOC,GAAG;;EAItB8E,EAAQ/E,EAAAA,GAAOmC,KAAK;;;;;;;;;;eAUX5B,GAASA,EAAMmH,SAAW,SAAW;;EAI9CC,EAAQ3H,EAAAA,GAAO4H,KAAK;;;;;;;;;;;;;;;;;EAmBpB5C,EAAShF,EAAAA,GAAOiF,MAAM;;;;;;;;;;;;;;;;;;;;;;EAwBtB4C,EAAe7H,EAAAA,GAAOM,MAAM;;;;;;;;;;;;;;;;;;;EAqB5BwH,EAAmB,CACvBpG,KAAM,GACNI,cAAe,GACfF,eAAgB,IAChB6D,SAAU,UACVsC,SAAU,IAsIZ,EAnIiBrH,IAAmC,IAAlC,SAAEsH,EAAQ,SAAEC,EAAQ,KAAExG,GAAMf,EAC5C,MAAOwH,EAAUC,IAAerH,EAAAA,EAAAA,UAASW,GAAQqG,IAC1CzB,EAAO+B,IAAYtH,EAAAA,EAAAA,UAAS,KAC5BuH,EAAYC,IAAiBxH,EAAAA,EAAAA,UAAS,KAG7CO,EAAAA,EAAAA,YAAU,KACekH,MACrB,MAAMC,EAAiBzC,IACvBuC,EAAcE,EAAe,EAG/BD,EAAgB,GACf,IAEH,MAAMnD,EAAgBC,IACpB,MAAM,KAAE3D,EAAI,MAAEyB,GAAUkC,EAAEC,OAC1B6C,GAAYM,IAAI,IAAUA,EAAM,CAAC/G,GAAOyB,KAAS,EAkCnD,OACEmB,EAAAA,EAAAA,MAAC+C,EAAa,CAAA9C,SAAA,EACZC,EAAAA,EAAAA,KAAC8C,EAAS,CAAA/C,SAAC,oCAEV8B,IAAS7B,EAAAA,EAAAA,KAACgD,EAAY,CAAAjD,SAAE8B,KAEzB/B,EAAAA,EAAAA,MAAA,QAAM0D,SArCY3C,IACpBA,EAAEqD,iBAGGR,EAASxG,KAAKiH,QAKdT,EAASpG,eAAiB8G,WAAWV,EAASpG,gBAAkB,EACnEsG,EAAS,kDAIPQ,WAAWV,EAAStG,gBAAkBgH,WAAWV,EAASpG,eAC5DsG,EAAS,8DAKXJ,EAAS,IACJE,EACHpG,cAAe8G,WAAWV,EAASpG,eACnCF,eAAgBgH,WAAWV,EAAStG,gBAAkB,KAIxDuG,EAAYL,GACZM,EAAS,KAvBPA,EAAS,gDAuBC,EASmB7D,SAAA,EAC3BD,EAAAA,EAAAA,MAACmD,EAAS,CAAAlD,SAAA,EACRC,EAAAA,EAAAA,KAACO,EAAK,CAACQ,QAAQ,OAAOmC,UAAQ,EAAAnD,SAAC,yBAC/BC,EAAAA,EAAAA,KAACmD,EAAK,CACJkB,KAAK,OACLrD,GAAG,OACH9D,KAAK,OACLyB,MAAO+E,EAASxG,KAChBgE,SAAUN,EACVsC,UAAQ,QAIZpD,EAAAA,EAAAA,MAACmD,EAAS,CAAAlD,SAAA,EACRC,EAAAA,EAAAA,KAACO,EAAK,CAACQ,QAAQ,gBAAgBmC,UAAQ,EAAAnD,SAAC,0BACxCC,EAAAA,EAAAA,KAACmD,EAAK,CACJkB,KAAK,SACLrD,GAAG,gBACH9D,KAAK,gBACLoH,IAAI,IACJC,KAAK,OACL5F,MAAO+E,EAASpG,cAChB4D,SAAUN,EACVsC,UAAQ,QAIZpD,EAAAA,EAAAA,MAACmD,EAAS,CAAAlD,SAAA,EACRC,EAAAA,EAAAA,KAACO,EAAK,CAACQ,QAAQ,iBAAgBhB,SAAC,wBAChCC,EAAAA,EAAAA,KAACmD,EAAK,CACJkB,KAAK,SACLrD,GAAG,iBACH9D,KAAK,iBACLoH,IAAI,IACJC,KAAK,OACL5F,MAAO+E,EAAStG,eAChB8D,SAAUN,QAIdd,EAAAA,EAAAA,MAACmD,EAAS,CAAAlD,SAAA,EACRC,EAAAA,EAAAA,KAACO,EAAK,CAACQ,QAAQ,WAAWmC,UAAQ,EAAAnD,SAAC,kBACnCC,EAAAA,EAAAA,KAACQ,EAAM,CACLQ,GAAG,WACH9D,KAAK,WACLyB,MAAO+E,EAASzC,SAChBC,SAAUN,EACVsC,UAAQ,EAAAnD,SAEP8D,EAAW7G,KAAKiE,IACfjB,EAAAA,EAAAA,KAAA,UAA6BrB,MAAOsC,EAAStC,MAAMoB,SAChDkB,EAAS/D,MADC+D,EAAStC,eAO5BmB,EAAAA,EAAAA,MAACmD,EAAS,CAAAlD,SAAA,EACRC,EAAAA,EAAAA,KAACO,EAAK,CAACQ,QAAQ,WAAUhB,SAAC,qBAC1BC,EAAAA,EAAAA,KAACmD,EAAK,CACJkB,KAAK,OACLrD,GAAG,WACH9D,KAAK,WACLyB,MAAO+E,EAASH,SAChBrC,SAAUN,QAIdZ,EAAAA,EAAAA,KAACqD,EAAY,CAACgB,KAAK,SAAQtE,SAAC,0BAEhB,E,cCjQpB,MAAMyE,EAAOhJ,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;EA0BjBgJ,EAASjJ,EAAAA,GAAOC,GAAG;;;;EAMnBiJ,EAAgBlJ,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;IAa5B+I;;;;EAMElJ,EAAQE,EAAAA,GAAOuH,EAAE;;;;;;EAQjB4B,EAAUnJ,EAAAA,GAAOC,GAAG;;;;;;;EASpBmJ,EAAkBpJ,EAAAA,GAAOC,GAAG;;;EAK5BoJ,EAAcrJ,EAAAA,GAAOsJ,IAAI;;;;;EAOzBC,EAAcvJ,EAAAA,GAAOsJ,IAAI;;;WAGpB/I,GAAwB,YAAfA,EAAMsI,KAAqB,uBAAyB;EAGlEW,EAAoBxJ,EAAAA,GAAOC,GAAG;;EAI9BwJ,EAAczJ,EAAAA,GAAOC,GAAG;;;;;;;EASxByJ,EAAe1J,EAAAA,GAAOC,GAAG;;WAEpBM,GAASA,EAAMoF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqCpBgE,EAAe3J,EAAAA,GAAOC,GAAG;;;;;EAOzB2J,EAAS5J,EAAAA,GAAOC,GAAG;;;;;;;EASnB4J,EAAW7J,EAAAA,GAAOC,GAAG;;;;;;;EASrB6J,EAAgB9J,EAAAA,GAAOsJ,IAAI;;;;;EAO3BS,EAAgB/J,EAAAA,GAAOsJ,IAAI;;;;EAM3BU,EAAUhK,EAAAA,GAAOC,GAAG;;;EAKpBgK,EAAejK,EAAAA,GAAOM,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;EA2B5B4J,EAAelK,EAAAA,GAAOM,MAAM;;;;;;;;;;;;;;;;;;;EAqB5B6J,GAAmB1E,IACvB,OAAQA,GACN,IAAK,UACH,OAAOjB,EAAAA,EAAAA,KAAC4F,EAAAA,IAAY,IACtB,IAAK,aACH,OAAO5F,EAAAA,EAAAA,KAAC6F,EAAAA,IAAY,IACtB,IAAK,WACH,OAAO7F,EAAAA,EAAAA,KAAC8F,EAAAA,IAAa,IACvB,IAAK,SACH,OAAO9F,EAAAA,EAAAA,KAAC+F,EAAAA,IAAQ,IAClB,IAAK,YACH,OAAO/F,EAAAA,EAAAA,KAACgG,EAAAA,IAAM,IAChB,IAAK,OACH,OAAOhG,EAAAA,EAAAA,KAACiG,EAAAA,IAAM,IAChB,QACE,OAAOjG,EAAAA,EAAAA,KAACkG,EAAAA,IAAQ,IACpB,EAGIC,GAAkBC,GACf,IAAIxH,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,QACTE,OAAOmH,GAGNC,GAAcC,IAClB,IAAKA,EAAY,MAAO,sBAExB,OADa,IAAIC,KAAKD,GACVE,mBAAmB,QAAQ,EAoDzC,GAjDiBtK,IAAmC,IAAlC,KAAEe,EAAI,SAAEwJ,EAAQ,SAAEC,GAAUxK,EAC5C,MAAMiF,EAAW5D,KAAK+G,IAAI,IAAK/G,KAAKsC,MAAO5C,EAAKG,eAAiBH,EAAKK,cAAiB,MAEvF,OACEwC,EAAAA,EAAAA,MAAC0E,EAAI,CAAAzE,SAAA,EACHD,EAAAA,EAAAA,MAAC2E,EAAM,CAAA1E,SAAA,EACLC,EAAAA,EAAAA,KAAC0E,EAAa,CAAA3E,SACX4F,GAAgB1I,EAAKgE,aAExBjB,EAAAA,EAAAA,KAAC1E,EAAK,CAAAyE,SAAE9C,EAAKC,WAGf4C,EAAAA,EAAAA,MAAC6E,EAAO,CAAA5E,SAAA,EACND,EAAAA,EAAAA,MAAC8E,EAAe,CAAA7E,SAAA,EACdC,EAAAA,EAAAA,KAAC6E,EAAW,CAAA9E,SAAC,aACbC,EAAAA,EAAAA,KAAC+E,EAAW,CAACV,KAAK,UAAStE,SAAEoG,GAAelJ,EAAKG,sBAEnD0C,EAAAA,EAAAA,MAAC8E,EAAe,CAAA7E,SAAA,EACdC,EAAAA,EAAAA,KAAC6E,EAAW,CAAA9E,SAAC,eACbC,EAAAA,EAAAA,KAAC+E,EAAW,CAACV,KAAK,SAAQtE,SAAEoG,GAAelJ,EAAKK,wBAIpDwC,EAAAA,EAAAA,MAACkF,EAAiB,CAAAjF,SAAA,EAChBC,EAAAA,EAAAA,KAACiF,EAAW,CAAAlF,UACVC,EAAAA,EAAAA,KAACkF,EAAY,CAAC/D,SAAUA,OAE1BrB,EAAAA,EAAAA,MAACqF,EAAY,CAAApF,SAAA,CAAEoB,EAAS,WAG1BrB,EAAAA,EAAAA,MAACsF,EAAM,CAAArF,SAAA,EACLD,EAAAA,EAAAA,MAACuF,EAAQ,CAAAtF,SAAA,EACPC,EAAAA,EAAAA,KAACsF,EAAa,CAAAvF,SAAC,sBACfC,EAAAA,EAAAA,KAACuF,EAAa,CAAAxF,SAAEsG,GAAWpJ,EAAKsG,gBAGlCzD,EAAAA,EAAAA,MAAC0F,EAAO,CAAAzF,SAAA,EACNC,EAAAA,EAAAA,KAACyF,EAAY,CAACxF,QAASA,IAAMwG,EAASxJ,EAAK+D,IAAIjB,SAAC,gBAGhDC,EAAAA,EAAAA,KAAC0F,EAAY,CAACzF,QAASA,IAAMyG,EAASzJ,EAAK+D,IAAIjB,SAAC,+BAK/C,EClTL4G,GAAgBnL,EAAAA,GAAOC,GAAG;;;;;;;;EAU1BmL,GAAiBpL,EAAAA,GAAOC,GAAG;;;;;;;;;EAoCjC,GAzBiBS,IAA4C,IAA3C,MAAEC,EAAK,aAAE0K,EAAY,aAAEC,GAAc5K,EACrD,OAAKC,GAA0B,IAAjBA,EAAMW,QAWlBkD,EAAAA,EAAAA,KAAC2G,GAAa,CAAA5G,SACX5D,EAAMa,KAAIC,IACT+C,EAAAA,EAAAA,KAAC+G,GAAQ,CAEP9J,KAAMA,EACNwJ,SAAUI,EACVH,SAAUI,GAHL7J,EAAK+D,SAZdhB,EAAAA,EAAAA,KAAC2G,GAAa,CAAA5G,UACZC,EAAAA,EAAAA,KAAC4G,GAAc,CAAA7G,SAAC,uDAiBJ,EC1CdiH,GAAYxL,EAAAA,GAAOC,GAAG;;;;;;;EAStBH,GAAQE,EAAAA,GAAOuH,EAAE;;;;;;;;;;;;;;;;;;;EAqBjBkE,GAAezL,EAAAA,GAAOC,GAAG;;EAIzByL,GAAe1L,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgBzB0L,GAAe3L,EAAAA,GAAOC,GAAG;;;EAKzB2L,GAAgB5L,EAAAA,GAAOC,GAAG;;;EAK1B4L,GAAkB7L,EAAAA,GAAOC,GAAG;;;EAK5B6L,GAAe9L,EAAAA,GAAOM,MAAM;;;;;;;;;;;;;;aAcrBC,GAASA,EAAMuC,OAAS;;;EAK/BiJ,GAAU/L,EAAAA,GAAOgM,IAAI;;;;EAMrBrE,GAAQ3H,EAAAA,GAAO4H,KAAK;;;;;;;;;;;;;;;;;EAmBpBqE,GAASjM,EAAAA,GAAOM,MAAM;sBACNC,GAA2B,YAAlBA,EAAM2L,QAAwB,uBAAyB;WAC3E3L,GAA2B,YAAlBA,EAAM2L,QAAwB,QAAU;YAChD3L,GAA2B,YAAlBA,EAAM2L,QAAwB,OAAS;aAC/C3L,GAA2B,YAAlBA,EAAM2L,QAAwB,YAAc;;;;;;;;;;;;wBAY1C3L,GAA2B,YAAlBA,EAAM2L,QAAwB,sBAAwB;iBACtE3L,GAA2B,YAAlBA,EAAM2L,QAAwB,mBAAqB;kBAC3D3L,GAA2B,YAAlBA,EAAM2L,QAAwB,oCAAsC;;EAIzFC,IAAanM,EAAAA,EAAAA,IAAOiM,GAAO;;EAI3BG,GAAiBpM,EAAAA,GAAOC,GAAG;;;;;;;;;;;EAa3BoM,GAAgBrM,EAAAA,GAAOC,GAAG;;;;;sBAKVM,GAAwB,YAAfA,EAAMsI,KAAqB,0BAA4B;WAC3EtI,GAAwB,YAAfA,EAAMsI,KAAqB,yBAA2B;;;;EAMpEyD,GAAWtM,EAAAA,GAAOC,GAAG;;;;;EAOrBsM,IAAYvM,EAAAA,EAAAA,IAAO2H,GAAM;;EAIzB6E,GAAexM,EAAAA,GAAOC,GAAG;;;;;EA6M/B,GAtMwBS,IAAuC,IAAtC,WAAE2H,EAAU,iBAAEoE,GAAkB/L,EACvD,MAAOgM,EAAkBC,IAAuB7L,EAAAA,EAAAA,UAASuH,GAAc,KAChEuE,EAAiBC,IAAsB/L,EAAAA,EAAAA,UAAS,KAChDgM,EAAkBC,IAAuBjM,EAAAA,EAAAA,UAAS,KAClDkM,EAAcC,IAAmBnM,EAAAA,EAAAA,WAAU,IAC3CoM,EAAUC,IAAerM,EAAAA,EAAAA,UAAS,KAClCsM,EAAWC,IAAgBvM,EAAAA,EAAAA,UAAS,KACpCwM,EAAYC,IAAiBzM,EAAAA,EAAAA,WAAS,IACtC0M,EAAUC,IAAe3M,EAAAA,EAAAA,WAAS,IAClC4M,EAAeC,IAAoB7M,EAAAA,EAAAA,UAAS,OAEnDO,EAAAA,EAAAA,YAAU,KACRsL,EAAoBtE,GAAc,GAAG,GACpC,CAACA,IAEJ,MAwBMuF,EAAiBA,KACrB,IAAKV,EAASvE,SAAWyE,EAAUzE,OACjC,OAGF,MAAMkF,EAAoB,IAAInB,GAC9BmB,EAAkBb,GAAgB,CAChCtL,KAAMwL,EAASvE,OACfxF,MAAOiK,EAAUzE,QAGnBgE,EAAoBkB,GACpBZ,GAAiB,GACjBM,GAAc,EAAK,EAGfO,EAAmBA,KACvBb,GAAiB,EAAE,EA0CrB,OACE3I,EAAAA,EAAAA,MAACkH,GAAS,CAAAjH,SAAA,EACRC,EAAAA,EAAAA,KAAC1E,GAAK,CAAAyE,SAAC,6BAEPD,EAAAA,EAAAA,MAACyH,GAAO,CAAC/D,SAvFc3C,IAGzB,GAFAA,EAAEqD,kBAEGkE,EAAgBjE,SAAWmE,EAAiBnE,OAC/C,OAGF,MAAMoF,EAAc,CAClBrM,KAAMkL,EAAgBjE,OACtBxF,MAAO2J,EAAiBnE,QAG1BgE,EAAoB,IAAID,EAAkBqB,IAC1ClB,EAAmB,IACnBE,EAAoB,IACpBQ,GAAc,EAAK,EAwEoBhJ,SAAA,EACnCC,EAAAA,EAAAA,KAACmD,GAAK,CACJkB,KAAK,OACLmF,YAAY,yBACZ7K,MAAOyJ,EACPlH,SAAWL,GAAMwH,EAAmBxH,EAAEC,OAAOnC,OAC7CuE,UAAQ,KAEVlD,EAAAA,EAAAA,KAACmD,GAAK,CACJkB,KAAK,OACLmF,YAAY,qBACZ7K,MAAO2J,EACPpH,SAAWL,GAAM0H,EAAoB1H,EAAEC,OAAOnC,OAC9CuE,UAAQ,KAEVpD,EAAAA,EAAAA,MAAC2H,GAAM,CAACpD,KAAK,SAASqD,QAAQ,UAAS3H,SAAA,EACrCC,EAAAA,EAAAA,KAACyJ,EAAAA,IAAM,IAAG,kBAIdzJ,EAAAA,EAAAA,KAACiH,GAAY,CAAAlH,SACVmI,EAAiBpL,OAAS,EACzBoL,EAAiBlL,KAAI,CAACiE,EAAUyI,KAC9B1J,EAAAA,EAAAA,KAACkH,GAAY,CAAAnH,SACVyI,IAAiBkB,GAChB5J,EAAAA,EAAAA,MAACgI,GAAQ,CAAA/H,SAAA,EACPC,EAAAA,EAAAA,KAAC+H,GAAS,CACR1D,KAAK,OACL1F,MAAO+J,EACPxH,SAAWL,GAAM8H,EAAY9H,EAAEC,OAAOnC,OACtCuE,UAAQ,KAEVlD,EAAAA,EAAAA,KAAC+H,GAAS,CACR1D,KAAK,OACL1F,MAAOiK,EACP1H,SAAWL,GAAMgI,EAAahI,EAAEC,OAAOnC,OACvCuE,UAAQ,KAEVlD,EAAAA,EAAAA,KAACsH,GAAY,CAACrH,QAASmJ,EAAgB9K,MAAM,yBAAwByB,UACnEC,EAAAA,EAAAA,KAAC2J,EAAAA,IAAO,OAEV3J,EAAAA,EAAAA,KAACsH,GAAY,CAACrH,QAASqJ,EAAkBhL,MAAM,sBAAqByB,UAClEC,EAAAA,EAAAA,KAAC4J,EAAAA,IAAG,UAIR9J,EAAAA,EAAAA,MAAA+J,EAAAA,SAAA,CAAA9J,SAAA,EACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACmH,GAAY,CAAApH,SAAEkB,EAAS/D,QACxB4C,EAAAA,EAAAA,MAACsH,GAAa,CAAArH,SAAA,CAAC,UAAQkB,EAAStC,aAElCmB,EAAAA,EAAAA,MAACuH,GAAe,CAAAtH,SAAA,EACdC,EAAAA,EAAAA,KAACsH,GAAY,CAACrH,QAASA,IAzHbyJ,KAC1BjB,EAAgBiB,GAChBf,EAAYT,EAAiBwB,GAAOxM,MACpC2L,EAAaX,EAAiBwB,GAAO/K,MAAM,EAsHEmL,CAAmBJ,GAAQpL,MAAM,uBAAsByB,UAClFC,EAAAA,EAAAA,KAAC+J,EAAAA,IAAO,OAEV/J,EAAAA,EAAAA,KAACsH,GAAY,CAACrH,QAASA,IAlGXyJ,KAC5B,GAAIM,OAAOC,QAAQ,iEAAyD,CAC1E,MAAMZ,EAAoBnB,EAAiBgC,QAAO,CAACC,EAAGC,IAAMA,IAAMV,IAClEvB,EAAoBkB,GACpBN,GAAc,EAChB,GA6F6CsB,CAAqBX,GAAQpL,MAAM,sBAAqByB,UACnFC,EAAAA,EAAAA,KAACsK,EAAAA,IAAQ,aAjCAZ,MAyCrB1J,EAAAA,EAAAA,KAACgI,GAAY,CAAAjI,SAAC,6DAIjB+I,IACC9I,EAAAA,EAAAA,KAAC2H,GAAU,CACT1H,QAzGkBuB,UACxB,IACEyH,GAAY,GACZE,EAAiB,YAGKlB,EAAiBC,IAGrCa,GAAc,GACdI,EAAiB,CACf9E,KAAM,UACNkG,KAAM,6EAGRpB,EAAiB,CACf9E,KAAM,QACNkG,KAAM,sFAGZ,CAAE,MAAO1I,GACPe,QAAQf,MAAM,kCAAgCA,GAC9CsH,EAAiB,CACf9E,KAAM,QACNkG,KAAM,oCAAmC1I,EAAM2I,SAAW,sBAE9D,CAAC,QACCvB,GAAY,EACd,GA8EMvB,QAAQ,UACR+C,SAAUzB,EAASjJ,SAElBiJ,GACClJ,EAAAA,EAAAA,MAAA+J,EAAAA,SAAA,CAAA9J,SAAA,EACEC,EAAAA,EAAAA,KAAC4H,GAAc,CAAA7H,UAACC,EAAAA,EAAAA,KAAC0K,EAAAA,IAAQ,MAAoB,oBAG/C5K,EAAAA,EAAAA,MAAA+J,EAAAA,SAAA,CAAA9J,SAAA,EACEC,EAAAA,EAAAA,KAAC2K,EAAAA,IAAM,IAAG,wBAMjBzB,IACCpJ,EAAAA,EAAAA,MAAC+H,GAAa,CAACxD,KAAM6E,EAAc7E,KAAKtE,SAAA,CACd,YAAvBmJ,EAAc7E,MAAqBrE,EAAAA,EAAAA,KAAC2J,EAAAA,IAAO,KAAM3J,EAAAA,EAAAA,KAAC4J,EAAAA,IAAG,IACrDV,EAAcqB,UAGT,E,0BC7WhB,MAAMK,GAA0BpP,EAAAA,GAAOC,GAAG;;;EAKpCoP,GAAuBrP,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BjCqP,GAAetP,EAAAA,GAAOC,GAAG;;;;;;EAQzBsP,GAAcvP,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;EAexBuP,GAAexP,EAAAA,GAAOG,EAAE;;;;;;;;;;;;;;;;;;;EAqBxBsP,GAAgBzP,EAAAA,GAAOM,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0UnC,GAzSuBoP,KACrB,MAAO/O,EAAOgP,IAAY7O,EAAAA,EAAAA,UAAS,KAC5B8O,EAAUC,IAAe/O,EAAAA,EAAAA,WAAS,IAClCoE,EAAS4K,IAAchP,EAAAA,EAAAA,UAAS,CACrC2E,SAAU,MACVE,SAAU,MACVC,OAAQ,UAEHmK,EAAeC,IAAoBlP,EAAAA,EAAAA,UAAS,KAC5CmP,EAASC,IAAcpP,EAAAA,EAAAA,WAAS,IAChCqP,EAAqBC,IAA0BtP,EAAAA,EAAAA,WAAS,IACxDuH,EAAYC,IAAiBxH,EAAAA,EAAAA,UAAS,KAG7CO,EAAAA,EAAAA,YAAU,KACUgP,MAChB,IACEH,GAAW,GAEX,MAAMI,GAAaC,EAAAA,GAAAA,qBACnBnJ,QAAQoJ,IAAI,4DAA6DF,GACzEX,EAASW,GAAc,GACzB,CAAE,MAAOjK,GACPe,QAAQf,MAAM,qCAAsCA,EACtD,CAAC,QACC6J,GAAW,EACb,GAGFG,GAGA,MAAMI,EAAoBC,IACxB,MAAM,OAAEC,GAAWD,EACnB,GAAIC,EAAOC,SAAWD,EAAOE,QAAUF,EAAOE,OAAOC,SAAS,mBAAoB,CAChF1J,QAAQoJ,IAAI,2DAEZ,MAAMO,GAAaR,EAAAA,GAAAA,qBACfQ,GAAcA,EAAWzP,OAAS,IACpC8F,QAAQoJ,IAAI,0DAAwDO,EAAWzP,QAC/EqO,EAASoB,IACTC,EAAAA,GAAAA,IAAS,kCAEb,GAMF,OAHAxC,OAAOyC,iBAAiB,cAAeR,GAGhC,KACLjC,OAAO0C,oBAAoB,cAAeT,EAAiB,CAC5D,GACA,KAGHpP,EAAAA,EAAAA,YAAU,KACe2E,WACrB,IACE,MAAMmL,QAAwBpL,IAC9BqB,QAAQoJ,IAAI,0BAAwBW,GACpC7I,EAAc6I,GAAmB,GACnC,CAAE,MAAO9K,GACPe,QAAQf,MAAM,iCAA+BA,EAC/C,GAGFkC,EAAgB,GACf,KAGHlH,EAAAA,EAAAA,YAAU,KACR,IAAI+P,EAAS,IAAIzQ,GAGQ,QAArBuE,EAAQO,WACV2L,EAASA,EAAO1C,QAAOjN,GAAQA,EAAKgE,WAAaP,EAAQO,YAIlC,QAArBP,EAAQS,WACVyL,EAASA,EAAO1C,QAAOjN,IACrB,MAAMkE,EAAW5D,KAAKsC,MAAO5C,EAAKG,eAAiBH,EAAKK,cAAiB,KAEzE,OAAQoD,EAAQS,UACd,IAAK,SACH,OAAOA,EAAW,GACpB,IAAK,SACH,OAAOA,GAAY,IAAMA,EAAW,GACtC,IAAK,SACH,OAAOA,GAAY,IAAMA,EAAW,GACtC,IAAK,SACH,OAAOA,GAAY,IAAMA,EAAW,IACtC,IAAK,YACH,OAAOA,GAAY,IACrB,QACE,OAAO,EACX,KAKJyL,EAAOC,MAAK,CAACC,EAAGC,KACd,OAAQrM,EAAQU,QACd,IAAK,OACH,OAAO0L,EAAE5P,KAAK8P,cAAcD,EAAE7P,MAChC,IAAK,WAEH,OAAK4P,EAAEvJ,SACFwJ,EAAExJ,SACA,IAAIgD,KAAKuG,EAAEvJ,UAAY,IAAIgD,KAAKwG,EAAExJ,WADhB,EADD,EAG1B,IAAK,WACH,MAAM0J,EAAaH,EAAE1P,eAAiB0P,EAAExP,cAAiB,IAEzD,OADmByP,EAAE3P,eAAiB2P,EAAEzP,cAAiB,IACtC2P,EACrB,IAAK,SACH,OAAOF,EAAEzP,cAAgBwP,EAAExP,cAC7B,QACE,OAAO,EACX,IAGFkO,EAAiBoB,EAAO,GACvB,CAACzQ,EAAOuE,IA8GX,OACEZ,EAAAA,EAAAA,MAAC8K,GAAuB,CAAA7K,SAAA,EACtBD,EAAAA,EAAAA,MAAC+K,GAAoB,CAAA9K,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qEAILC,EAAAA,EAAAA,KAACkN,EAAS,CAAC/Q,MAAOA,KAGlB2D,EAAAA,EAAAA,MAACgL,GAAY,CAAA/K,SAAA,EACXD,EAAAA,EAAAA,MAACiL,GAAW,CAAAhL,SAAA,EACVC,EAAAA,EAAAA,KAACgL,GAAY,CAAAjL,SAAC,2BACdD,EAAAA,EAAAA,MAAA,OAAKhB,MAAO,CAAEqO,QAAS,OAAQC,IAAK,QAASrN,SAAA,EAC3CC,EAAAA,EAAAA,KAACiL,GAAa,CACZhL,QAASA,KACP2L,GAAwBD,GACxBN,GAAY,EAAM,EAEpBvM,MAAO,CACLjB,gBAAiB8N,EAAsB,uBAAyB,qBAChE0B,UAAW1B,EAAsB,oCAAsC,QACvE5L,SAED4L,EAAsB,uBAAsB,6BAE/C3L,EAAAA,EAAAA,KAACiL,GAAa,CACZhL,QAASA,KACPoL,GAAaD,GACbQ,GAAuB,EAAM,EAC7B7L,SAEDqL,EAAW,WAAa,yBAM9BO,IACC3L,EAAAA,EAAAA,KAACsN,GAAe,CACdzJ,WAAYA,EACZoE,iBA9DmBzG,UAC3B,IAEE,MAAM4K,OL/EgC5K,WAC1C,IAEEa,aAAaC,QAAQjB,EAAgCkB,KAAKC,UAAUqB,IAGpE,MAAQjG,MAAM,KAAE6D,UAAiBC,EAAAA,EAASC,KAAKC,UAE/C,GAAIH,EAAM,CAER,MAAQ7D,KAAM2P,SAA6B7L,EAAAA,EACxCI,KAAK,cACLrB,OAAO,KACPsB,GAAG,OAAQ,kBACXA,GAAG,UAAWN,EAAKT,IAGhBwM,EAAsB,CAAC,EACzBD,GACFA,EAAmBE,SAAQrL,IACzBoL,EAAoBpL,EAAIzD,OAASyD,CAAG,IAKxC,IAAK,MAAMnB,KAAY4C,EACjB2J,EAAoBvM,EAAStC,QAE3B6O,EAAoBvM,EAAStC,OAAOzB,OAAS+D,EAAS/D,YAClDwE,EAAAA,EACHI,KAAK,cACL4L,OAAO,CAAExQ,KAAM+D,EAAS/D,KAAMyQ,WAAY,IAAIpH,OAC9CxE,GAAG,KAAMyL,EAAoBvM,EAAStC,OAAOqC,WAI3CwM,EAAoBvM,EAAStC,cAG9B+C,EAAAA,EACHI,KAAK,cACL8L,OAAO,CAAC,CACPC,QAASpM,EAAKT,GACdqD,KAAM,iBACNnH,KAAM+D,EAAS/D,KACfyB,MAAOsC,EAAStC,SAMxB,MAAMmP,EAAqBC,OAAOC,OAAOR,GACzC,GAAIM,EAAmBhR,OAAS,EAAG,CACjC,MAAMmR,EAAcH,EAAmB9Q,KAAIoF,GAAOA,EAAIpB,WAChDU,EAAAA,EACHI,KAAK,cACLoM,SACAC,GAAG,KAAMF,EACd,CACF,CAEA,OAAO,CACT,CAAE,MAAOpM,GAEP,OADAe,QAAQf,MAAM,2DAAyDA,IAChE,CACT,GKc0BuM,CAA6B/E,GAEnD,OAAI+C,GACFxJ,QAAQoJ,IAAI,yCAAuC3C,GAEnDvF,EAAcuF,IACP,IAEPzG,QAAQf,MAAM,6CACP,EAEX,CAAE,MAAOA,GAEP,OADAe,QAAQf,MAAM,kCAAgCA,IACvC,CACT,KAkDKuJ,IACCpL,EAAAA,EAAAA,KAACqO,EAAQ,CAAC7K,SA5JK8K,IACrB,IAEE,MAAMC,GAAYC,EAAAA,GAAAA,IAAiBF,GAE/BC,GACF3L,QAAQoJ,IAAI,0CAA2CuC,GAEvDpD,GAASlH,GAAQ,IAAIA,EAAMsK,KAC3BlD,GAAY,KAEZzI,QAAQf,MAAM,yCACd4M,MAAM,uEAEV,CAAE,MAAO5M,GACPe,QAAQf,MAAM,oCAAqCA,GACnD4M,MAAM,iEACR,GA2IyChL,SAAUA,IAAM4H,GAAY,MAIjErL,EAAAA,EAAAA,KAAC0O,EAAW,CAAChO,QAASA,EAASC,eAAgB2K,KAG/CtL,EAAAA,EAAAA,KAAC2O,GAAQ,CACPxS,MAAOoP,EACP1E,aAjJkB+H,IACxB,MAAMxI,EAASyI,OAAO,+BAEtB,GAAIzI,IAAW0I,MAAM1I,IAAWhC,WAAWgC,GAAU,EACnD,IAEE,MAAM2I,EAAc5S,EAAM6S,MAAK/R,GAAQA,EAAK+D,KAAO4N,IAEnD,IAAKG,EAEH,YADAnM,QAAQf,MAAM,wCAKhB,MAAMoN,EAAYF,EAAY3R,eAAiBgH,WAAWgC,GAGpD8I,GAAcC,EAAAA,GAAAA,IAAoBP,EAAQ,IAC3CG,EACH3R,eAAgB6R,IAGdC,GACFtM,QAAQoJ,IAAI,6CAA8CkD,GAE1D/D,GAASlH,GAAQA,EAAKjH,KAAIC,GACpBA,EAAK+D,KAAO4N,EACP,IACF3R,EACHG,eAAgB6R,GAGbhS,QAGT2F,QAAQf,MAAM,4CACd4M,MAAM,0EAEV,CAAE,MAAO5M,GACPe,QAAQf,MAAM,uCAAwCA,GACtD4M,MAAM,oEACR,CACF,EAwGM3H,aArGkB8H,IACxB,MAAMQ,EAAejT,EAAM6S,MAAK/R,GAAQA,EAAK+D,KAAO4N,IAEpD,GAAI5E,OAAOC,QAAQ,gDAAqD,OAAZmF,QAAY,IAAZA,OAAY,EAAZA,EAAclS,OAAQ,iBAChF,KAEkBmS,EAAAA,GAAAA,IAAoBT,IAGlChM,QAAQoJ,IAAI,2CAEZb,GAASlH,GAAQA,EAAKiG,QAAOjN,GAAQA,EAAK+D,KAAO4N,QAEjDhM,QAAQf,MAAM,0CACd4M,MAAM,wEAEV,CAAE,MAAO5M,GACPe,QAAQf,MAAM,qCAAsCA,GACpD4M,MAAM,kEACR,CACF,SAoF0B,C,mXCxZ9B,MAAMa,EAAiB,0BAOVC,EAAWA,CAACC,EAAK5R,KAC5B,IACE,MAAM6R,EAAU,GAAGH,IAAiBE,IAGpC,OAFAnN,aAAaC,QAAQmN,EAASlN,KAAKC,UAAU5E,IAC7CgF,QAAQoJ,IAAI,6CAA6CwD,KAAQ5R,IAC1D,CACT,CAAE,MAAOiE,GAEP,OADAe,QAAQf,MAAM,oDAAoD2N,KAAQ3N,IACnE,CACT,GASW6N,EAAU,SAACF,GAA8B,IAAzBG,EAAYC,UAAA9S,OAAA,QAAA+S,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC1C,IACE,MAAMH,EAAU,GAAGH,IAAiBE,IAC9BM,EAAazN,aAAaK,QAAQ+M,GAExC,IAAKK,EACH,OAAOH,EAGT,MAAMI,EAAaxN,KAAKI,MAAMmN,GAE9B,OADAlN,QAAQoJ,IAAI,+CAA+CwD,KAAQO,GAC5DA,CACT,CAAE,MAAOlO,GAEP,OADAe,QAAQf,MAAM,oDAAoD2N,KAAQ3N,GACnE8N,CACT,CACF,EAmBMK,EAAaA,IAAM,SAASzJ,KAAK0J,SAAS1S,KAAK2S,SAASC,SAAS,IAAIC,OAAO,EAAG,KAQxEC,EAAoBC,GACxBf,EAAS,eAAgBe,GAOrBC,EAAkBA,IACtBb,EAAQ,eAAgB,IAOpBc,EAAkBC,IAC7B,IAEE,MAAMC,EAAoB,IACrBD,EACHzP,GAAIyP,EAAYzP,IAAMgP,KAOlBW,EAAsB,CAACD,KAHDH,KAQ5B,OAFAF,EAAiBM,GAEVD,CACT,CAAE,MAAO7O,GAEP,OADAe,QAAQf,MAAM,mCAAiCA,GACxC,IACT,GAQW+O,EAAoBA,CAAC5P,EAAI6P,KACpC,IAEE,MAAMC,EAAsBP,IAGtB7G,EAAQoH,EAAoBC,WAAUC,GAAKA,EAAEhQ,KAAOA,IAE1D,IAAe,IAAX0I,EAEF,OADA9G,QAAQf,MAAM,8CAAwCb,MAC/C,EAIT,MAAM2P,EAAsB,IAAIG,GAShC,OARAH,EAAoBjH,GAAS,IACxBiH,EAAoBjH,MACpBmH,GAILR,EAAiBM,GAEVA,EAAoBjH,EAC7B,CAAE,MAAO7H,GAEP,OADAe,QAAQf,MAAM,sCAAoCA,GAC3C,IACT,GAOWoP,EAAqBjQ,IAChC,IAEE,MAAM8P,EAAsBP,IAGtBI,EAAsBG,EAAoB5G,QAAO8G,GAAKA,EAAEhQ,KAAOA,IAGrE,OAAI2P,EAAoB7T,SAAWgU,EAAoBhU,QACrD8F,QAAQf,MAAM,8CAAwCb,MAC/C,IAITqP,EAAiBM,IAEV,EACT,CAAE,MAAO9O,GAEP,OADAe,QAAQf,MAAM,oCAAkCA,IACzC,CACT,GASWqP,EAAaC,GACjB5B,EAAS,QAAS4B,GAOdC,EAAWA,IACf1B,EAAQ,QAAS,IAOb2B,EAAWC,IACtB,IAEE,MAAMC,EAAa,IACdD,EACHtQ,GAAIsQ,EAAKtQ,IAAMgP,IACfwB,WAAYF,EAAKE,aAAc,IAAIjL,MAAOkL,cAAcC,MAAM,KAAK,IAO/DC,EAAe,IAHAP,IAGkBG,GAKvC,OAFAL,EAAUS,GAEHJ,CACT,CAAE,MAAO1P,GAEP,OADAe,QAAQf,MAAM,0BAA2BA,GAClC,IACT,GAQW+P,EAAaA,CAAC5Q,EAAI6P,KAC7B,IAEE,MAAMgB,EAAeT,IAGf1H,EAAQmI,EAAad,WAAUC,GAAKA,EAAEhQ,KAAOA,IAEnD,IAAe,IAAX0I,EAEF,OADA9G,QAAQf,MAAM,qCAAkCb,MACzC,EAIT,MAAM2Q,EAAe,IAAIE,GASzB,OARAF,EAAajI,GAAS,IACjBiI,EAAajI,MACbmH,GAILK,EAAUS,GAEHA,EAAajI,EACtB,CAAE,MAAO7H,GAEP,OADAe,QAAQf,MAAM,6BAA8BA,GACrC,IACT,GAOWiQ,EAAc9Q,IACzB,IAEE,MAAM6Q,EAAeT,IAGfO,EAAeE,EAAa3H,QAAO8G,GAAKA,EAAEhQ,KAAOA,IAGvD,OAAI2Q,EAAa7U,SAAW+U,EAAa/U,QACvC8F,QAAQf,MAAM,qCAAkCb,MACzC,IAITkQ,EAAUS,IAEH,EACT,CAAE,MAAO9P,GAEP,OADAe,QAAQf,MAAM,2BAA4BA,IACnC,CACT,GAQWkQ,EAAsB/Q,IACjC,IAEE,MAAM6Q,EAAeT,IAGf1H,EAAQmI,EAAad,WAAUC,GAAKA,EAAEhQ,KAAOA,IAEnD,IAAe,IAAX0I,EAEF,OADA9G,QAAQf,MAAM,qCAAkCb,MACzC,EAIT,MAAM2Q,EAAe,IAAIE,GASzB,OARAF,EAAajI,GAAS,IACjBiI,EAAajI,GAChBsI,WAAYL,EAAajI,GAAOsI,WAIlCd,EAAUS,GAEHA,EAAajI,EACtB,CAAE,MAAO7H,GAEP,OADAe,QAAQf,MAAM,oCAAqCA,GAC5C,IACT,GASWoQ,EAAmBC,GACvB3C,EAAS,cAAe2C,GAOpBC,EAAiBA,IACrBzC,EAAQ,cAAe,IAOnB0C,EAAiBC,IAC5B,IAEE,MAAMC,EAAmB,IACpBD,EACHrR,GAAIqR,EAAWrR,IAAMgP,KAOjBuC,EAAqB,IAHAJ,IAGwBG,GAKnD,OAFAL,EAAgBM,GAETD,CACT,CAAE,MAAOzQ,GAEP,OADAe,QAAQf,MAAM,iCAA+BA,GACtC,IACT,GAQW2Q,EAAmBA,CAACxR,EAAI6P,KACnC,IAEE,MAAM4B,EAAqBN,IAGrBzI,EAAQ+I,EAAmB1B,WAAU3G,GAAKA,EAAEpJ,KAAOA,IAEzD,IAAe,IAAX0I,EAEF,OADA9G,QAAQf,MAAM,4CAAsCb,MAC7C,EAIT,MAAMuR,EAAqB,IAAIE,GAS/B,OARAF,EAAmB7I,GAAS,IACvB6I,EAAmB7I,MACnBmH,GAILoB,EAAgBM,GAETA,EAAmB7I,EAC5B,CAAE,MAAO7H,GAEP,OADAe,QAAQf,MAAM,oCAAkCA,GACzC,IACT,GAOW6Q,EAAoB1R,IAC/B,IAEE,MAAMyR,EAAqBN,IAGrBI,EAAqBE,EAAmBvI,QAAOE,GAAKA,EAAEpJ,KAAOA,IAGnE,OAAIuR,EAAmBzV,SAAW2V,EAAmB3V,QACnD8F,QAAQf,MAAM,4CAAsCb,MAC7C,IAITiR,EAAgBM,IAET,EACT,CAAE,MAAO1Q,GAEP,OADAe,QAAQf,MAAM,kCAAgCA,IACvC,CACT,GASW8Q,EAAsBxW,GAC1BoT,EAAS,kBAAmBpT,GAOxB4P,EAAoBA,IACxB2D,EAAQ,kBAAmB,IAOvBlB,EAAoBvR,IAC/B,IAEE,MAAM2V,EAAa,IACd3V,EACH+D,GAAI/D,EAAK+D,IAAMgP,KAOX6C,EAAe,IAHA9G,IAGkB6G,GAKvC,OAFAD,EAAmBE,GAEZD,CACT,CAAE,MAAO/Q,GAEP,OADAe,QAAQf,MAAM,oCAAqCA,GAC5C,IACT,GAQWsN,EAAsBA,CAACnO,EAAI6P,KACtC,IAEE,MAAMiC,EAAe/G,IAGfrC,EAAQoJ,EAAa/B,WAAUgC,GAAKA,EAAE/R,KAAOA,IAEnD,IAAe,IAAX0I,EAEF,OADA9G,QAAQf,MAAM,+CAA4Cb,MACnD,EAIT,MAAM6R,EAAe,IAAIC,GASzB,OARAD,EAAanJ,GAAS,IACjBmJ,EAAanJ,MACbmH,GAIL8B,EAAmBE,GAEZA,EAAanJ,EACtB,CAAE,MAAO7H,GAEP,OADAe,QAAQf,MAAM,uCAAwCA,GAC/C,IACT,GAOWwN,EAAuBrO,IAClC,IAEE,MAAM8R,EAAe/G,IAGf8G,EAAeC,EAAa5I,QAAO6I,GAAKA,EAAE/R,KAAOA,IAGvD,OAAI6R,EAAa/V,SAAWgW,EAAahW,QACvC8F,QAAQf,MAAM,+CAA4Cb,MACnD,IAIT2R,EAAmBE,IAEZ,EACT,CAAE,MAAOhR,GAEP,OADAe,QAAQf,MAAM,qCAAsCA,IAC7C,CACT,GASWmR,EAAcC,GAClB1D,EAAS,SAAU0D,GAOfC,EAAYA,IAChBxD,EAAQ,SAAU,IAOdyD,EAAYjH,IACvB,IAEE,MAAMkH,EAAc,IACflH,EACHlL,GAAIkL,EAAMlL,IAAMgP,KAOZqD,EAAgB,IAHAH,IAGmBE,GAKzC,OAFAJ,EAAWK,GAEJD,CACT,CAAE,MAAOvR,GAEP,OADAe,QAAQf,MAAM,2BAA4BA,GACnC,IACT,GAQWyR,EAAcA,CAACtS,EAAI6P,KAC9B,IAEE,MAAM0C,EAAgBL,IAGhBxJ,EAAQ6J,EAAcxC,WAAUlQ,GAAKA,EAAEG,KAAOA,IAEpD,IAAe,IAAX0I,EAEF,OADA9G,QAAQf,MAAM,sCAAmCb,MAC1C,EAIT,MAAMqS,EAAgB,IAAIE,GAS1B,OARAF,EAAc3J,GAAS,IAClB2J,EAAc3J,MACdmH,GAILmC,EAAWK,GAEJA,EAAc3J,EACvB,CAAE,MAAO7H,GAEP,OADAe,QAAQf,MAAM,8BAA+BA,GACtC,IACT,GAOW2R,EAAexS,IAC1B,IAEE,MAAMuS,EAAgBL,IAGhBG,EAAgBE,EAAcrJ,QAAOrJ,GAAKA,EAAEG,KAAOA,IAGzD,OAAIqS,EAAcvW,SAAWyW,EAAczW,QACzC8F,QAAQf,MAAM,sCAAmCb,MAC1C,IAITgS,EAAWK,IAEJ,EACT,CAAE,MAAOxR,GAEP,OADAe,QAAQf,MAAM,4BAA6BA,IACpC,CACT,E","sources":["components/FinancialGoals/GoalChart.js","components/FinancialGoals/GoalFilters.js","services/categoryService.js","components/FinancialGoals/GoalForm.js","components/FinancialGoals/GoalCard.js","components/FinancialGoals/GoalList.js","components/FinancialGoals/CategoryManager.js","pages/FinancialGoals.js","services/simpleStorage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\nimport useTheme from '../../hooks/useTheme';\n\n// Registrar componentes de Chart.js\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\n\nconst ChartContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n  transition: transform var(--transition-speed), box-shadow var(--transition-speed);\n  overflow: hidden;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n`;\n\nconst ChartTitle = styled.h2`\n  margin-top: 0;\n  margin-bottom: 24px;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-align: center;\n`;\n\nconst ChartOptions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 24px;\n  gap: 12px;\n`;\n\nconst ChartTypeButton = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--bg-medium)'};\n  color: ${props => props.active ? 'white' : 'var(--text-medium)'};\n  border: none;\n  padding: 10px 20px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: ${props => props.active ? '0 4px 8px rgba(99, 102, 241, 0.3)' : '0 2px 4px rgba(0, 0, 0, 0.05)'};\n\n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--bg-light)'};\n    transform: translateY(-2px);\n  }\n`;\n\nconst ChartWrapper = styled.div`\n  height: 350px;\n  width: 100%;\n  position: relative;\n  padding: 10px;\n`;\n\nconst GoalChart = ({ goals }) => {\n  const [chartType, setChartType] = useState('bar');\n  const { darkMode } = useTheme();\n  const [chartData, setChartData] = useState(null);\n  const [chartOptions, setChartOptions] = useState(null);\n\n  useEffect(() => {\n    if (!goals || goals.length === 0) return;\n\n    const labels = goals.map(goal => goal.name);\n    const currentAmounts = goals.map(goal => goal.current_amount);\n    const targetAmounts = goals.map(goal => goal.target_amount);\n    const remainingAmounts = goals.map(goal => Math.max(0, goal.target_amount - goal.current_amount));\n\n    // Colores para las barras/sectores\n    const backgroundColors = [\n      'rgba(99, 102, 241, 0.7)',\n      'rgba(239, 68, 68, 0.7)',\n      'rgba(245, 158, 11, 0.7)',\n      'rgba(16, 185, 129, 0.7)',\n      'rgba(59, 130, 246, 0.7)',\n      'rgba(168, 85, 247, 0.7)',\n      'rgba(236, 72, 153, 0.7)'\n    ];\n\n    if (chartType === 'bar') {\n      setChartData({\n        labels,\n        datasets: [\n          {\n            label: 'Monto Actual',\n            data: currentAmounts,\n            backgroundColor: 'rgba(99, 102, 241, 0.7)',\n            borderColor: 'rgba(99, 102, 241, 1)',\n            borderWidth: 1\n          },\n          {\n            label: 'Monto Restante',\n            data: remainingAmounts,\n            backgroundColor: 'rgba(239, 68, 68, 0.7)',\n            borderColor: 'rgba(239, 68, 68, 1)',\n            borderWidth: 1\n          }\n        ]\n      });\n\n      setChartOptions({\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            stacked: true,\n            ticks: {\n              color: darkMode ? '#e5e7eb' : '#4b5563'\n            },\n            grid: {\n              color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n            }\n          },\n          y: {\n            stacked: true,\n            beginAtZero: true,\n            ticks: {\n              callback: function(value) {\n                return new Intl.NumberFormat('es-AR', {\n                  style: 'currency',\n                  currency: 'ARS',\n                  maximumFractionDigits: 0\n                }).format(value);\n              },\n              color: darkMode ? '#e5e7eb' : '#4b5563'\n            },\n            grid: {\n              color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: darkMode ? '#e5e7eb' : '#4b5563'\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: function(context) {\n                return context.dataset.label + ': ' +\n                  new Intl.NumberFormat('es-AR', {\n                    style: 'currency',\n                    currency: 'ARS'\n                  }).format(context.raw);\n              }\n            }\n          }\n        }\n      });\n    } else {\n      setChartData({\n        labels,\n        datasets: [{\n          data: currentAmounts,\n          backgroundColor: backgroundColors,\n          borderColor: backgroundColors.map(color => color.replace('0.7', '1')),\n          borderWidth: 1\n        }]\n      });\n\n      setChartOptions({\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'right',\n            labels: {\n              color: darkMode ? '#e5e7eb' : '#4b5563'\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: function(context) {\n                const goal = goals[context.dataIndex];\n                const percentage = Math.round((goal.current_amount / goal.target_amount) * 100);\n                return context.label + ': ' +\n                  new Intl.NumberFormat('es-AR', {\n                    style: 'currency',\n                    currency: 'ARS'\n                  }).format(context.raw) +\n                  ` (${percentage}% del objetivo)`;\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [goals, chartType, darkMode]);\n\n  if (!goals || goals.length === 0 || !chartData || !chartOptions) {\n    return null;\n  }\n\n  return (\n    <ChartContainer>\n      <ChartTitle>Resumen de Metas Financieras</ChartTitle>\n\n      <ChartOptions>\n        <ChartTypeButton\n          active={chartType === 'bar'}\n          onClick={() => setChartType('bar')}\n        >\n          Barras\n        </ChartTypeButton>\n        <ChartTypeButton\n          active={chartType === 'pie'}\n          onClick={() => setChartType('pie')}\n        >\n          Circular\n        </ChartTypeButton>\n      </ChartOptions>\n\n      <ChartWrapper>\n        {chartType === 'bar' ? (\n          <Bar data={chartData} options={chartOptions} />\n        ) : (\n          <Pie data={chartData} options={chartOptions} />\n        )}\n      </ChartWrapper>\n    </ChartContainer>\n  );\n};\n\nexport default GoalChart;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-bottom: 24px;\n  background-color: var(--bg-medium);\n  padding: 20px;\n  border-radius: var(--border-radius);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.03);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n  }\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n  flex: 1;\n  \n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Label = styled.label`\n  margin-bottom: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: var(--text-medium);\n`;\n\nconst Select = styled.select`\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.08);\n  border-radius: var(--border-radius);\n  background-color: var(--card-bg);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  transition: all var(--transition-speed);\n  cursor: pointer;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n  \n  &:hover {\n    border-color: var(--primary-light);\n  }\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst GoalFilters = ({ filters, onFilterChange }) => {\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    onFilterChange({ ...filters, [name]: value });\n  };\n\n  return (\n    <FiltersContainer>\n      <FilterGroup>\n        <Label htmlFor=\"categoryFilter\">Filtrar por categoría:</Label>\n        <Select\n          id=\"categoryFilter\"\n          name=\"category\"\n          value={filters.category}\n          onChange={handleChange}\n        >\n          <option value=\"all\">Todas las categorías</option>\n          <option value=\"savings\">Ahorros</option>\n          <option value=\"investment\">Inversión</option>\n          <option value=\"purchase\">Compra</option>\n          <option value=\"travel\">Viaje</option>\n          <option value=\"education\">Educación</option>\n          <option value=\"home\">Hogar</option>\n          <option value=\"other\">Otro</option>\n        </Select>\n      </FilterGroup>\n      \n      <FilterGroup>\n        <Label htmlFor=\"progressFilter\">Filtrar por progreso:</Label>\n        <Select\n          id=\"progressFilter\"\n          name=\"progress\"\n          value={filters.progress}\n          onChange={handleChange}\n        >\n          <option value=\"all\">Todos</option>\n          <option value=\"less25\">Menos del 25%</option>\n          <option value=\"25to50\">25% - 50%</option>\n          <option value=\"50to75\">50% - 75%</option>\n          <option value=\"more75\">Más del 75%</option>\n          <option value=\"completed\">Completados</option>\n        </Select>\n      </FilterGroup>\n      \n      <FilterGroup>\n        <Label htmlFor=\"sortBy\">Ordenar por:</Label>\n        <Select\n          id=\"sortBy\"\n          name=\"sortBy\"\n          value={filters.sortBy}\n          onChange={handleChange}\n        >\n          <option value=\"name\">Nombre</option>\n          <option value=\"deadline\">Fecha límite</option>\n          <option value=\"progress\">Progreso</option>\n          <option value=\"amount\">Monto objetivo</option>\n        </Select>\n      </FilterGroup>\n    </FiltersContainer>\n  );\n};\n\nexport default GoalFilters;\n","import { supabase } from './supabase';\n\n// Clave para almacenar las categorías de objetivos financieros en localStorage\nconst FINANCIAL_GOALS_CATEGORIES_KEY = 'financial_goals_categories';\n\n// Categorías predeterminadas para objetivos financieros\nconst DEFAULT_FINANCIAL_GOALS_CATEGORIES = [\n  { name: 'Ahorros', value: 'savings' },\n  { name: 'Inversión', value: 'investment' },\n  { name: 'Compra', value: 'purchase' },\n  { name: 'Viaje', value: 'travel' },\n  { name: 'Educación', value: 'education' },\n  { name: 'Hogar', value: 'home' },\n  { name: 'Otro', value: 'other' }\n];\n\n/**\n * Obtiene todas las categorías\n * @returns {Promise<Array>} - Lista de categorías\n */\nexport const getCategories = async () => {\n  try {\n    // Obtener el usuario actual\n    const { data: { user } } = await supabase.auth.getUser();\n\n    // Construir la consulta\n    let query = supabase\n      .from('categories')\n      .select('*')\n      .order('name', { ascending: true });\n\n    // Obtener categorías del usuario actual y categorías globales (user_id es null)\n    const { data, error } = await query.or(`user_id.is.null,user_id.eq.${user?.id}`);\n\n    if (error) {\n      console.error('Error fetching categories:', error);\n      return [];\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error('Error in getCategories:', error);\n    return [];\n  }\n};\n\n/**\n * Obtiene categorías por tipo\n * @param {string} type - Tipo de categoría\n * @returns {Promise<Array>} - Lista de categorías\n */\nexport const getCategoriesByType = async (type) => {\n  try {\n    // Obtener el usuario actual\n    const { data: { user } } = await supabase.auth.getUser();\n\n    // Construir la consulta\n    let query = supabase\n      .from('categories')\n      .select('*')\n      .eq('type', type)\n      .order('name', { ascending: true });\n\n    // Obtener categorías del usuario actual y categorías globales (user_id es null)\n    const { data, error } = await query.or(`user_id.is.null,user_id.eq.${user?.id}`);\n\n    if (error) {\n      console.error(`Error fetching ${type} categories:`, error);\n      return [];\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error(`Error in getCategoriesByType for type ${type}:`, error);\n    return [];\n  }\n};\n\n/**\n * Crea una nueva categoría\n * @param {Object} category - Datos de la categoría\n * @returns {Promise<Object>} - Categoría creada\n */\nexport const createCategory = async (category) => {\n  try {\n    // Obtener el usuario actual\n    const { data: { user } } = await supabase.auth.getUser();\n\n    if (!user) {\n      throw new Error('No authenticated user found');\n    }\n\n    // Crear la categoría\n    const { data, error } = await supabase\n      .from('categories')\n      .insert([{ ...category, user_id: user.id }])\n      .select();\n\n    if (error) {\n      console.error('Error creating category:', error);\n      throw error;\n    }\n\n    return data?.[0] || null;\n  } catch (error) {\n    console.error('Error in createCategory:', error);\n    throw error;\n  }\n};\n\n/**\n * Actualiza una categoría existente\n * @param {number} id - ID de la categoría\n * @param {Object} updates - Datos a actualizar\n * @returns {Promise<Object>} - Categoría actualizada\n */\nexport const updateCategory = async (id, updates) => {\n  try {\n    // Obtener el usuario actual\n    const { data: { user } } = await supabase.auth.getUser();\n\n    if (!user) {\n      throw new Error('No authenticated user found');\n    }\n\n    // Verificar que la categoría pertenece al usuario\n    const { data: category } = await supabase\n      .from('categories')\n      .select('*')\n      .eq('id', id)\n      .eq('user_id', user.id)\n      .single();\n\n    if (!category) {\n      throw new Error('Category not found or you do not have permission to update it');\n    }\n\n    // Actualizar la categoría\n    const { data, error } = await supabase\n      .from('categories')\n      .update(updates)\n      .eq('id', id)\n      .select();\n\n    if (error) {\n      console.error('Error updating category:', error);\n      throw error;\n    }\n\n    return data?.[0] || null;\n  } catch (error) {\n    console.error('Error in updateCategory:', error);\n    throw error;\n  }\n};\n\n/**\n * Elimina una categoría\n * @param {number} id - ID de la categoría\n * @returns {Promise<boolean>} - true si se eliminó correctamente\n */\nexport const deleteCategory = async (id) => {\n  try {\n    // Obtener el usuario actual\n    const { data: { user } } = await supabase.auth.getUser();\n\n    if (!user) {\n      throw new Error('No authenticated user found');\n    }\n\n    // Verificar que la categoría pertenece al usuario\n    const { data: category } = await supabase\n      .from('categories')\n      .select('*')\n      .eq('id', id)\n      .eq('user_id', user.id)\n      .single();\n\n    if (!category) {\n      throw new Error('Category not found or you do not have permission to delete it');\n    }\n\n    // Eliminar la categoría\n    const { error } = await supabase\n      .from('categories')\n      .delete()\n      .eq('id', id);\n\n    if (error) {\n      console.error('Error deleting category:', error);\n      throw error;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Error in deleteCategory:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene las categorías de objetivos financieros\n * @returns {Promise<Array>} - Lista de categorías\n */\nexport const getFinancialGoalsCategories = async () => {\n  try {\n    // Intentar obtener categorías de Supabase primero\n    const { data: { user } } = await supabase.auth.getUser();\n\n    if (user) {\n      const { data, error } = await supabase\n        .from('categories')\n        .select('*')\n        .eq('type', 'financial_goal')\n        .or(`user_id.is.null,user_id.eq.${user.id}`)\n        .order('name', { ascending: true });\n\n      if (!error && data && data.length > 0) {\n        // Transformar los datos al formato esperado\n        const formattedCategories = data.map(cat => ({\n          name: cat.name,\n          value: cat.value\n        }));\n\n        // Guardar en localStorage como respaldo\n        localStorage.setItem(FINANCIAL_GOALS_CATEGORIES_KEY, JSON.stringify(formattedCategories));\n\n        return formattedCategories;\n      }\n    }\n\n    // Si no hay usuario autenticado o hubo un error, usar localStorage\n    const categoriesJson = localStorage.getItem(FINANCIAL_GOALS_CATEGORIES_KEY);\n\n    if (!categoriesJson) {\n      return DEFAULT_FINANCIAL_GOALS_CATEGORIES;\n    }\n\n    return JSON.parse(categoriesJson);\n  } catch (error) {\n    console.error('Error al obtener categorías de objetivos financieros:', error);\n\n    // En caso de error, usar las categorías predeterminadas\n    const categoriesJson = localStorage.getItem(FINANCIAL_GOALS_CATEGORIES_KEY);\n\n    if (!categoriesJson) {\n      return DEFAULT_FINANCIAL_GOALS_CATEGORIES;\n    }\n\n    return JSON.parse(categoriesJson);\n  }\n};\n\n/**\n * Guarda las categorías de objetivos financieros\n * @param {Array} categories - Lista de categorías\n * @returns {Promise<boolean>} - Indica si se guardaron correctamente\n */\nexport const saveFinancialGoalsCategories = async (categories) => {\n  try {\n    // Guardar en localStorage primero como respaldo\n    localStorage.setItem(FINANCIAL_GOALS_CATEGORIES_KEY, JSON.stringify(categories));\n\n    // Intentar guardar en Supabase si hay un usuario autenticado\n    const { data: { user } } = await supabase.auth.getUser();\n\n    if (user) {\n      // Obtener categorías existentes para este usuario\n      const { data: existingCategories } = await supabase\n        .from('categories')\n        .select('*')\n        .eq('type', 'financial_goal')\n        .eq('user_id', user.id);\n\n      // Crear un mapa de categorías existentes por valor\n      const existingCategoryMap = {};\n      if (existingCategories) {\n        existingCategories.forEach(cat => {\n          existingCategoryMap[cat.value] = cat;\n        });\n      }\n\n      // Procesar cada categoría\n      for (const category of categories) {\n        if (existingCategoryMap[category.value]) {\n          // Actualizar categoría existente si el nombre ha cambiado\n          if (existingCategoryMap[category.value].name !== category.name) {\n            await supabase\n              .from('categories')\n              .update({ name: category.name, updated_at: new Date() })\n              .eq('id', existingCategoryMap[category.value].id);\n          }\n\n          // Eliminar del mapa para saber cuáles eliminar después\n          delete existingCategoryMap[category.value];\n        } else {\n          // Crear nueva categoría\n          await supabase\n            .from('categories')\n            .insert([{\n              user_id: user.id,\n              type: 'financial_goal',\n              name: category.name,\n              value: category.value\n            }]);\n        }\n      }\n\n      // Eliminar categorías que ya no existen\n      const categoriesToDelete = Object.values(existingCategoryMap);\n      if (categoriesToDelete.length > 0) {\n        const idsToDelete = categoriesToDelete.map(cat => cat.id);\n        await supabase\n          .from('categories')\n          .delete()\n          .in('id', idsToDelete);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Error al guardar categorías de objetivos financieros:', error);\n    return false;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { getFinancialGoalsCategories } from '../../services/categoryService';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst FormTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n  padding-bottom: 10px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  padding: 12px;\n  background-color: rgba(239, 68, 68, 0.08);\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--danger-color);\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n\n  &::after {\n    content: ' *';\n    color: var(--danger-color);\n    display: ${props => props.required ? 'inline' : 'none'};\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  width: 100%;\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst initialFormState = {\n  name: '',\n  target_amount: '',\n  current_amount: '0',\n  category: 'savings',\n  deadline: ''\n};\n\nconst GoalForm = ({ onSubmit, onCancel, goal }) => {\n  const [formData, setFormData] = useState(goal || initialFormState);\n  const [error, setError] = useState('');\n  const [categories, setCategories] = useState([]);\n\n  // Cargar categorías al montar el componente\n  useEffect(() => {\n    const loadCategories = () => {\n      const goalCategories = getFinancialGoalsCategories();\n      setCategories(goalCategories);\n    };\n\n    loadCategories();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validación\n    if (!formData.name.trim()) {\n      setError('Por favor ingresa un nombre para el objetivo.');\n      return;\n    }\n\n    if (!formData.target_amount || parseFloat(formData.target_amount) <= 0) {\n      setError('Por favor ingresa un monto objetivo válido.');\n      return;\n    }\n\n    if (parseFloat(formData.current_amount) > parseFloat(formData.target_amount)) {\n      setError('El monto actual no puede ser mayor que el monto objetivo.');\n      return;\n    }\n\n    // Enviar datos\n    onSubmit({\n      ...formData,\n      target_amount: parseFloat(formData.target_amount),\n      current_amount: parseFloat(formData.current_amount || 0)\n    });\n\n    // Resetear formulario\n    setFormData(initialFormState);\n    setError('');\n  };\n\n  return (\n    <FormContainer>\n      <FormTitle>Crear Nuevo Objetivo Financiero</FormTitle>\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"name\" required>Nombre del objetivo</Label>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"target_amount\" required>Monto objetivo (ARS)</Label>\n          <Input\n            type=\"number\"\n            id=\"target_amount\"\n            name=\"target_amount\"\n            min=\"1\"\n            step=\"0.01\"\n            value={formData.target_amount}\n            onChange={handleChange}\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"current_amount\">Monto actual (ARS)</Label>\n          <Input\n            type=\"number\"\n            id=\"current_amount\"\n            name=\"current_amount\"\n            min=\"0\"\n            step=\"0.01\"\n            value={formData.current_amount}\n            onChange={handleChange}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"category\" required>Categoría</Label>\n          <Select\n            id=\"category\"\n            name=\"category\"\n            value={formData.category}\n            onChange={handleChange}\n            required\n          >\n            {categories.map((category) => (\n              <option key={category.value} value={category.value}>\n                {category.name}\n              </option>\n            ))}\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"deadline\">Fecha límite</Label>\n          <Input\n            type=\"date\"\n            id=\"deadline\"\n            name=\"deadline\"\n            value={formData.deadline}\n            onChange={handleChange}\n          />\n        </FormGroup>\n\n        <SubmitButton type=\"submit\">Guardar Objetivo</SubmitButton>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default GoalForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiDollarSign, FiTarget, FiTrendingUp, FiShoppingBag, FiMapPin, FiBook, FiHome } from 'react-icons/fi';\n\nconst Card = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  border: 1px solid rgba(0, 0, 0, 0.04);\n  position: relative;\n  overflow: hidden;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 4px;\n    background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst IconContainer = styled.div`\n  font-size: 1.5rem;\n  margin-right: 12px;\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(99, 102, 241, 0.1);\n  border-radius: 12px;\n  transition: all var(--transition-speed);\n  color: var(--primary-color);\n\n  ${Card}:hover & {\n    transform: scale(1.1);\n    background-color: rgba(99, 102, 241, 0.15);\n  }\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  line-height: 1.4;\n`;\n\nconst Amounts = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  background-color: var(--bg-light);\n  padding: 16px;\n  border-radius: var(--border-radius);\n`;\n\nconst AmountContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AmountLabel = styled.span`\n  font-size: 0.85rem;\n  color: var(--text-medium);\n  margin-bottom: 4px;\n  font-weight: 500;\n`;\n\nconst AmountValue = styled.span`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${props => props.type === 'current' ? 'var(--primary-color)' : 'var(--secondary-color)'};\n`;\n\nconst ProgressContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ProgressBar = styled.div`\n  height: 12px;\n  background-color: var(--bg-medium);\n  border-radius: 6px;\n  overflow: hidden;\n  margin-bottom: 8px;\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05);\n`;\n\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n  border-radius: 6px;\n  transition: width 0.5s ease;\n  position: relative;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.2) 25%,\n      transparent 25%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0.2) 75%,\n      transparent 75%\n    );\n    background-size: 20px 20px;\n    animation: progress-animation 1s linear infinite;\n  }\n\n  @keyframes progress-animation {\n    0% {\n      background-position: 0 0;\n    }\n    100% {\n      background-position: 20px 0;\n    }\n  }\n`;\n\nconst ProgressText = styled.div`\n  text-align: right;\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: var(--text-medium);\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-light);\n  padding: 10px 14px;\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--accent-color);\n`;\n\nconst DeadlineLabel = styled.span`\n  font-size: 0.8rem;\n  color: var(--text-medium);\n  margin-bottom: 4px;\n  font-weight: 500;\n`;\n\nconst DeadlineValue = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-dark);\n  font-weight: 600;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst UpdateButton = styled.button`\n  background-color: var(--accent-color);\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(245, 158, 11, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  &::before {\n    content: '↑';\n    font-weight: bold;\n  }\n\n  &:hover {\n    background-color: var(--accent-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(245, 158, 11, 0.3);\n  }\n`;\n\nconst DeleteButton = styled.button`\n  background-color: var(--danger-color);\n  color: white;\n  border: none;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(239, 68, 68, 0.2);\n\n  &:hover {\n    background-color: var(--danger-dark);\n    transform: rotate(90deg);\n    box-shadow: 0 4px 8px rgba(239, 68, 68, 0.3);\n  }\n`;\n\nconst getCategoryIcon = (category) => {\n  switch (category) {\n    case 'savings':\n      return <FiDollarSign />;\n    case 'investment':\n      return <FiTrendingUp />;\n    case 'purchase':\n      return <FiShoppingBag />;\n    case 'travel':\n      return <FiMapPin />;\n    case 'education':\n      return <FiBook />;\n    case 'home':\n      return <FiHome />;\n    default:\n      return <FiTarget />;\n  }\n};\n\nconst formatCurrency = (amount) => {\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency: 'ARS'\n  }).format(amount);\n};\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Sin fecha límite';\n  const date = new Date(dateString);\n  return date.toLocaleDateString('es-ES');\n};\n\nconst GoalCard = ({ goal, onUpdate, onDelete }) => {\n  const progress = Math.min(100, Math.round((goal.current_amount / goal.target_amount) * 100));\n\n  return (\n    <Card>\n      <Header>\n        <IconContainer>\n          {getCategoryIcon(goal.category)}\n        </IconContainer>\n        <Title>{goal.name}</Title>\n      </Header>\n\n      <Amounts>\n        <AmountContainer>\n          <AmountLabel>Actual:</AmountLabel>\n          <AmountValue type=\"current\">{formatCurrency(goal.current_amount)}</AmountValue>\n        </AmountContainer>\n        <AmountContainer>\n          <AmountLabel>Objetivo:</AmountLabel>\n          <AmountValue type=\"target\">{formatCurrency(goal.target_amount)}</AmountValue>\n        </AmountContainer>\n      </Amounts>\n\n      <ProgressContainer>\n        <ProgressBar>\n          <ProgressFill progress={progress} />\n        </ProgressBar>\n        <ProgressText>{progress}%</ProgressText>\n      </ProgressContainer>\n\n      <Footer>\n        <Deadline>\n          <DeadlineLabel>Fecha límite:</DeadlineLabel>\n          <DeadlineValue>{formatDate(goal.deadline)}</DeadlineValue>\n        </Deadline>\n\n        <Actions>\n          <UpdateButton onClick={() => onUpdate(goal.id)}>\n            Actualizar\n          </UpdateButton>\n          <DeleteButton onClick={() => onDelete(goal.id)}>\n            🗑️\n          </DeleteButton>\n        </Actions>\n      </Footer>\n    </Card>\n  );\n};\n\nexport default GoalCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GoalCard from './GoalCard';\n\nconst ListContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 24px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst NoGoalsMessage = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 30px 0;\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n  grid-column: 1 / -1;\n`;\n\nconst GoalList = ({ goals, onUpdateGoal, onDeleteGoal }) => {\n  if (!goals || goals.length === 0) {\n    return (\n      <ListContainer>\n        <NoGoalsMessage>\n          No hay objetivos financieros. ¡Crea uno nuevo!\n        </NoGoalsMessage>\n      </ListContainer>\n    );\n  }\n\n  return (\n    <ListContainer>\n      {goals.map(goal => (\n        <GoalCard \n          key={goal.id} \n          goal={goal} \n          onUpdate={onUpdateGoal} \n          onDelete={onDeleteGoal} \n        />\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default GoalList;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus, FiEdit2, FiTrash2, FiX, FiCheck, FiSave, FiLoader } from 'react-icons/fi';\n\nconst Container = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst Title = styled.h3`\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n  padding-bottom: 10px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CategoryList = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst CategoryItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  margin-bottom: 8px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  transition: all var(--transition-speed);\n\n  &:hover {\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);\n  }\n`;\n\nconst CategoryName = styled.div`\n  font-weight: 500;\n  color: var(--text-dark);\n`;\n\nconst CategoryValue = styled.div`\n  color: var(--text-medium);\n  font-size: 0.9rem;\n`;\n\nconst CategoryActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst AddForm = styled.form`\n  display: flex;\n  gap: 12px;\n  margin-bottom: 16px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Button = styled.button`\n  background-color: ${props => props.variant === 'primary' ? 'var(--primary-color)' : 'transparent'};\n  color: ${props => props.variant === 'primary' ? 'white' : 'var(--text-medium)'};\n  border: ${props => props.variant === 'primary' ? 'none' : '1px solid rgba(0, 0, 0, 0.1)'};\n  padding: ${props => props.variant === 'primary' ? '12px 20px' : '12px 16px'};\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: ${props => props.variant === 'primary' ? 'var(--primary-dark)' : 'rgba(0, 0, 0, 0.05)'};\n    transform: ${props => props.variant === 'primary' ? 'translateY(-2px)' : 'none'};\n    box-shadow: ${props => props.variant === 'primary' ? '0 4px 8px rgba(99, 102, 241, 0.2)' : 'none'};\n  }\n`;\n\nconst SaveButton = styled(Button)`\n  margin-top: 20px;\n`;\n\nconst LoadingSpinner = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  animation: spin 1s linear infinite;\n  margin-right: 8px;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst StatusMessage = styled.div`\n  margin-top: 12px;\n  padding: 8px 12px;\n  border-radius: var(--border-radius);\n  font-size: 0.9rem;\n  background-color: ${props => props.type === 'success' ? 'rgba(16, 185, 129, 0.1)' : 'rgba(239, 68, 68, 0.1)'};\n  color: ${props => props.type === 'success' ? 'var(--secondary-color)' : 'var(--danger-color)'};\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst EditForm = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n`;\n\nconst EditInput = styled(Input)`\n  margin: 0;\n`;\n\nconst NoCategories = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 20px 0;\n`;\n\nconst CategoryManager = ({ categories, onSaveCategories }) => {\n  const [customCategories, setCustomCategories] = useState(categories || []);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [newCategoryValue, setNewCategoryValue] = useState('');\n  const [editingIndex, setEditingIndex] = useState(-1);\n  const [editName, setEditName] = useState('');\n  const [editValue, setEditValue] = useState('');\n  const [hasChanges, setHasChanges] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(null);\n\n  useEffect(() => {\n    setCustomCategories(categories || []);\n  }, [categories]);\n\n  const handleAddCategory = (e) => {\n    e.preventDefault();\n\n    if (!newCategoryName.trim() || !newCategoryValue.trim()) {\n      return;\n    }\n\n    const newCategory = {\n      name: newCategoryName.trim(),\n      value: newCategoryValue.trim()\n    };\n\n    setCustomCategories([...customCategories, newCategory]);\n    setNewCategoryName('');\n    setNewCategoryValue('');\n    setHasChanges(true);\n  };\n\n  const handleEditCategory = (index) => {\n    setEditingIndex(index);\n    setEditName(customCategories[index].name);\n    setEditValue(customCategories[index].value);\n  };\n\n  const handleSaveEdit = () => {\n    if (!editName.trim() || !editValue.trim()) {\n      return;\n    }\n\n    const updatedCategories = [...customCategories];\n    updatedCategories[editingIndex] = {\n      name: editName.trim(),\n      value: editValue.trim()\n    };\n\n    setCustomCategories(updatedCategories);\n    setEditingIndex(-1);\n    setHasChanges(true);\n  };\n\n  const handleCancelEdit = () => {\n    setEditingIndex(-1);\n  };\n\n  const handleDeleteCategory = (index) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta categoría?')) {\n      const updatedCategories = customCategories.filter((_, i) => i !== index);\n      setCustomCategories(updatedCategories);\n      setHasChanges(true);\n    }\n  };\n\n  const handleSaveChanges = async () => {\n    try {\n      setIsSaving(true);\n      setStatusMessage(null);\n\n      // Llamar a la función asíncrona para guardar categorías\n      const success = await onSaveCategories(customCategories);\n\n      if (success) {\n        setHasChanges(false);\n        setStatusMessage({\n          type: 'success',\n          text: 'Categorías guardadas correctamente. Se han sincronizado con la nube.'\n        });\n      } else {\n        setStatusMessage({\n          type: 'error',\n          text: 'No se pudieron guardar las categorías en la nube, pero se guardaron localmente.'\n        });\n      }\n    } catch (error) {\n      console.error('Error al guardar categorías:', error);\n      setStatusMessage({\n        type: 'error',\n        text: 'Error al guardar categorías: ' + (error.message || 'Error desconocido')\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Title>Gestionar Categorías</Title>\n\n      <AddForm onSubmit={handleAddCategory}>\n        <Input\n          type=\"text\"\n          placeholder=\"Nombre de categoría\"\n          value={newCategoryName}\n          onChange={(e) => setNewCategoryName(e.target.value)}\n          required\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Valor (ej: travel)\"\n          value={newCategoryValue}\n          onChange={(e) => setNewCategoryValue(e.target.value)}\n          required\n        />\n        <Button type=\"submit\" variant=\"primary\">\n          <FiPlus /> Agregar\n        </Button>\n      </AddForm>\n\n      <CategoryList>\n        {customCategories.length > 0 ? (\n          customCategories.map((category, index) => (\n            <CategoryItem key={index}>\n              {editingIndex === index ? (\n                <EditForm>\n                  <EditInput\n                    type=\"text\"\n                    value={editName}\n                    onChange={(e) => setEditName(e.target.value)}\n                    required\n                  />\n                  <EditInput\n                    type=\"text\"\n                    value={editValue}\n                    onChange={(e) => setEditValue(e.target.value)}\n                    required\n                  />\n                  <ActionButton onClick={handleSaveEdit} color=\"var(--secondary-color)\">\n                    <FiCheck />\n                  </ActionButton>\n                  <ActionButton onClick={handleCancelEdit} color=\"var(--danger-color)\">\n                    <FiX />\n                  </ActionButton>\n                </EditForm>\n              ) : (\n                <>\n                  <div>\n                    <CategoryName>{category.name}</CategoryName>\n                    <CategoryValue>Valor: {category.value}</CategoryValue>\n                  </div>\n                  <CategoryActions>\n                    <ActionButton onClick={() => handleEditCategory(index)} color=\"var(--primary-color)\">\n                      <FiEdit2 />\n                    </ActionButton>\n                    <ActionButton onClick={() => handleDeleteCategory(index)} color=\"var(--danger-color)\">\n                      <FiTrash2 />\n                    </ActionButton>\n                  </CategoryActions>\n                </>\n              )}\n            </CategoryItem>\n          ))\n        ) : (\n          <NoCategories>No hay categorías personalizadas. Agrega una nueva.</NoCategories>\n        )}\n      </CategoryList>\n\n      {hasChanges && (\n        <SaveButton\n          onClick={handleSaveChanges}\n          variant=\"primary\"\n          disabled={isSaving}\n        >\n          {isSaving ? (\n            <>\n              <LoadingSpinner><FiLoader /></LoadingSpinner> Guardando...\n            </>\n          ) : (\n            <>\n              <FiSave /> Guardar Cambios\n            </>\n          )}\n        </SaveButton>\n      )}\n\n      {statusMessage && (\n        <StatusMessage type={statusMessage.type}>\n          {statusMessage.type === 'success' ? <FiCheck /> : <FiX />}\n          {statusMessage.text}\n        </StatusMessage>\n      )}\n    </Container>\n  );\n};\n\nexport default CategoryManager;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GoalChart from '../components/FinancialGoals/GoalChart';\nimport GoalFilters from '../components/FinancialGoals/GoalFilters';\nimport GoalForm from '../components/FinancialGoals/GoalForm';\nimport GoalList from '../components/FinancialGoals/GoalList';\nimport CategoryManager from '../components/FinancialGoals/CategoryManager';\nimport { showInfo } from '../components/common/Notification';\nimport { getFinancialGoals, saveFinancialGoals, addFinancialGoal, updateFinancialGoal, deleteFinancialGoal } from '../services/simpleStorage';\nimport { getFinancialGoalsCategories, saveFinancialGoalsCategories } from '../services/categoryService';\n\nconst FinancialGoalsContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst FinancialGoalsHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst GoalsSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst GoalsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst AddGoalButton = styled.button`\n  background-color: var(--secondary-color);\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 4px 6px rgba(16, 185, 129, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &::before {\n    content: '+';\n    font-size: 1.2rem;\n    font-weight: 600;\n  }\n\n  &:hover {\n    background-color: var(--secondary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(16, 185, 129, 0.3);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst FinancialGoals = () => {\n  const [goals, setGoals] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [filters, setFilters] = useState({\n    category: 'all',\n    progress: 'all',\n    sortBy: 'name'\n  });\n  const [filteredGoals, setFilteredGoals] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showCategoryManager, setShowCategoryManager] = useState(false);\n  const [categories, setCategories] = useState([]);\n\n  // Cargar metas financieras desde el almacenamiento local\n  useEffect(() => {\n    const loadGoals = () => {\n      try {\n        setLoading(true);\n        // Obtener metas financieras del almacenamiento local\n        const savedGoals = getFinancialGoals();\n        console.log('Metas financieras cargadas desde el almacenamiento local:', savedGoals);\n        setGoals(savedGoals || []);\n      } catch (error) {\n        console.error('Error al cargar metas financieras:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadGoals();\n\n    // Escuchar eventos de sincronización\n    const handleDataSynced = (event) => {\n      const { detail } = event;\n      if (detail.success && detail.stores && detail.stores.includes('financial_goals')) {\n        console.log('Datos de metas financieras sincronizados, recargando...');\n        // Recargar metas financieras desde el almacenamiento local\n        const syncedData = getFinancialGoals();\n        if (syncedData && syncedData.length > 0) {\n          console.log('Metas financieras actualizadas desde sincronización:', syncedData.length);\n          setGoals(syncedData);\n          showInfo('Metas financieras actualizadas');\n        }\n      }\n    };\n\n    window.addEventListener('data-synced', handleDataSynced);\n\n    // Limpiar suscripciones al desmontar\n    return () => {\n      window.removeEventListener('data-synced', handleDataSynced);\n    };\n  }, []);\n\n  // Cargar categorías\n  useEffect(() => {\n    const loadCategories = async () => {\n      try {\n        const savedCategories = await getFinancialGoalsCategories();\n        console.log('Categorías cargadas:', savedCategories);\n        setCategories(savedCategories || []);\n      } catch (error) {\n        console.error('Error al cargar categorías:', error);\n      }\n    };\n\n    loadCategories();\n  }, []);\n\n  // Aplicar filtros y ordenamiento cuando cambian los filtros o las metas\n  useEffect(() => {\n    let result = [...goals];\n\n    // Filtrar por categoría\n    if (filters.category !== 'all') {\n      result = result.filter(goal => goal.category === filters.category);\n    }\n\n    // Filtrar por progreso\n    if (filters.progress !== 'all') {\n      result = result.filter(goal => {\n        const progress = Math.round((goal.current_amount / goal.target_amount) * 100);\n\n        switch (filters.progress) {\n          case 'less25':\n            return progress < 25;\n          case '25to50':\n            return progress >= 25 && progress < 50;\n          case '50to75':\n            return progress >= 50 && progress < 75;\n          case 'more75':\n            return progress >= 75 && progress < 100;\n          case 'completed':\n            return progress >= 100;\n          default:\n            return true;\n        }\n      });\n    }\n\n    // Ordenar\n    result.sort((a, b) => {\n      switch (filters.sortBy) {\n        case 'name':\n          return a.name.localeCompare(b.name);\n        case 'deadline':\n          // Si no hay fecha límite, colocar al final\n          if (!a.deadline) return 1;\n          if (!b.deadline) return -1;\n          return new Date(a.deadline) - new Date(b.deadline);\n        case 'progress':\n          const progressA = (a.current_amount / a.target_amount) * 100;\n          const progressB = (b.current_amount / b.target_amount) * 100;\n          return progressB - progressA; // Mayor progreso primero\n        case 'amount':\n          return b.target_amount - a.target_amount; // Mayor monto primero\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredGoals(result);\n  }, [goals, filters]);\n\n  const handleAddGoal = (newGoal) => {\n    try {\n      // Agregar la meta al almacenamiento local\n      const savedGoal = addFinancialGoal(newGoal);\n\n      if (savedGoal) {\n        console.log('Meta financiera agregada correctamente:', savedGoal);\n        // Actualizar el estado\n        setGoals(prev => [...prev, savedGoal]);\n        setShowForm(false);\n      } else {\n        console.error('No se pudo agregar la meta financiera');\n        alert('No se pudo agregar la meta financiera. Por favor, intenta de nuevo.');\n      }\n    } catch (error) {\n      console.error('Error al agregar meta financiera:', error);\n      alert('Error al agregar meta financiera. Por favor, intenta de nuevo.');\n    }\n  };\n\n  const handleUpdateGoal = (goalId) => {\n    const amount = prompt('Ingresa el monto a agregar:');\n\n    if (amount && !isNaN(amount) && parseFloat(amount) > 0) {\n      try {\n        // Encontrar la meta actual\n        const currentGoal = goals.find(goal => goal.id === goalId);\n\n        if (!currentGoal) {\n          console.error('No se encontró la meta financiera');\n          return;\n        }\n\n        // Calcular el nuevo monto\n        const newAmount = currentGoal.current_amount + parseFloat(amount);\n\n        // Actualizar la meta en el almacenamiento local\n        const updatedGoal = updateFinancialGoal(goalId, {\n          ...currentGoal,\n          current_amount: newAmount\n        });\n\n        if (updatedGoal) {\n          console.log('Meta financiera actualizada correctamente:', updatedGoal);\n          // Actualizar el estado\n          setGoals(prev => prev.map(goal => {\n            if (goal.id === goalId) {\n              return {\n                ...goal,\n                current_amount: newAmount\n              };\n            }\n            return goal;\n          }));\n        } else {\n          console.error('No se pudo actualizar la meta financiera');\n          alert('No se pudo actualizar la meta financiera. Por favor, intenta de nuevo.');\n        }\n      } catch (error) {\n        console.error('Error al actualizar meta financiera:', error);\n        alert('Error al actualizar meta financiera. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n\n  const handleDeleteGoal = (goalId) => {\n    const goalToDelete = goals.find(goal => goal.id === goalId);\n\n    if (window.confirm(`¿Estás seguro de que deseas eliminar \"${goalToDelete?.name || 'esta meta'}\"?`)) {\n      try {\n        // Eliminar la meta del almacenamiento local\n        const success = deleteFinancialGoal(goalId);\n\n        if (success) {\n          console.log('Meta financiera eliminada correctamente');\n          // Actualizar el estado\n          setGoals(prev => prev.filter(goal => goal.id !== goalId));\n        } else {\n          console.error('No se pudo eliminar la meta financiera');\n          alert('No se pudo eliminar la meta financiera. Por favor, intenta de nuevo.');\n        }\n      } catch (error) {\n        console.error('Error al eliminar meta financiera:', error);\n        alert('Error al eliminar meta financiera. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n\n  const handleSaveCategories = async (updatedCategories) => {\n    try {\n      // Guardar categorías en el almacenamiento local y en Supabase\n      const success = await saveFinancialGoalsCategories(updatedCategories);\n\n      if (success) {\n        console.log('Categorías guardadas correctamente:', updatedCategories);\n        // Actualizar el estado\n        setCategories(updatedCategories);\n        return true;\n      } else {\n        console.error('No se pudieron guardar las categorías');\n        return false;\n      }\n    } catch (error) {\n      console.error('Error al guardar categorías:', error);\n      return false;\n    }\n  };\n\n  return (\n    <FinancialGoalsContainer>\n      <FinancialGoalsHeader>\n        <h1>Metas Financieras</h1>\n        <p>Establece y realiza seguimiento de tus objetivos financieros</p>\n      </FinancialGoalsHeader>\n\n      {/* Gráfico de resumen */}\n      <GoalChart goals={goals} />\n\n      {/* Sección de metas */}\n      <GoalsSection>\n        <GoalsHeader>\n          <SectionTitle>Objetivos Financieros</SectionTitle>\n          <div style={{ display: 'flex', gap: '12px' }}>\n            <AddGoalButton\n              onClick={() => {\n                setShowCategoryManager(!showCategoryManager);\n                setShowForm(false);\n              }}\n              style={{\n                backgroundColor: showCategoryManager ? 'var(--primary-color)' : 'var(--text-medium)',\n                boxShadow: showCategoryManager ? '0 4px 6px rgba(99, 102, 241, 0.2)' : 'none'\n              }}\n            >\n              {showCategoryManager ? 'Cerrar Categorías' : 'Gestionar Categorías'}\n            </AddGoalButton>\n            <AddGoalButton\n              onClick={() => {\n                setShowForm(!showForm);\n                setShowCategoryManager(false);\n              }}\n            >\n              {showForm ? 'Cancelar' : 'Nuevo Objetivo'}\n            </AddGoalButton>\n          </div>\n        </GoalsHeader>\n\n        {/* Gestor de categorías */}\n        {showCategoryManager && (\n          <CategoryManager\n            categories={categories}\n            onSaveCategories={handleSaveCategories}\n          />\n        )}\n\n        {/* Formulario para agregar nuevas metas */}\n        {showForm && (\n          <GoalForm onSubmit={handleAddGoal} onCancel={() => setShowForm(false)} />\n        )}\n\n        {/* Filtros */}\n        <GoalFilters filters={filters} onFilterChange={setFilters} />\n\n        {/* Lista de metas */}\n        <GoalList\n          goals={filteredGoals}\n          onUpdateGoal={handleUpdateGoal}\n          onDeleteGoal={handleDeleteGoal}\n        />\n      </GoalsSection>\n    </FinancialGoalsContainer>\n  );\n};\n\nexport default FinancialGoals;\n","/**\n * Servicio de almacenamiento local simple\n * Este servicio proporciona funciones básicas para guardar y recuperar datos\n * del localStorage de manera directa y sencilla\n */\n\n// Prefijo para las claves de almacenamiento\nconst STORAGE_PREFIX = 'mi_app_personal_simple_';\n\n/**\n * Guardar datos en localStorage\n * @param {string} key - Clave\n * @param {*} data - Datos a guardar\n */\nexport const saveData = (key, data) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.setItem(fullKey, JSON.stringify(data));\n    console.log(`Datos guardados en localStorage con clave ${key}:`, data);\n    return true;\n  } catch (error) {\n    console.error(`Error al guardar datos en localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n/**\n * Obtener datos de localStorage\n * @param {string} key - Clave\n * @param {*} defaultValue - Valor por defecto\n * @returns {*} - Datos guardados o valor por defecto\n */\nexport const getData = (key, defaultValue = null) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    const storedData = localStorage.getItem(fullKey);\n\n    if (!storedData) {\n      return defaultValue;\n    }\n\n    const parsedData = JSON.parse(storedData);\n    console.log(`Datos recuperados de localStorage con clave ${key}:`, parsedData);\n    return parsedData;\n  } catch (error) {\n    console.error(`Error al obtener datos de localStorage con clave ${key}:`, error);\n    return defaultValue;\n  }\n};\n\n/**\n * Eliminar datos de localStorage\n * @param {string} key - Clave\n */\nexport const removeData = (key) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.removeItem(fullKey);\n    console.log(`Datos eliminados de localStorage con clave ${key}`);\n    return true;\n  } catch (error) {\n    console.error(`Error al eliminar datos de localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n// Función genérica para generar un ID único\nconst generateId = () => `local_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// ==================== TRANSACCIONES ====================\n\n/**\n * Guardar transacciones en localStorage\n * @param {Array} transactions - Transacciones a guardar\n */\nexport const saveTransactions = (transactions) => {\n  return saveData('transactions', transactions);\n};\n\n/**\n * Obtener transacciones de localStorage\n * @returns {Array} - Transacciones guardadas o array vacío\n */\nexport const getTransactions = () => {\n  return getData('transactions', []);\n};\n\n/**\n * Agregar una transacción\n * @param {Object} transaction - Transacción a agregar\n */\nexport const addTransaction = (transaction) => {\n  try {\n    // Generar ID si no tiene\n    const transactionWithId = {\n      ...transaction,\n      id: transaction.id || generateId()\n    };\n\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Agregar la nueva transacción al principio\n    const updatedTransactions = [transactionWithId, ...currentTransactions];\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return transactionWithId;\n  } catch (error) {\n    console.error('Error al agregar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una transacción\n * @param {string} id - ID de la transacción\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTransaction = (id, updates) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Buscar la transacción\n    const index = currentTransactions.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la transacción\n    const updatedTransactions = [...currentTransactions];\n    updatedTransactions[index] = {\n      ...updatedTransactions[index],\n      ...updates\n    };\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return updatedTransactions[index];\n  } catch (error) {\n    console.error('Error al actualizar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una transacción\n * @param {string} id - ID de la transacción\n */\nexport const deleteTransaction = (id) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Filtrar la transacción a eliminar\n    const updatedTransactions = currentTransactions.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna transacción, retornar false\n    if (updatedTransactions.length === currentTransactions.length) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar transacción:', error);\n    return false;\n  }\n};\n\n// ==================== TAREAS ====================\n\n/**\n * Guardar tareas en localStorage\n * @param {Array} tasks - Tareas a guardar\n */\nexport const saveTasks = (tasks) => {\n  return saveData('tasks', tasks);\n};\n\n/**\n * Obtener tareas de localStorage\n * @returns {Array} - Tareas guardadas o array vacío\n */\nexport const getTasks = () => {\n  return getData('tasks', []);\n};\n\n/**\n * Agregar una tarea\n * @param {Object} task - Tarea a agregar\n */\nexport const addTask = (task) => {\n  try {\n    // Generar ID si no tiene\n    const taskWithId = {\n      ...task,\n      id: task.id || generateId(),\n      created_at: task.created_at || new Date().toISOString().split('T')[0]\n    };\n\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Agregar la nueva tarea\n    const updatedTasks = [...currentTasks, taskWithId];\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return taskWithId;\n  } catch (error) {\n    console.error('Error al agregar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una tarea\n * @param {string} id - ID de la tarea\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTask = (id, updates) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la tarea\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      ...updates\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al actualizar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una tarea\n * @param {string} id - ID de la tarea\n */\nexport const deleteTask = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Filtrar la tarea a eliminar\n    const updatedTasks = currentTasks.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna tarea, retornar false\n    if (updatedTasks.length === currentTasks.length) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar tarea:', error);\n    return false;\n  }\n};\n\n/**\n * Cambiar el estado de completado de una tarea\n * @param {string} id - ID de la tarea\n * @param {boolean} completed - Estado de completado\n */\nexport const toggleTaskComplete = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el estado de completado\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      completed: !updatedTasks[index].completed\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al cambiar estado de tarea:', error);\n    return null;\n  }\n};\n\n// ==================== INVERSIONES ====================\n\n/**\n * Guardar inversiones en localStorage\n * @param {Array} investments - Inversiones a guardar\n */\nexport const saveInvestments = (investments) => {\n  return saveData('investments', investments);\n};\n\n/**\n * Obtener inversiones de localStorage\n * @returns {Array} - Inversiones guardadas o array vacío\n */\nexport const getInvestments = () => {\n  return getData('investments', []);\n};\n\n/**\n * Agregar una inversión\n * @param {Object} investment - Inversión a agregar\n */\nexport const addInvestment = (investment) => {\n  try {\n    // Generar ID si no tiene\n    const investmentWithId = {\n      ...investment,\n      id: investment.id || generateId()\n    };\n\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Agregar la nueva inversión\n    const updatedInvestments = [...currentInvestments, investmentWithId];\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return investmentWithId;\n  } catch (error) {\n    console.error('Error al agregar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una inversión\n * @param {string} id - ID de la inversión\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateInvestment = (id, updates) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Buscar la inversión\n    const index = currentInvestments.findIndex(i => i.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la inversión\n    const updatedInvestments = [...currentInvestments];\n    updatedInvestments[index] = {\n      ...updatedInvestments[index],\n      ...updates\n    };\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return updatedInvestments[index];\n  } catch (error) {\n    console.error('Error al actualizar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una inversión\n * @param {string} id - ID de la inversión\n */\nexport const deleteInvestment = (id) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Filtrar la inversión a eliminar\n    const updatedInvestments = currentInvestments.filter(i => i.id !== id);\n\n    // Si no se eliminó ninguna inversión, retornar false\n    if (updatedInvestments.length === currentInvestments.length) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar inversión:', error);\n    return false;\n  }\n};\n\n// ==================== METAS FINANCIERAS ====================\n\n/**\n * Guardar metas financieras en localStorage\n * @param {Array} goals - Metas financieras a guardar\n */\nexport const saveFinancialGoals = (goals) => {\n  return saveData('financial_goals', goals);\n};\n\n/**\n * Obtener metas financieras de localStorage\n * @returns {Array} - Metas financieras guardadas o array vacío\n */\nexport const getFinancialGoals = () => {\n  return getData('financial_goals', []);\n};\n\n/**\n * Agregar una meta financiera\n * @param {Object} goal - Meta financiera a agregar\n */\nexport const addFinancialGoal = (goal) => {\n  try {\n    // Generar ID si no tiene\n    const goalWithId = {\n      ...goal,\n      id: goal.id || generateId()\n    };\n\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Agregar la nueva meta\n    const updatedGoals = [...currentGoals, goalWithId];\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return goalWithId;\n  } catch (error) {\n    console.error('Error al agregar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una meta financiera\n * @param {string} id - ID de la meta\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateFinancialGoal = (id, updates) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Buscar la meta\n    const index = currentGoals.findIndex(g => g.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la meta\n    const updatedGoals = [...currentGoals];\n    updatedGoals[index] = {\n      ...updatedGoals[index],\n      ...updates\n    };\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return updatedGoals[index];\n  } catch (error) {\n    console.error('Error al actualizar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una meta financiera\n * @param {string} id - ID de la meta\n */\nexport const deleteFinancialGoal = (id) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Filtrar la meta a eliminar\n    const updatedGoals = currentGoals.filter(g => g.id !== id);\n\n    // Si no se eliminó ninguna meta, retornar false\n    if (updatedGoals.length === currentGoals.length) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar meta financiera:', error);\n    return false;\n  }\n};\n\n// ==================== EVENTOS DEL CALENDARIO ====================\n\n/**\n * Guardar eventos en localStorage\n * @param {Array} events - Eventos a guardar\n */\nexport const saveEvents = (events) => {\n  return saveData('events', events);\n};\n\n/**\n * Obtener eventos de localStorage\n * @returns {Array} - Eventos guardados o array vacío\n */\nexport const getEvents = () => {\n  return getData('events', []);\n};\n\n/**\n * Agregar un evento\n * @param {Object} event - Evento a agregar\n */\nexport const addEvent = (event) => {\n  try {\n    // Generar ID si no tiene\n    const eventWithId = {\n      ...event,\n      id: event.id || generateId()\n    };\n\n    // Obtener eventos actuales\n    const currentEvents = getEvents();\n\n    // Agregar el nuevo evento\n    const updatedEvents = [...currentEvents, eventWithId];\n\n    // Guardar eventos actualizados\n    saveEvents(updatedEvents);\n\n    return eventWithId;\n  } catch (error) {\n    console.error('Error al agregar evento:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar un evento\n * @param {string} id - ID del evento\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateEvent = (id, updates) => {\n  try {\n    // Obtener eventos actuales\n    const currentEvents = getEvents();\n\n    // Buscar el evento\n    const index = currentEvents.findIndex(e => e.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró el evento con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el evento\n    const updatedEvents = [...currentEvents];\n    updatedEvents[index] = {\n      ...updatedEvents[index],\n      ...updates\n    };\n\n    // Guardar eventos actualizados\n    saveEvents(updatedEvents);\n\n    return updatedEvents[index];\n  } catch (error) {\n    console.error('Error al actualizar evento:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar un evento\n * @param {string} id - ID del evento\n */\nexport const deleteEvent = (id) => {\n  try {\n    // Obtener eventos actuales\n    const currentEvents = getEvents();\n\n    // Filtrar el evento a eliminar\n    const updatedEvents = currentEvents.filter(e => e.id !== id);\n\n    // Si no se eliminó ningún evento, retornar false\n    if (updatedEvents.length === currentEvents.length) {\n      console.error(`No se encontró el evento con ID ${id}`);\n      return false;\n    }\n\n    // Guardar eventos actualizados\n    saveEvents(updatedEvents);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar evento:', error);\n    return false;\n  }\n};\n"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","ChartContainer","styled","div","ChartTitle","h2","ChartOptions","ChartTypeButton","button","props","active","ChartWrapper","_ref","goals","chartType","setChartType","useState","darkMode","useTheme","chartData","setChartData","chartOptions","setChartOptions","useEffect","length","labels","map","goal","name","currentAmounts","current_amount","remainingAmounts","target_amount","Math","max","backgroundColors","datasets","label","data","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio","scales","x","stacked","ticks","color","grid","y","beginAtZero","callback","value","Intl","NumberFormat","style","currency","maximumFractionDigits","format","plugins","legend","tooltip","callbacks","context","dataset","raw","replace","position","dataIndex","percentage","round","_jsxs","children","_jsx","onClick","Bar","options","Pie","FiltersContainer","FilterGroup","Label","Select","select","filters","onFilterChange","handleChange","e","target","htmlFor","id","category","onChange","progress","sortBy","FINANCIAL_GOALS_CATEGORIES_KEY","DEFAULT_FINANCIAL_GOALS_CATEGORIES","getFinancialGoalsCategories","async","user","supabase","auth","getUser","error","from","eq","or","order","ascending","formattedCategories","cat","localStorage","setItem","JSON","stringify","categoriesJson","getItem","parse","console","FormContainer","FormTitle","h3","ErrorMessage","FormGroup","required","Input","input","SubmitButton","initialFormState","deadline","onSubmit","onCancel","formData","setFormData","setError","categories","setCategories","loadCategories","goalCategories","prev","preventDefault","trim","parseFloat","type","min","step","Card","Header","IconContainer","Amounts","AmountContainer","AmountLabel","span","AmountValue","ProgressContainer","ProgressBar","ProgressFill","ProgressText","Footer","Deadline","DeadlineLabel","DeadlineValue","Actions","UpdateButton","DeleteButton","getCategoryIcon","FiDollarSign","FiTrendingUp","FiShoppingBag","FiMapPin","FiBook","FiHome","FiTarget","formatCurrency","amount","formatDate","dateString","Date","toLocaleDateString","onUpdate","onDelete","ListContainer","NoGoalsMessage","onUpdateGoal","onDeleteGoal","GoalCard","Container","CategoryList","CategoryItem","CategoryName","CategoryValue","CategoryActions","ActionButton","AddForm","form","Button","variant","SaveButton","LoadingSpinner","StatusMessage","EditForm","EditInput","NoCategories","onSaveCategories","customCategories","setCustomCategories","newCategoryName","setNewCategoryName","newCategoryValue","setNewCategoryValue","editingIndex","setEditingIndex","editName","setEditName","editValue","setEditValue","hasChanges","setHasChanges","isSaving","setIsSaving","statusMessage","setStatusMessage","handleSaveEdit","updatedCategories","handleCancelEdit","newCategory","placeholder","FiPlus","index","FiCheck","FiX","_Fragment","handleEditCategory","FiEdit2","window","confirm","filter","_","i","handleDeleteCategory","FiTrash2","text","message","disabled","FiLoader","FiSave","FinancialGoalsContainer","FinancialGoalsHeader","GoalsSection","GoalsHeader","SectionTitle","AddGoalButton","FinancialGoals","setGoals","showForm","setShowForm","setFilters","filteredGoals","setFilteredGoals","loading","setLoading","showCategoryManager","setShowCategoryManager","loadGoals","savedGoals","getFinancialGoals","log","handleDataSynced","event","detail","success","stores","includes","syncedData","showInfo","addEventListener","removeEventListener","savedCategories","result","sort","a","b","localeCompare","progressA","GoalChart","display","gap","boxShadow","CategoryManager","existingCategories","existingCategoryMap","forEach","update","updated_at","insert","user_id","categoriesToDelete","Object","values","idsToDelete","delete","in","saveFinancialGoalsCategories","GoalForm","newGoal","savedGoal","addFinancialGoal","alert","GoalFilters","GoalList","goalId","prompt","isNaN","currentGoal","find","newAmount","updatedGoal","updateFinancialGoal","goalToDelete","deleteFinancialGoal","STORAGE_PREFIX","saveData","key","fullKey","getData","defaultValue","arguments","undefined","storedData","parsedData","generateId","now","random","toString","substr","saveTransactions","transactions","getTransactions","addTransaction","transaction","transactionWithId","updatedTransactions","updateTransaction","updates","currentTransactions","findIndex","t","deleteTransaction","saveTasks","tasks","getTasks","addTask","task","taskWithId","created_at","toISOString","split","updatedTasks","updateTask","currentTasks","deleteTask","toggleTaskComplete","completed","saveInvestments","investments","getInvestments","addInvestment","investment","investmentWithId","updatedInvestments","updateInvestment","currentInvestments","deleteInvestment","saveFinancialGoals","goalWithId","updatedGoals","currentGoals","g","saveEvents","events","getEvents","addEvent","eventWithId","updatedEvents","updateEvent","currentEvents","deleteEvent"],"sourceRoot":""}