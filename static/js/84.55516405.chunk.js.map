{"version":3,"file":"static/js/84.55516405.chunk.js","mappings":"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","sources":["services/exportService.js","components/Finances/FinancialSummary.js","hooks/useGestures.js","components/common/SwipeableCard.js","components/common/CurrencyConverter.js","components/Finances/TransactionItem.js","hooks/useProgressiveLoading.js","components/common/ProgressiveList.js","hooks/useMemoizedList.js","components/Finances/TransactionList.js","components/Finances/CategoryManager.js","components/Finances/PlatformManager.js","components/Finances/TransactionForm.js","components/Finances/TransactionFilters.js","services/realtimeService.js","components/common/AnimatedTransition.js","components/common/ExportMenu.js","components/common/ConfirmDialog.js","pages/Finances.js","services/simpleStorage.js"],"sourcesContent":["/**\n * Exporta datos a un archivo CSV\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToCSV = (data, filename) => {\n  if (!data || !data.length) {\n    return;\n  }\n\n  // Obtener las cabeceras del CSV\n  const headers = Object.keys(data[0]);\n  \n  // Crear el contenido del CSV\n  const csvContent = [\n    // Cabeceras\n    headers.join(','),\n    // Filas de datos\n    ...data.map(row => \n      headers.map(header => {\n        // Manejar valores especiales\n        const value = row[header];\n        \n        // Si el valor es null o undefined, devolver una cadena vacía\n        if (value === null || value === undefined) {\n          return '';\n        }\n        \n        // Si el valor es un objeto o array, convertirlo a JSON\n        if (typeof value === 'object') {\n          return `\"${JSON.stringify(value).replace(/\"/g, '\"\"')}\"`;\n        }\n        \n        // Si el valor es una cadena, escapar las comillas\n        if (typeof value === 'string') {\n          return `\"${value.replace(/\"/g, '\"\"')}\"`;\n        }\n        \n        // Para otros tipos de datos, devolver el valor como cadena\n        return String(value);\n      }).join(',')\n    )\n  ].join('\\\\n');\n  \n  // Crear un blob con el contenido del CSV\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  \n  // Crear un enlace para descargar el archivo\n  const link = document.createElement('a');\n  \n  // Crear una URL para el blob\n  const url = URL.createObjectURL(blob);\n  \n  // Configurar el enlace\n  link.setAttribute('href', url);\n  link.setAttribute('download', `${filename}.csv`);\n  link.style.visibility = 'hidden';\n  \n  // Agregar el enlace al documento\n  document.body.appendChild(link);\n  \n  // Hacer clic en el enlace para descargar el archivo\n  link.click();\n  \n  // Eliminar el enlace\n  document.body.removeChild(link);\n};\n\n/**\n * Exporta datos a un archivo JSON\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToJSON = (data, filename) => {\n  if (!data) {\n    return;\n  }\n  \n  // Crear un blob con el contenido del JSON\n  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n  \n  // Crear un enlace para descargar el archivo\n  const link = document.createElement('a');\n  \n  // Crear una URL para el blob\n  const url = URL.createObjectURL(blob);\n  \n  // Configurar el enlace\n  link.setAttribute('href', url);\n  link.setAttribute('download', `${filename}.json`);\n  link.style.visibility = 'hidden';\n  \n  // Agregar el enlace al documento\n  document.body.appendChild(link);\n  \n  // Hacer clic en el enlace para descargar el archivo\n  link.click();\n  \n  // Eliminar el enlace\n  document.body.removeChild(link);\n};\n\n/**\n * Exporta datos a un archivo Excel\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToExcel = (data, filename) => {\n  // Para exportar a Excel, primero exportamos a CSV\n  // y luego cambiamos la extensión a .xlsx\n  exportToCSV(data, filename.replace(/\\.xlsx$/, ''));\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiArrowUp, FiArrowDown, FiDollarSign, FiCreditCard, FiPocket } from 'react-icons/fi';\n\nconst SummaryContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n  margin-bottom: 30px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst SummarySection = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst SectionTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst SectionIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--primary-color);\n  font-size: 1.2rem;\n`;\n\nconst SummaryCard = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  display: flex;\n  flex-direction: column;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  gap: 12px;\n`;\n\nconst IconContainer = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => {\n    switch (props.type) {\n      case 'income': return 'rgba(16, 185, 129, 0.1)';\n      case 'expense': return 'rgba(239, 68, 68, 0.1)';\n      default: return 'rgba(99, 102, 241, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch (props.type) {\n      case 'income': return 'var(--secondary-color)';\n      case 'expense': return 'var(--danger-color)';\n      default: return 'var(--primary-color)';\n    }\n  }};\n  font-size: 1.2rem;\n`;\n\nconst CardTitle = styled.h3`\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 500;\n  color: var(--text-medium);\n`;\n\nconst Amount = styled.div`\n  font-size: 1.8rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n  color: ${props => {\n    switch (props.type) {\n      case 'income': return 'var(--secondary-color)';\n      case 'expense': return 'var(--danger-color)';\n      default: return 'var(--primary-color)';\n    }\n  }};\n`;\n\nconst SecondaryAmount = styled.div`\n  font-size: 1rem;\n  color: var(--text-light);\n`;\n\nconst formatCurrency = (amount, currency = 'ARS') => {\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency\n  }).format(amount);\n};\n\nconst FinancialSummary = ({ transactions, exchangeRate = 1.1 }) => {\n  const [activeTab, setActiveTab] = useState('total');\n\n  // Calcular totales\n  const income = transactions\n    .filter(t => t.type === 'income')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const expense = transactions\n    .filter(t => t.type === 'expense')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const balance = income - expense;\n\n  // Convertir a dólares\n  const balanceUSD = balance * exchangeRate;\n  const incomeUSD = income * exchangeRate;\n  const expenseUSD = expense * exchangeRate;\n\n  // Calcular totales por plataforma\n  const cashTransactions = transactions.filter(t =>\n    t.platform?.toLowerCase().includes('efectivo') ||\n    !t.platform // Si no tiene plataforma, asumimos que es efectivo\n  );\n\n  const digitalTransactions = transactions.filter(t =>\n    t.platform &&\n    !t.platform.toLowerCase().includes('efectivo')\n  );\n\n  // Calcular totales para efectivo\n  const cashIncome = cashTransactions\n    .filter(t => t.type === 'income')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const cashExpense = cashTransactions\n    .filter(t => t.type === 'expense')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const cashBalance = cashIncome - cashExpense;\n\n  // Calcular totales para billeteras virtuales\n  const digitalIncome = digitalTransactions\n    .filter(t => t.type === 'income')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const digitalExpense = digitalTransactions\n    .filter(t => t.type === 'expense')\n    .reduce((sum, t) => sum + t.amount, 0);\n\n  const digitalBalance = digitalIncome - digitalExpense;\n\n  // Determinar qué datos mostrar según la pestaña activa\n  let currentBalance, currentIncome, currentExpense, currentBalanceUSD, currentIncomeUSD, currentExpenseUSD;\n\n  switch (activeTab) {\n    case 'cash':\n      currentBalance = cashBalance;\n      currentIncome = cashIncome;\n      currentExpense = cashExpense;\n      currentBalanceUSD = cashBalance * exchangeRate;\n      currentIncomeUSD = cashIncome * exchangeRate;\n      currentExpenseUSD = cashExpense * exchangeRate;\n      break;\n    case 'digital':\n      currentBalance = digitalBalance;\n      currentIncome = digitalIncome;\n      currentExpense = digitalExpense;\n      currentBalanceUSD = digitalBalance * exchangeRate;\n      currentIncomeUSD = digitalIncome * exchangeRate;\n      currentExpenseUSD = digitalExpense * exchangeRate;\n      break;\n    default: // 'total'\n      currentBalance = balance;\n      currentIncome = income;\n      currentExpense = expense;\n      currentBalanceUSD = balanceUSD;\n      currentIncomeUSD = incomeUSD;\n      currentExpenseUSD = expenseUSD;\n  }\n\n  // Estilos para las pestañas\n  const TabsContainer = styled.div`\n    display: flex;\n    margin-bottom: 20px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  `;\n\n  const Tab = styled.button`\n    background: none;\n    border: none;\n    padding: 10px 20px;\n    font-size: 1rem;\n    font-weight: ${props => props.active ? '600' : '400'};\n    color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-medium)'};\n    cursor: pointer;\n    position: relative;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: -1px;\n      left: 0;\n      width: 100%;\n      height: 2px;\n      background-color: ${props => props.active ? 'var(--primary-color)' : 'transparent'};\n      transition: background-color var(--transition-speed);\n    }\n\n    &:hover {\n      color: var(--primary-color);\n    }\n  `;\n\n  return (\n    <div>\n      <TabsContainer>\n        <Tab\n          active={activeTab === 'total'}\n          onClick={() => setActiveTab('total')}\n        >\n          <FiDollarSign />\n          Total\n        </Tab>\n        <Tab\n          active={activeTab === 'cash'}\n          onClick={() => setActiveTab('cash')}\n        >\n          <FiPocket />\n          Efectivo\n        </Tab>\n        <Tab\n          active={activeTab === 'digital'}\n          onClick={() => setActiveTab('digital')}\n        >\n          <FiCreditCard />\n          Billeteras Virtuales\n        </Tab>\n      </TabsContainer>\n\n      <SummaryContainer>\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"balance\">\n              <FiDollarSign />\n            </IconContainer>\n            <CardTitle>Balance</CardTitle>\n          </CardHeader>\n          <Amount type=\"balance\">{formatCurrency(currentBalance)}</Amount>\n          <SecondaryAmount>{formatCurrency(currentBalanceUSD, 'USD')}</SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"income\">\n              <FiArrowUp />\n            </IconContainer>\n            <CardTitle>Ingresos</CardTitle>\n          </CardHeader>\n          <Amount type=\"income\">{formatCurrency(currentIncome)}</Amount>\n          <SecondaryAmount>{formatCurrency(currentIncomeUSD, 'USD')}</SecondaryAmount>\n        </SummaryCard>\n\n        <SummaryCard>\n          <CardHeader>\n            <IconContainer type=\"expense\">\n              <FiArrowDown />\n            </IconContainer>\n            <CardTitle>Gastos</CardTitle>\n          </CardHeader>\n          <Amount type=\"expense\">{formatCurrency(currentExpense)}</Amount>\n          <SecondaryAmount>{formatCurrency(currentExpenseUSD, 'USD')}</SecondaryAmount>\n        </SummaryCard>\n      </SummaryContainer>\n    </div>\n  );\n};\n\nexport default FinancialSummary;\n","import { useState, useEffect, useRef } from 'react';\n\n/**\n * Hook personalizado para detectar gestos táctiles\n * @param {Object} options - Opciones de configuración\n * @param {number} options.threshold - Umbral de distancia para considerar un gesto (px)\n * @param {number} options.velocityThreshold - Umbral de velocidad para considerar un gesto (px/ms)\n * @param {Function} options.onSwipeLeft - Función a ejecutar al deslizar hacia la izquierda\n * @param {Function} options.onSwipeRight - Función a ejecutar al deslizar hacia la derecha\n * @param {Function} options.onSwipeUp - Función a ejecutar al deslizar hacia arriba\n * @param {Function} options.onSwipeDown - Función a ejecutar al deslizar hacia abajo\n * @param {Function} options.onTap - Función a ejecutar al tocar\n * @param {Function} options.onDoubleTap - Función a ejecutar al tocar dos veces\n * @param {Function} options.onLongPress - Función a ejecutar al mantener presionado\n * @returns {Object} - Propiedades y métodos para manejar gestos\n */\nconst useGestures = ({\n  threshold = 50,\n  velocityThreshold = 0.3,\n  onSwipeLeft = () => {},\n  onSwipeRight = () => {},\n  onSwipeUp = () => {},\n  onSwipeDown = () => {},\n  onTap = () => {},\n  onDoubleTap = () => {},\n  onLongPress = () => {},\n} = {}) => {\n  // Estado para seguir los eventos táctiles\n  const [touchStart, setTouchStart] = useState({ x: 0, y: 0, time: 0 });\n  const [touchEnd, setTouchEnd] = useState({ x: 0, y: 0, time: 0 });\n  const [isTouching, setIsTouching] = useState(false);\n  \n  // Referencias para manejar doble toque y toque largo\n  const lastTap = useRef(0);\n  const longPressTimer = useRef(null);\n  const longPressThreshold = 500; // ms\n  const doubleTapThreshold = 300; // ms\n  \n  // Limpiar el temporizador de toque largo al desmontar\n  useEffect(() => {\n    return () => {\n      if (longPressTimer.current) {\n        clearTimeout(longPressTimer.current);\n      }\n    };\n  }, []);\n  \n  // Manejar el inicio del toque\n  const handleTouchStart = (e) => {\n    const touch = e.touches[0];\n    const now = Date.now();\n    \n    setTouchStart({\n      x: touch.clientX,\n      y: touch.clientY,\n      time: now,\n    });\n    \n    setTouchEnd({\n      x: touch.clientX,\n      y: touch.clientY,\n      time: now,\n    });\n    \n    setIsTouching(true);\n    \n    // Iniciar temporizador para toque largo\n    longPressTimer.current = setTimeout(() => {\n      onLongPress(e);\n    }, longPressThreshold);\n  };\n  \n  // Manejar el movimiento del toque\n  const handleTouchMove = (e) => {\n    const touch = e.touches[0];\n    const now = Date.now();\n    \n    setTouchEnd({\n      x: touch.clientX,\n      y: touch.clientY,\n      time: now,\n    });\n    \n    // Si el usuario mueve el dedo, cancelar el toque largo\n    if (\n      Math.abs(touch.clientX - touchStart.x) > 10 ||\n      Math.abs(touch.clientY - touchStart.y) > 10\n    ) {\n      if (longPressTimer.current) {\n        clearTimeout(longPressTimer.current);\n        longPressTimer.current = null;\n      }\n    }\n  };\n  \n  // Manejar el fin del toque\n  const handleTouchEnd = (e) => {\n    const now = Date.now();\n    setIsTouching(false);\n    \n    // Cancelar el temporizador de toque largo\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current);\n      longPressTimer.current = null;\n    }\n    \n    // Calcular distancias y velocidad\n    const deltaX = touchEnd.x - touchStart.x;\n    const deltaY = touchEnd.y - touchStart.y;\n    const timeElapsed = touchEnd.time - touchStart.time || 1; // Evitar división por cero\n    const velocity = Math.sqrt(deltaX * deltaX + deltaY * deltaY) / timeElapsed;\n    \n    // Detectar gestos de deslizamiento\n    if (Math.abs(deltaX) > threshold || Math.abs(deltaY) > threshold || velocity > velocityThreshold) {\n      // Determinar la dirección del deslizamiento\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        // Deslizamiento horizontal\n        if (deltaX > 0) {\n          onSwipeRight(e);\n        } else {\n          onSwipeLeft(e);\n        }\n      } else {\n        // Deslizamiento vertical\n        if (deltaY > 0) {\n          onSwipeDown(e);\n        } else {\n          onSwipeUp(e);\n        }\n      }\n    } else {\n      // Detectar toque o doble toque\n      const timeSinceLastTap = now - lastTap.current;\n      \n      if (timeSinceLastTap < doubleTapThreshold) {\n        // Doble toque\n        onDoubleTap(e);\n        lastTap.current = 0; // Reiniciar para evitar triples toques\n      } else {\n        // Toque simple\n        onTap(e);\n        lastTap.current = now;\n      }\n    }\n  };\n  \n  // Manejar la cancelación del toque\n  const handleTouchCancel = () => {\n    setIsTouching(false);\n    \n    // Cancelar el temporizador de toque largo\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current);\n      longPressTimer.current = null;\n    }\n  };\n  \n  // Propiedades para adjuntar a un elemento\n  const gestureHandlers = {\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    onTouchCancel: handleTouchCancel,\n  };\n  \n  return {\n    gestureHandlers,\n    touchStart,\n    touchEnd,\n    isTouching,\n  };\n};\n\nexport default useGestures;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\nimport useGestures from '../../hooks/useGestures';\n\n// Contenedor principal\nconst CardContainer = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  touch-action: pan-y;\n  user-select: none;\n`;\n\n// Tarjeta animada\nconst AnimatedCard = styled(animated.div)`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 16px;\n  margin-bottom: 16px;\n  position: relative;\n  z-index: 1;\n`;\n\n// Acciones a la izquierda (aparecen al deslizar a la derecha)\nconst LeftActions = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  color: white;\n  background-color: var(--success-color);\n  border-radius: var(--border-radius);\n`;\n\n// Acciones a la derecha (aparecen al deslizar a la izquierda)\nconst RightActions = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0 16px;\n  color: white;\n  background-color: var(--danger-color);\n  border-radius: var(--border-radius);\n`;\n\n/**\n * Componente de tarjeta deslizable\n * @param {Object} props - Propiedades del componente\n * @param {React.ReactNode} props.children - Contenido de la tarjeta\n * @param {React.ReactNode} props.leftAction - Contenido de la acción izquierda\n * @param {React.ReactNode} props.rightAction - Contenido de la acción derecha\n * @param {Function} props.onSwipeLeft - Función a ejecutar al deslizar a la izquierda\n * @param {Function} props.onSwipeRight - Función a ejecutar al deslizar a la derecha\n * @param {Function} props.onTap - Función a ejecutar al tocar\n * @param {Object} props.style - Estilos adicionales\n * @returns {JSX.Element} - Componente de tarjeta deslizable\n */\nconst SwipeableCard = ({\n  children,\n  leftAction,\n  rightAction,\n  onSwipeLeft,\n  onSwipeRight,\n  onTap,\n  style,\n  ...props\n}) => {\n  const [swiped, setSwiped] = useState(false);\n  \n  // Configurar animación con react-spring\n  const [{ x }, api] = useSpring(() => ({\n    x: 0,\n    config: { tension: 300, friction: 20 },\n  }));\n  \n  // Configurar gestos\n  const { gestureHandlers } = useGestures({\n    threshold: 80,\n    velocityThreshold: 0.5,\n    onSwipeLeft: () => {\n      if (rightAction && onSwipeLeft) {\n        api.start({ x: -200 });\n        setSwiped(true);\n        setTimeout(() => {\n          onSwipeLeft();\n        }, 300);\n      } else {\n        api.start({ x: 0 });\n      }\n    },\n    onSwipeRight: () => {\n      if (leftAction && onSwipeRight) {\n        api.start({ x: 200 });\n        setSwiped(true);\n        setTimeout(() => {\n          onSwipeRight();\n        }, 300);\n      } else {\n        api.start({ x: 0 });\n      }\n    },\n    onTap: () => {\n      if (onTap) {\n        onTap();\n      }\n    },\n  });\n  \n  // Manejar el movimiento del dedo\n  const handleTouchMove = (e) => {\n    if (swiped) return;\n    \n    gestureHandlers.onTouchMove(e);\n    \n    const touch = e.touches[0];\n    const deltaX = touch.clientX - gestureHandlers.touchStart.x;\n    \n    // Limitar el desplazamiento\n    if (\n      (deltaX > 0 && !leftAction) ||\n      (deltaX < 0 && !rightAction) ||\n      Math.abs(deltaX) > 200\n    ) {\n      return;\n    }\n    \n    api.start({ x: deltaX });\n  };\n  \n  return (\n    <CardContainer {...props}>\n      {leftAction && <LeftActions>{leftAction}</LeftActions>}\n      {rightAction && <RightActions>{rightAction}</RightActions>}\n      \n      <AnimatedCard\n        style={{\n          ...style,\n          transform: x.to(x => `translateX(${x}px)`),\n        }}\n        {...gestureHandlers}\n        onTouchMove={handleTouchMove}\n      >\n        {children}\n      </AnimatedCard>\n    </CardContainer>\n  );\n};\n\nexport default SwipeableCard;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport { convertCurrency, formatCurrency, getExchangeRate } from '../../services/currencyService';\n\nconst ConverterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  position: relative;\n`;\n\nconst ConvertedAmount = styled.span`\n  font-size: 0.9rem;\n  color: var(--text-medium);\n  cursor: pointer;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--primary-color);\n  }\n`;\n\nconst ExchangeRateTooltip = styled.div`\n  position: absolute;\n  bottom: -30px;\n  left: 0;\n  background-color: var(--card-bg);\n  padding: 4px 8px;\n  border-radius: var(--border-radius);\n  font-size: 0.8rem;\n  color: var(--text-medium);\n  box-shadow: var(--card-shadow);\n  z-index: 10;\n  white-space: nowrap;\n`;\n\nconst RefreshIcon = styled(FiRefreshCw)`\n  font-size: 0.9rem;\n  animation: ${props => props.isLoading ? 'spin 1s linear infinite' : 'none'};\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\n/**\n * Componente para mostrar un monto convertido a otra moneda\n * @param {Object} props - Propiedades del componente\n * @param {number} props.amount - Monto a convertir\n * @param {string} props.fromCurrency - Moneda de origen\n * @param {string} props.toCurrency - Moneda de destino\n * @returns {JSX.Element} - Componente de conversión de moneda\n */\nconst CurrencyConverter = ({ amount, fromCurrency, toCurrency }) => {\n  const [convertedAmount, setConvertedAmount] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [exchangeRate, setExchangeRate] = useState(null);\n\n  useEffect(() => {\n    const fetchConvertedAmount = async () => {\n      try {\n        setIsLoading(true);\n\n        // Obtener tasa de cambio\n        const rate = await getExchangeRate(fromCurrency, toCurrency);\n        setExchangeRate(rate);\n\n        // Convertir monto\n        const converted = await convertCurrency(amount, fromCurrency, toCurrency);\n        setConvertedAmount(converted);\n      } catch (error) {\n        console.error('Error al convertir moneda:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchConvertedAmount();\n  }, [amount, fromCurrency, toCurrency]);\n\n  const handleRefresh = async (e) => {\n    e.stopPropagation();\n\n    try {\n      setIsLoading(true);\n\n      // Forzar actualización de tasas (no usar caché)\n      localStorage.removeItem('exchange_rates');\n\n      // Obtener tasa de cambio\n      const rate = await getExchangeRate(fromCurrency, toCurrency);\n      setExchangeRate(rate);\n\n      // Convertir monto\n      const converted = await convertCurrency(amount, fromCurrency, toCurrency);\n      setConvertedAmount(converted);\n    } catch (error) {\n      console.error('Error al actualizar tasa de cambio:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (fromCurrency === toCurrency) {\n    return null;\n  }\n\n  return (\n    <ConverterContainer>\n      <ConvertedAmount\n        onClick={() => setShowTooltip(!showTooltip)}\n        onMouseEnter={() => setShowTooltip(true)}\n        onMouseLeave={() => setShowTooltip(false)}\n        role=\"button\"\n        tabIndex={0}\n        aria-label={`Valor convertido: ${convertedAmount ? formatCurrency(convertedAmount, toCurrency) : 'Cargando...'}`}\n        aria-expanded={showTooltip}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            setShowTooltip(!showTooltip);\n            e.preventDefault();\n          }\n        }}\n      >\n        {isLoading ? (\n          <RefreshIcon isLoading={true} aria-hidden=\"true\" />\n        ) : (\n          <>\n            ({formatCurrency(convertedAmount, toCurrency)})\n            <RefreshIcon\n              onClick={(e) => {\n                e.stopPropagation();\n                handleRefresh(e);\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  handleRefresh(e);\n                  e.preventDefault();\n                }\n              }}\n              style={{ marginLeft: '4px', cursor: 'pointer' }}\n              role=\"button\"\n              tabIndex={0}\n              aria-label=\"Actualizar tasa de cambio\"\n            />\n          </>\n        )}\n      </ConvertedAmount>\n\n      {showTooltip && exchangeRate && (\n        <ExchangeRateTooltip role=\"tooltip\">\n          1 {fromCurrency} = {exchangeRate.toFixed(2)} {toCurrency}\n        </ExchangeRateTooltip>\n      )}\n    </ConverterContainer>\n  );\n};\n\nexport default CurrencyConverter;\n","import React, { memo, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { FiArrowUp, FiArrowDown, FiEdit2, FiTrash2, FiDollarSign, FiCreditCard, FiCheck } from 'react-icons/fi';\nimport SwipeableCard from '../common/SwipeableCard';\nimport CurrencyConverter from '../common/CurrencyConverter';\nimport { formatCurrency } from '../../services/currencyService';\n\nconst TransactionContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 16px;\n  margin-bottom: 12px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: var(--card-shadow-hover);\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 12px;\n  }\n`;\n\nconst TransactionInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nconst IconContainer = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.type === 'income'\n    ? 'rgba(16, 185, 129, 0.1)'\n    : 'rgba(239, 68, 68, 0.1)'\n  };\n  color: ${props => props.type === 'income'\n    ? 'var(--secondary-color)'\n    : 'var(--danger-color)'\n  };\n  font-size: 1.2rem;\n`;\n\nconst TransactionDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TransactionTitle = styled.h3`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst TransactionCategory = styled.span`\n  font-size: 0.85rem;\n  color: var(--text-medium);\n  margin-top: 4px;\n`;\n\nconst TransactionPlatform = styled.span`\n  font-size: 0.85rem;\n  color: ${props => props.type === 'cash' ? 'var(--accent-color)' : 'var(--primary-color)'};\n  margin-top: 4px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nconst TransactionDate = styled.span`\n  font-size: 0.85rem;\n  color: var(--text-light);\n  margin-top: 4px;\n`;\n\nconst TransactionAmount = styled.div`\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: ${props => props.type === 'income'\n    ? 'var(--secondary-color)'\n    : 'var(--danger-color)'\n  };\n`;\n\nconst TransactionActions = styled.div`\n  display: flex;\n  gap: 8px;\n\n  @media (max-width: 768px) {\n    margin-left: auto;\n  }\n`;\n\nconst TransactionAmountContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\n// Estilos para las acciones de deslizamiento\nconst SwipeAction = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  height: 100%;\n  width: 80px;\n  color: white;\n`;\n\nconst DeleteAction = styled(SwipeAction)`\n  background-color: var(--danger-color);\n`;\n\nconst EditAction = styled(SwipeAction)`\n  background-color: var(--primary-color);\n`;\n\n\n\nconst formatDate = (dateString) => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('es-ES');\n};\n\nconst getCategoryName = (category) => {\n  // Intentar obtener categorías personalizadas del localStorage\n  let expenseCategories = [];\n  let incomeCategories = [];\n\n  try {\n    const savedExpenseCategories = localStorage.getItem('expenseCategories');\n    const savedIncomeCategories = localStorage.getItem('incomeCategories');\n\n    if (savedExpenseCategories) {\n      expenseCategories = JSON.parse(savedExpenseCategories);\n    }\n\n    if (savedIncomeCategories) {\n      incomeCategories = JSON.parse(savedIncomeCategories);\n    }\n  } catch (error) {\n    console.error('Error al cargar categorías:', error);\n  }\n\n  // Buscar en las categorías personalizadas\n  const allCategories = [...expenseCategories, ...incomeCategories];\n  const foundCategory = allCategories.find(cat => cat.id === category);\n\n  if (foundCategory) {\n    return foundCategory.name;\n  }\n\n  // Categorías por defecto si no se encuentra\n  const defaultCategories = {\n    food: 'Alimentación',\n    transport: 'Transporte',\n    housing: 'Vivienda',\n    entertainment: 'Entretenimiento',\n    utilities: 'Servicios',\n    health: 'Salud',\n    education: 'Educación',\n    shopping: 'Compras',\n    salary: 'Salario',\n    investment: 'Inversión',\n    gift: 'Regalo',\n    other: 'Otro'\n  };\n\n  return defaultCategories[category] || category;\n};\n\n// Función para extraer información de la plataforma\nconst getPlatformInfo = (platformString) => {\n  if (!platformString) {\n    return { type: 'virtual', name: '' };\n  }\n\n  // Verificar si la plataforma tiene el formato \"tipo:nombre\"\n  if (platformString.includes(':')) {\n    const [type, name] = platformString.split(':');\n    return { type, name };\n  }\n\n  // Si no tiene el formato, intentar determinar el tipo\n  try {\n    // Intentar obtener plataformas guardadas\n    const savedCashPlatforms = localStorage.getItem('cashPlatforms');\n\n    if (savedCashPlatforms) {\n      const cashPlatforms = JSON.parse(savedCashPlatforms);\n      if (cashPlatforms.includes(platformString)) {\n        return { type: 'cash', name: platformString };\n      }\n    }\n\n    // Plataformas de efectivo por defecto\n    const defaultCashPlatforms = ['Efectivo', 'Caja chica', 'Caja fuerte'];\n    if (defaultCashPlatforms.includes(platformString)) {\n      return { type: 'cash', name: platformString };\n    }\n\n    return { type: 'virtual', name: platformString };\n  } catch (error) {\n    console.error('Error al determinar tipo de plataforma:', error);\n    return { type: 'virtual', name: platformString };\n  }\n};\n\nconst TransactionItem = ({ transaction, onEdit, onDelete }) => {\n  const { id, title, amount, type, category, platform, date, currency = 'ARS' } = transaction;\n  const { type: platformType, name: platformName } = getPlatformInfo(platform);\n\n  // Memorizar los manejadores de eventos para evitar re-renderizados innecesarios\n  const handleEdit = useCallback(() => {\n    onEdit(transaction);\n  }, [transaction, onEdit]);\n\n  const handleDelete = useCallback(() => {\n    onDelete(id);\n  }, [id, onDelete]);\n\n  // Memorizar el formato de la fecha y el monto para evitar cálculos repetidos\n  const formattedDate = useMemo(() => formatDate(date), [date]);\n  const formattedAmount = useMemo(() => formatCurrency(amount, currency), [amount, currency]);\n  const categoryName = useMemo(() => getCategoryName(category), [category]);\n\n  // Detectar si estamos en un dispositivo móvil\n  const isMobile = useMemo(() => window.innerWidth <= 768, []);\n\n  // Si estamos en un dispositivo móvil, usar SwipeableCard\n  if (isMobile) {\n    return (\n      <SwipeableCard\n        leftAction={<EditAction><FiEdit2 /></EditAction>}\n        rightAction={<DeleteAction><FiTrash2 /></DeleteAction>}\n        onSwipeLeft={handleDelete}\n        onSwipeRight={handleEdit}\n        onTap={handleEdit}\n      >\n        <TransactionInfo>\n          <IconContainer type={type}>\n            {type === 'income' ? <FiArrowUp /> : <FiArrowDown />}\n          </IconContainer>\n\n          <TransactionDetails>\n            <TransactionTitle>{title}</TransactionTitle>\n            <TransactionCategory>{categoryName}</TransactionCategory>\n            {platform && (\n              <TransactionPlatform type={platformType}>\n                {platformType === 'cash' ? <FiDollarSign /> : <FiCreditCard />}\n                {platformName}\n              </TransactionPlatform>\n            )}\n            <TransactionDate>{formattedDate}</TransactionDate>\n          </TransactionDetails>\n\n          <TransactionAmount type={type} style={{ marginLeft: 'auto' }}>\n            {type === 'income' ? '+' : '-'} {formattedAmount}\n            {/* Mostrar conversión de moneda */}\n            {currency === 'ARS' ? (\n              <CurrencyConverter\n                amount={parseFloat(amount)}\n                fromCurrency=\"ARS\"\n                toCurrency=\"USD\"\n              />\n            ) : (\n              <CurrencyConverter\n                amount={parseFloat(amount)}\n                fromCurrency=\"USD\"\n                toCurrency=\"ARS\"\n              />\n            )}\n          </TransactionAmount>\n        </TransactionInfo>\n      </SwipeableCard>\n    );\n  }\n\n  // En dispositivos de escritorio, usar el diseño original\n  return (\n    <TransactionContainer>\n      <TransactionInfo>\n        <IconContainer type={type}>\n          {type === 'income' ? <FiArrowUp /> : <FiArrowDown />}\n        </IconContainer>\n\n        <TransactionDetails>\n          <TransactionTitle>{title}</TransactionTitle>\n          <TransactionCategory>{categoryName}</TransactionCategory>\n          {platform && (\n            <TransactionPlatform type={platformType}>\n              {platformType === 'cash' ? <FiDollarSign /> : <FiCreditCard />}\n              {platformName}\n            </TransactionPlatform>\n          )}\n          <TransactionDate>{formattedDate}</TransactionDate>\n        </TransactionDetails>\n      </TransactionInfo>\n\n      <TransactionAmountContainer>\n        <TransactionAmount type={type}>\n          {type === 'income' ? '+' : '-'} {formattedAmount}\n          {/* Mostrar conversión de moneda */}\n          {currency === 'ARS' ? (\n            <CurrencyConverter\n              amount={parseFloat(amount)}\n              fromCurrency=\"ARS\"\n              toCurrency=\"USD\"\n            />\n          ) : (\n            <CurrencyConverter\n              amount={parseFloat(amount)}\n              fromCurrency=\"USD\"\n              toCurrency=\"ARS\"\n            />\n          )}\n        </TransactionAmount>\n\n        <TransactionActions>\n          <ActionButton onClick={handleEdit} color=\"var(--primary-color)\" aria-label=\"Editar\">\n            <FiEdit2 />\n          </ActionButton>\n          <ActionButton onClick={handleDelete} color=\"var(--danger-color)\" aria-label=\"Eliminar\">\n            <FiTrash2 />\n          </ActionButton>\n        </TransactionActions>\n      </TransactionAmountContainer>\n    </TransactionContainer>\n  );\n};\n\n// Exportar componente memorizado para evitar re-renderizados innecesarios\nexport default memo(TransactionItem);\n","import { useState, useEffect, useCallback, useRef } from 'react';\n\n/**\n * Hook personalizado para carga progresiva de datos\n * @param {Function} fetchFunction - Función para obtener datos\n * @param {Object} options - Opciones de configuración\n * @param {number} options.initialPageSize - Tamaño inicial de página\n * @param {number} options.incrementSize - Incremento de tamaño en cada carga\n * @param {number} options.maxItems - Número máximo de elementos a cargar\n * @param {boolean} options.loadOnMount - Cargar datos al montar el componente\n * @param {Array} options.dependencies - Dependencias para recargar datos\n * @returns {Object} - Estado y funciones para manejar la carga progresiva\n */\nconst useProgressiveLoading = (\n  fetchFunction,\n  {\n    initialPageSize = 10,\n    incrementSize = 10,\n    maxItems = 100,\n    loadOnMount = true,\n    dependencies = []\n  } = {}\n) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hasMore, setHasMore] = useState(true);\n  const [pageSize, setPageSize] = useState(initialPageSize);\n  const [totalCount, setTotalCount] = useState(0);\n  \n  // Referencia para evitar cargas duplicadas\n  const loadingRef = useRef(false);\n  \n  // Función para cargar datos\n  const loadData = useCallback(async (reset = false) => {\n    // Evitar cargas duplicadas\n    if (loadingRef.current) return;\n    \n    try {\n      loadingRef.current = true;\n      setLoading(true);\n      setError(null);\n      \n      // Si es reset, reiniciar el estado\n      if (reset) {\n        setData([]);\n        setPageSize(initialPageSize);\n        setHasMore(true);\n      }\n      \n      // Calcular parámetros de paginación\n      const start = reset ? 0 : data.length;\n      const end = reset ? initialPageSize : data.length + pageSize;\n      \n      // Llamar a la función de obtención de datos\n      const result = await fetchFunction({ start, end });\n      \n      // Actualizar estado\n      if (reset) {\n        setData(result.data || []);\n      } else {\n        setData(prevData => [...prevData, ...(result.data || [])]);\n      }\n      \n      // Actualizar contador total si está disponible\n      if (result.count !== undefined) {\n        setTotalCount(result.count);\n      }\n      \n      // Verificar si hay más datos para cargar\n      const loadedCount = reset ? (result.data || []).length : data.length + (result.data || []).length;\n      const hasMoreData = result.hasMore !== undefined \n        ? result.hasMore \n        : (result.count !== undefined ? loadedCount < result.count : (result.data || []).length > 0);\n      \n      setHasMore(hasMoreData && loadedCount < maxItems);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n      loadingRef.current = false;\n    }\n  }, [fetchFunction, data.length, pageSize, initialPageSize, maxItems]);\n  \n  // Función para cargar más datos\n  const loadMore = useCallback(() => {\n    if (!loading && hasMore) {\n      setPageSize(prevSize => prevSize + incrementSize);\n      loadData();\n    }\n  }, [loading, hasMore, incrementSize, loadData]);\n  \n  // Función para recargar datos\n  const refresh = useCallback(() => {\n    return loadData(true);\n  }, [loadData]);\n  \n  // Cargar datos al montar el componente o cuando cambian las dependencias\n  useEffect(() => {\n    if (loadOnMount) {\n      refresh();\n    }\n  }, [loadOnMount, refresh, ...dependencies]);\n  \n  return {\n    data,\n    loading,\n    error,\n    hasMore,\n    loadMore,\n    refresh,\n    totalCount,\n    loadedCount: data.length\n  };\n};\n\nexport default useProgressiveLoading;\n","import React, { useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { FiLoader } from 'react-icons/fi';\nimport useProgressiveLoading from '../../hooks/useProgressiveLoading';\n\n// Estilos\nconst ListContainer = styled.div`\n  position: relative;\n`;\n\nconst LoadingIndicator = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  color: var(--text-medium);\n  \n  svg {\n    animation: spin 1s linear infinite;\n    margin-right: 8px;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst LoadMoreButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius);\n  padding: 8px 16px;\n  font-size: 0.9rem;\n  cursor: pointer;\n  margin: 16px auto;\n  display: block;\n  transition: all 0.3s;\n  \n  &:hover {\n    background-color: var(--primary-color-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  text-align: center;\n  padding: 16px;\n  margin: 16px 0;\n  background-color: rgba(255, 99, 132, 0.1);\n  border-radius: var(--border-radius);\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  padding: 32px 16px;\n  color: var(--text-medium);\n`;\n\n/**\n * Componente para carga progresiva de listas\n * @param {Object} props - Propiedades del componente\n * @param {Function} props.fetchFunction - Función para obtener datos\n * @param {Function} props.renderItem - Función para renderizar cada elemento\n * @param {string} props.keyExtractor - Función para extraer la clave de cada elemento\n * @param {number} props.initialPageSize - Tamaño inicial de página\n * @param {number} props.incrementSize - Incremento de tamaño en cada carga\n * @param {boolean} props.useInfiniteScroll - Usar scroll infinito en lugar de botón\n * @param {string} props.emptyMessage - Mensaje cuando no hay datos\n * @param {string} props.loadingMessage - Mensaje durante la carga\n * @param {string} props.errorMessage - Mensaje de error\n * @param {string} props.loadMoreText - Texto del botón de cargar más\n * @param {Array} props.dependencies - Dependencias para recargar datos\n * @returns {JSX.Element} - Componente de lista progresiva\n */\nconst ProgressiveList = ({\n  fetchFunction,\n  renderItem,\n  keyExtractor,\n  initialPageSize = 10,\n  incrementSize = 10,\n  useInfiniteScroll = true,\n  emptyMessage = 'No hay elementos para mostrar',\n  loadingMessage = 'Cargando...',\n  errorMessage = 'Error al cargar los datos',\n  loadMoreText = 'Cargar más',\n  dependencies = [],\n  ...props\n}) => {\n  // Referencia al elemento observado para scroll infinito\n  const observerTarget = useRef(null);\n  \n  // Usar hook de carga progresiva\n  const {\n    data,\n    loading,\n    error,\n    hasMore,\n    loadMore,\n    refresh,\n    totalCount,\n    loadedCount\n  } = useProgressiveLoading(fetchFunction, {\n    initialPageSize,\n    incrementSize,\n    loadOnMount: true,\n    dependencies\n  });\n  \n  // Configurar observer para scroll infinito\n  useEffect(() => {\n    if (!useInfiniteScroll || !observerTarget.current || loading || !hasMore) {\n      return;\n    }\n    \n    const observer = new IntersectionObserver(\n      entries => {\n        if (entries[0].isIntersecting) {\n          loadMore();\n        }\n      },\n      { threshold: 0.1 }\n    );\n    \n    observer.observe(observerTarget.current);\n    \n    return () => {\n      if (observerTarget.current) {\n        observer.unobserve(observerTarget.current);\n      }\n    };\n  }, [useInfiniteScroll, loading, hasMore, loadMore]);\n  \n  // Renderizar elementos de la lista\n  const renderItems = useCallback(() => {\n    if (data.length === 0 && !loading) {\n      return <EmptyMessage>{emptyMessage}</EmptyMessage>;\n    }\n    \n    return data.map((item, index) => (\n      <React.Fragment key={keyExtractor ? keyExtractor(item) : index}>\n        {renderItem(item, index)}\n      </React.Fragment>\n    ));\n  }, [data, loading, emptyMessage, renderItem, keyExtractor]);\n  \n  return (\n    <ListContainer {...props}>\n      {renderItems()}\n      \n      {error && (\n        <ErrorMessage>\n          {errorMessage}: {error.message}\n        </ErrorMessage>\n      )}\n      \n      {loading && (\n        <LoadingIndicator>\n          <FiLoader /> {loadingMessage}\n        </LoadingIndicator>\n      )}\n      \n      {!useInfiniteScroll && hasMore && !loading && (\n        <LoadMoreButton onClick={loadMore} disabled={loading}>\n          {loadMoreText}\n        </LoadMoreButton>\n      )}\n      \n      {useInfiniteScroll && hasMore && (\n        <div ref={observerTarget} style={{ height: '20px' }} />\n      )}\n      \n      {totalCount > 0 && (\n        <div style={{ textAlign: 'center', color: 'var(--text-light)', fontSize: '0.9rem', margin: '8px 0' }}>\n          Mostrando {loadedCount} de {totalCount} elementos\n        </div>\n      )}\n    </ListContainer>\n  );\n};\n\nexport default ProgressiveList;\n","import { useMemo } from 'react';\n\n/**\n * Hook personalizado para memoizar listas de elementos\n * Útil para evitar re-renderizados innecesarios en listas\n * @param {Array} list - Lista de elementos\n * @param {Function} getItemKey - Función para obtener la clave única de cada elemento\n * @param {Function} mapItem - Función para transformar cada elemento\n * @param {Array} deps - Dependencias adicionales\n * @returns {Array} - Lista memoizada\n */\nconst useMemoizedList = (list, getItemKey, mapItem, deps = []) => {\n  // Memoizar las claves de los elementos\n  const keys = useMemo(() => {\n    return list.map(item => getItemKey(item));\n  }, [list, getItemKey]);\n  \n  // Memoizar la lista transformada\n  return useMemo(() => {\n    return list.map(item => mapItem(item));\n  }, [list, mapItem, keys, ...deps]);\n};\n\nexport default useMemoizedList;\n","import React, { memo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport TransactionItem from './TransactionItem';\nimport ProgressiveList from '../common/ProgressiveList';\nimport { getTransactionsPaginated } from '../../services/transactionService';\nimport useMemoizedList from '../../hooks/useMemoizedList';\nimport AnimatedButton from '../common/AnimatedButton';\n\nconst ListContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 30px 0;\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n`;\n\nconst FilterInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  color: var(--text-medium);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n  }\n`;\n\nconst FilterCount = styled.span`\n  font-weight: 500;\n`;\n\n// Componente de elemento de transacción memorizado\nconst MemoizedTransactionItem = memo(TransactionItem);\n\n/**\n * Componente de lista de transacciones con carga progresiva\n * @param {Object} props - Propiedades del componente\n * @param {Array} props.transactions - Lista de transacciones (opcional, para compatibilidad)\n * @param {Function} props.onEditTransaction - Función para editar transacción\n * @param {Function} props.onDeleteTransaction - Función para eliminar transacción\n * @param {Object} props.filters - Filtros a aplicar\n * @param {Object} props.sortConfig - Configuración de ordenamiento\n * @param {boolean} props.useProgressiveLoading - Usar carga progresiva (por defecto: true)\n * @returns {JSX.Element} - Componente de lista de transacciones\n */\nconst TransactionList = ({\n  transactions,\n  onEditTransaction,\n  onDeleteTransaction,\n  filters = {},\n  sortConfig = { column: 'date', direction: 'desc' },\n  useProgressiveLoading = true\n}) => {\n  // Función para obtener transacciones paginadas\n  const fetchTransactions = useCallback(async ({ start, end }) => {\n    try {\n      // Si se proporcionan transacciones directamente, usarlas (para compatibilidad)\n      if (transactions) {\n        return {\n          data: transactions.slice(start, end),\n          count: transactions.length,\n          hasMore: transactions.length > end\n        };\n      }\n\n      // Si no, obtener de la API con paginación\n      return await getTransactionsPaginated({\n        start,\n        end,\n        filters,\n        sort: {\n          column: sortConfig.column || 'date',\n          direction: sortConfig.direction || 'desc'\n        }\n      });\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n      return { data: [], count: 0, hasMore: false };\n    }\n  }, [transactions, filters, sortConfig]);\n\n  // Función para renderizar cada transacción\n  const renderTransaction = useCallback((transaction) => (\n    <MemoizedTransactionItem\n      key={transaction.id}\n      transaction={transaction}\n      onEdit={onEditTransaction}\n      onDelete={onDeleteTransaction}\n    />\n  ), [onEditTransaction, onDeleteTransaction]);\n\n  // Función para extraer la clave de cada transacción\n  const getTransactionKey = useCallback((transaction) => transaction.id, []);\n\n  // Usar hook de memoización de listas para optimizar rendimiento\n  const memoizedItems = useMemoizedList(\n    transactions || [],\n    getTransactionKey,\n    renderTransaction,\n    [onEditTransaction, onDeleteTransaction]\n  );\n\n  // Si no se usa carga progresiva, renderizar la lista tradicional\n  if (!useProgressiveLoading && transactions) {\n    if (!transactions || transactions.length === 0) {\n      return (\n        <ListContainer>\n          <EmptyMessage>\n            No hay transacciones. ¡Registra una nueva!\n          </EmptyMessage>\n        </ListContainer>\n      );\n    }\n\n    return (\n      <ListContainer>\n        {memoizedItems}\n      </ListContainer>\n    );\n  }\n\n  // Renderizar con carga progresiva\n  return (\n    <ListContainer>\n      <ProgressiveList\n        fetchFunction={fetchTransactions}\n        renderItem={renderTransaction}\n        keyExtractor={getTransactionKey}\n        initialPageSize={10}\n        incrementSize={10}\n        useInfiniteScroll={true}\n        emptyMessage=\"No hay transacciones. ¡Registra una nueva!\"\n        loadingMessage=\"Cargando transacciones...\"\n        errorMessage=\"Error al cargar las transacciones\"\n        loadMoreText=\"Cargar más transacciones\"\n        dependencies={[filters, sortConfig]}\n      />\n    </ListContainer>\n  );\n};\n\n// Exportar componente memorizado para evitar re-renderizados innecesarios\nexport default memo(TransactionList);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus, FiEdit2, FiTrash2, FiX, FiCheck, FiSave } from 'react-icons/fi';\n\nconst ManagerContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst ManagerHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst ManagerTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst Tab = styled.button`\n  background: none;\n  border: none;\n  padding: 10px 20px;\n  font-size: 1rem;\n  font-weight: ${props => props.active ? '600' : '400'};\n  color: ${props => props.active ? 'var(--primary-color)' : 'var(--text-medium)'};\n  cursor: pointer;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: ${props => props.active ? 'var(--primary-color)' : 'transparent'};\n    transition: background-color var(--transition-speed);\n  }\n\n  &:hover {\n    color: var(--primary-color);\n  }\n`;\n\nconst CategoriesList = styled.div`\n  margin-bottom: 20px;\n  max-height: 300px;\n  overflow-y: auto;\n`;\n\nconst CategoryItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  margin-bottom: 8px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  transition: all var(--transition-speed);\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst CategoryName = styled.div`\n  font-weight: 500;\n  color: var(--text-dark);\n`;\n\nconst CategoryActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst AddCategoryForm = styled.form`\n  display: flex;\n  gap: 12px;\n  margin-top: 16px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst AddButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 0 16px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 2px 4px rgba(99, 102, 241, 0.2);\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst SaveButton = styled.button`\n  background-color: var(--secondary-color);\n  color: white;\n  border: none;\n  padding: 10px 16px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  box-shadow: 0 2px 4px rgba(16, 185, 129, 0.2);\n  margin-top: 16px;\n  width: 100%;\n\n  &:hover {\n    background-color: var(--secondary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(16, 185, 129, 0.3);\n  }\n`;\n\nconst EditForm = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst EditInput = styled.input`\n  flex: 1;\n  padding: 8px 12px;\n  border: 1px solid var(--primary-color);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst EditActions = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nconst CategoryManager = ({ onClose, onCategoriesChange }) => {\n  const [activeTab, setActiveTab] = useState('expense');\n  const [expenseCategories, setExpenseCategories] = useState([\n    { id: 'food', name: 'Alimentación' },\n    { id: 'transport', name: 'Transporte' },\n    { id: 'housing', name: 'Vivienda' },\n    { id: 'entertainment', name: 'Entretenimiento' },\n    { id: 'utilities', name: 'Servicios' },\n    { id: 'health', name: 'Salud' },\n    { id: 'education', name: 'Educación' },\n    { id: 'shopping', name: 'Compras' },\n    { id: 'other', name: 'Otro' }\n  ]);\n\n  const [incomeCategories, setIncomeCategories] = useState([\n    { id: 'salary', name: 'Salario' },\n    { id: 'investment', name: 'Inversión' },\n    { id: 'gift', name: 'Regalo' },\n    { id: 'other', name: 'Otro' }\n  ]);\n\n  const [newCategory, setNewCategory] = useState('');\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editValue, setEditValue] = useState('');\n\n\n\n  // Cargar categorías guardadas al iniciar\n  useEffect(() => {\n    const savedExpenseCategories = localStorage.getItem('expenseCategories');\n    const savedIncomeCategories = localStorage.getItem('incomeCategories');\n\n    if (savedExpenseCategories) {\n      setExpenseCategories(JSON.parse(savedExpenseCategories));\n    }\n\n    if (savedIncomeCategories) {\n      setIncomeCategories(JSON.parse(savedIncomeCategories));\n    }\n  }, []);\n\n  // Función para guardar categorías manualmente\n  const saveCategories = () => {\n    try {\n      localStorage.setItem('expenseCategories', JSON.stringify(expenseCategories));\n      localStorage.setItem('incomeCategories', JSON.stringify(incomeCategories));\n\n      // Notificar al componente padre sobre el cambio de categorías\n      onCategoriesChange({\n        expense: expenseCategories,\n        income: incomeCategories\n      });\n\n      alert('Categorías guardadas correctamente');\n    } catch (error) {\n      console.error('Error al guardar categorías:', error);\n      alert('Error al guardar categorías');\n    }\n  };\n\n  const handleAddCategory = (e) => {\n    e.preventDefault();\n\n    if (!newCategory.trim()) return;\n\n    const newId = newCategory.toLowerCase().replace(/\\s+/g, '_');\n\n    if (activeTab === 'expense') {\n      // Verificar si ya existe\n      if (expenseCategories.some(cat => cat.id === newId || cat.name === newCategory)) {\n        alert('Esta categoría ya existe');\n        return;\n      }\n\n      setExpenseCategories([...expenseCategories, { id: newId, name: newCategory }]);\n    } else {\n      // Verificar si ya existe\n      if (incomeCategories.some(cat => cat.id === newId || cat.name === newCategory)) {\n        alert('Esta categoría ya existe');\n        return;\n      }\n\n      setIncomeCategories([...incomeCategories, { id: newId, name: newCategory }]);\n    }\n\n    setNewCategory('');\n  };\n\n  const handleEditCategory = (category) => {\n    setEditingCategory(category.id);\n    setEditValue(category.name);\n  };\n\n  const handleSaveEdit = (categoryId) => {\n    if (!editValue.trim()) return;\n\n    if (activeTab === 'expense') {\n      // Verificar si ya existe (excepto la que estamos editando)\n      if (expenseCategories.some(cat => cat.id !== categoryId && cat.name === editValue)) {\n        alert('Ya existe una categoría con este nombre');\n        return;\n      }\n\n      setExpenseCategories(expenseCategories.map(cat =>\n        cat.id === categoryId ? { ...cat, name: editValue } : cat\n      ));\n    } else {\n      // Verificar si ya existe (excepto la que estamos editando)\n      if (incomeCategories.some(cat => cat.id !== categoryId && cat.name === editValue)) {\n        alert('Ya existe una categoría con este nombre');\n        return;\n      }\n\n      setIncomeCategories(incomeCategories.map(cat =>\n        cat.id === categoryId ? { ...cat, name: editValue } : cat\n      ));\n    }\n\n    setEditingCategory(null);\n    setEditValue('');\n  };\n\n  const handleCancelEdit = () => {\n    setEditingCategory(null);\n    setEditValue('');\n  };\n\n  const handleDeleteCategory = (categoryId) => {\n    // No permitir eliminar la categoría \"Otro\"\n    if (categoryId === 'other') {\n      alert('No se puede eliminar la categoría \"Otro\"');\n      return;\n    }\n\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta categoría?')) {\n      if (activeTab === 'expense') {\n        setExpenseCategories(expenseCategories.filter(cat => cat.id !== categoryId));\n      } else {\n        setIncomeCategories(incomeCategories.filter(cat => cat.id !== categoryId));\n      }\n    }\n  };\n\n  const currentCategories = activeTab === 'expense' ? expenseCategories : incomeCategories;\n\n  return (\n    <ManagerContainer>\n      <ManagerHeader>\n        <ManagerTitle>Gestionar Categorías</ManagerTitle>\n        <CloseButton onClick={onClose}>\n          <FiX />\n        </CloseButton>\n      </ManagerHeader>\n\n      <TabsContainer>\n        <Tab\n          active={activeTab === 'expense'}\n          onClick={() => setActiveTab('expense')}\n        >\n          Categorías de Gastos\n        </Tab>\n        <Tab\n          active={activeTab === 'income'}\n          onClick={() => setActiveTab('income')}\n        >\n          Categorías de Ingresos\n        </Tab>\n      </TabsContainer>\n\n      <CategoriesList>\n        {currentCategories.map(category => (\n          <CategoryItem key={category.id}>\n            {editingCategory === category.id ? (\n              <EditForm>\n                <EditInput\n                  type=\"text\"\n                  value={editValue}\n                  onChange={(e) => setEditValue(e.target.value)}\n                  autoFocus\n                />\n                <EditActions>\n                  <ActionButton\n                    onClick={() => handleSaveEdit(category.id)}\n                    color=\"var(--secondary-color)\"\n                  >\n                    <FiCheck />\n                  </ActionButton>\n                  <ActionButton\n                    onClick={handleCancelEdit}\n                    color=\"var(--danger-color)\"\n                  >\n                    <FiX />\n                  </ActionButton>\n                </EditActions>\n              </EditForm>\n            ) : (\n              <>\n                <CategoryName>{category.name}</CategoryName>\n                <CategoryActions>\n                  <ActionButton\n                    onClick={() => handleEditCategory(category)}\n                    color=\"var(--primary-color)\"\n                    disabled={category.id === 'other'}\n                  >\n                    <FiEdit2 />\n                  </ActionButton>\n                  <ActionButton\n                    onClick={() => handleDeleteCategory(category.id)}\n                    color=\"var(--danger-color)\"\n                    disabled={category.id === 'other'}\n                  >\n                    <FiTrash2 />\n                  </ActionButton>\n                </CategoryActions>\n              </>\n            )}\n          </CategoryItem>\n        ))}\n      </CategoriesList>\n\n      <AddCategoryForm onSubmit={handleAddCategory}>\n        <Input\n          type=\"text\"\n          placeholder=\"Nueva categoría...\"\n          value={newCategory}\n          onChange={(e) => setNewCategory(e.target.value)}\n        />\n        <AddButton type=\"submit\">\n          <FiPlus />\n        </AddButton>\n      </AddCategoryForm>\n\n      <SaveButton onClick={saveCategories}>\n        <FiSave />\n        Guardar Cambios\n      </SaveButton>\n    </ManagerContainer>\n  );\n};\n\nexport default CategoryManager;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiX, FiPlus, FiTrash2, FiSave } from 'react-icons/fi';\n\nconst ManagerContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst ManagerHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst ManagerTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.1rem;\n  font-weight: 600;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--text-dark);\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst PlatformTypeContainer = styled.div`\n  margin-bottom: 24px;\n`;\n\nconst PlatformTypeTitle = styled.h4`\n  margin: 0 0 12px 0;\n  color: var(--text-dark);\n  font-size: 1rem;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${props => props.type === 'cash'\n      ? 'var(--accent-color)'\n      : 'var(--primary-color)'};\n  }\n`;\n\nconst PlatformList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst PlatformItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 12px;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  margin-bottom: 8px;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: var(--bg-medium);\n  }\n`;\n\nconst PlatformName = styled.span`\n  color: var(--text-dark);\n  font-size: 0.95rem;\n`;\n\nconst DeleteButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst AddPlatformForm = styled.form`\n  display: flex;\n  gap: 8px;\n  margin-top: 12px;\n`;\n\nconst Input = styled.input`\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst AddButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 10px 16px;\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: var(--primary-dark);\n  }\n\n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n`;\n\nconst SaveButton = styled.button`\n  background-color: var(--secondary-color);\n  color: white;\n  border: none;\n  padding: 10px 16px;\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  box-shadow: 0 2px 4px rgba(16, 185, 129, 0.2);\n  margin-top: 16px;\n  width: 100%;\n\n  &:hover {\n    background-color: var(--secondary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 6px rgba(16, 185, 129, 0.3);\n  }\n`;\n\n// Plataformas predeterminadas\nconst defaultPlatforms = {\n  cash: ['Efectivo', 'Caja chica', 'Caja fuerte'],\n  virtual: ['Mercado Pago', 'Banco Nación', 'Banco Galicia', 'Ualá', 'Brubank', 'Naranja X', 'Prex']\n};\n\nconst PlatformManager = ({ onClose, onPlatformsChange }) => {\n  const [platforms, setPlatforms] = useState({\n    cash: [],\n    virtual: []\n  });\n\n  const [newPlatform, setNewPlatform] = useState('');\n  const [platformType, setPlatformType] = useState('virtual');\n\n  // Cargar plataformas guardadas o usar las predeterminadas\n  useEffect(() => {\n    try {\n      const savedCashPlatforms = localStorage.getItem('cashPlatforms');\n      const savedVirtualPlatforms = localStorage.getItem('virtualPlatforms');\n\n      const cashPlatforms = savedCashPlatforms ? JSON.parse(savedCashPlatforms) : defaultPlatforms.cash;\n      const virtualPlatforms = savedVirtualPlatforms ? JSON.parse(savedVirtualPlatforms) : defaultPlatforms.virtual;\n\n      setPlatforms({\n        cash: cashPlatforms,\n        virtual: virtualPlatforms\n      });\n    } catch (error) {\n      console.error('Error al cargar plataformas:', error);\n      setPlatforms(defaultPlatforms);\n    }\n  }, []);\n\n  // Función para guardar plataformas manualmente\n  const savePlatforms = () => {\n    try {\n      localStorage.setItem('cashPlatforms', JSON.stringify(platforms.cash));\n      localStorage.setItem('virtualPlatforms', JSON.stringify(platforms.virtual));\n\n      if (onPlatformsChange) {\n        onPlatformsChange(platforms);\n      }\n\n      alert('Plataformas guardadas correctamente');\n    } catch (error) {\n      console.error('Error al guardar plataformas:', error);\n      alert('Error al guardar plataformas');\n    }\n  };\n\n  const handleAddPlatform = (e) => {\n    e.preventDefault();\n\n    if (!newPlatform.trim()) return;\n\n    setPlatforms(prev => ({\n      ...prev,\n      [platformType]: [...prev[platformType], newPlatform.trim()]\n    }));\n\n    setNewPlatform('');\n  };\n\n  const handleDeletePlatform = (type, index) => {\n    setPlatforms(prev => ({\n      ...prev,\n      [type]: prev[type].filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleReset = () => {\n    setPlatforms(defaultPlatforms);\n  };\n\n  return (\n    <ManagerContainer>\n      <ManagerHeader>\n        <ManagerTitle>Gestionar Plataformas</ManagerTitle>\n        <CloseButton onClick={onClose}>\n          <FiX />\n        </CloseButton>\n      </ManagerHeader>\n\n      <PlatformTypeContainer>\n        <PlatformTypeTitle type=\"cash\">Efectivo</PlatformTypeTitle>\n        <PlatformList>\n          {platforms.cash.map((platform, index) => (\n            <PlatformItem key={index}>\n              <PlatformName>{platform}</PlatformName>\n              <DeleteButton onClick={() => handleDeletePlatform('cash', index)}>\n                <FiTrash2 />\n              </DeleteButton>\n            </PlatformItem>\n          ))}\n        </PlatformList>\n      </PlatformTypeContainer>\n\n      <PlatformTypeContainer>\n        <PlatformTypeTitle type=\"virtual\">Billeteras Virtuales</PlatformTypeTitle>\n        <PlatformList>\n          {platforms.virtual.map((platform, index) => (\n            <PlatformItem key={index}>\n              <PlatformName>{platform}</PlatformName>\n              <DeleteButton onClick={() => handleDeletePlatform('virtual', index)}>\n                <FiTrash2 />\n              </DeleteButton>\n            </PlatformItem>\n          ))}\n        </PlatformList>\n      </PlatformTypeContainer>\n\n      <AddPlatformForm onSubmit={handleAddPlatform}>\n        <Select\n          value={platformType}\n          onChange={(e) => setPlatformType(e.target.value)}\n        >\n          <option value=\"cash\">Efectivo</option>\n          <option value=\"virtual\">Billetera Virtual</option>\n        </Select>\n        <Input\n          type=\"text\"\n          placeholder=\"Nombre de la plataforma\"\n          value={newPlatform}\n          onChange={(e) => setNewPlatform(e.target.value)}\n        />\n        <AddButton type=\"submit\" disabled={!newPlatform.trim()}>\n          <FiPlus />\n          Agregar\n        </AddButton>\n      </AddPlatformForm>\n\n      <SaveButton onClick={savePlatforms}>\n        <FiSave />\n        Guardar Cambios\n      </SaveButton>\n\n      <div style={{ marginTop: '16px', textAlign: 'right' }}>\n        <button\n          onClick={handleReset}\n          style={{\n            background: 'none',\n            border: 'none',\n            color: 'var(--text-medium)',\n            textDecoration: 'underline',\n            cursor: 'pointer',\n            fontSize: '0.9rem'\n          }}\n        >\n          Restaurar valores predeterminados\n        </button>\n      </div>\n    </ManagerContainer>\n  );\n};\n\nexport default PlatformManager;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiX, FiSettings, FiCreditCard, FiDollarSign } from 'react-icons/fi';\nimport CategoryManager from './CategoryManager';\nimport PlatformManager from './PlatformManager';\n\nconst FormContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst FormTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  padding: 12px;\n  background-color: rgba(239, 68, 68, 0.08);\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--danger-color);\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n  position: relative;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n\n  &::after {\n    content: ' *';\n    color: var(--danger-color);\n    display: ${props => props.required ? 'inline' : 'none'};\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst RadioGroup = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 8px;\n`;\n\nconst RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  padding: 8px 16px;\n  border-radius: var(--border-radius);\n  transition: all var(--transition-speed);\n  background-color: ${props => props.checked\n    ? props.type === 'income'\n      ? 'rgba(16, 185, 129, 0.1)'\n      : 'rgba(239, 68, 68, 0.1)'\n    : 'transparent'\n  };\n  border: 1px solid ${props => props.checked\n    ? props.type === 'income'\n      ? 'var(--secondary-color)'\n      : 'var(--danger-color)'\n    : 'rgba(0, 0, 0, 0.1)'\n  };\n  color: ${props => props.checked\n    ? props.type === 'income'\n      ? 'var(--secondary-color)'\n      : 'var(--danger-color)'\n    : 'var(--text-medium)'\n  };\n  font-weight: ${props => props.checked ? '500' : 'normal'};\n\n  &:hover {\n    background-color: ${props => props.type === 'income'\n      ? 'rgba(16, 185, 129, 0.05)'\n      : 'rgba(239, 68, 68, 0.05)'\n    };\n  }\n`;\n\nconst RadioInput = styled.input`\n  appearance: none;\n  width: 18px;\n  height: 18px;\n  border: 2px solid ${props => props.value === 'income'\n    ? 'var(--secondary-color)'\n    : 'var(--danger-color)'\n  };\n  border-radius: 50%;\n  margin: 0;\n  display: grid;\n  place-content: center;\n  position: relative;\n  cursor: pointer;\n\n  &::before {\n    content: \"\";\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: transform 0.1s ease-in-out;\n    background-color: ${props => props.value === 'income'\n      ? 'var(--secondary-color)'\n      : 'var(--danger-color)'\n    };\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n  }\n\n  &:checked::before {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 24px;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  flex: 1;\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst CancelButton = styled.button`\n  background-color: var(--bg-medium);\n  color: var(--text-medium);\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--bg-dark);\n    color: var(--text-light);\n  }\n`;\n\nconst ManageCategoriesButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 6px;\n  background: none;\n  border: none;\n  color: var(--primary-color);\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--primary-dark);\n    background-color: rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst initialFormState = {\n  title: '',\n  amount: '',\n  type: 'expense',\n  category: 'other',\n  platformType: 'virtual', // 'cash' o 'virtual'\n  platform: '',\n  currency: 'ARS', // 'ARS' o 'USD'\n  date: new Date().toISOString().split('T')[0]\n};\n\nconst TransactionForm = ({ transaction, onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState(initialFormState);\n  const [error, setError] = useState('');\n  const [showCategoryManager, setShowCategoryManager] = useState(false);\n  const [showPlatformManager, setShowPlatformManager] = useState(false);\n  const [customCategories, setCustomCategories] = useState({\n    expense: [\n      { id: 'food', name: 'Alimentación' },\n      { id: 'transport', name: 'Transporte' },\n      { id: 'housing', name: 'Vivienda' },\n      { id: 'entertainment', name: 'Entretenimiento' },\n      { id: 'utilities', name: 'Servicios' },\n      { id: 'health', name: 'Salud' },\n      { id: 'education', name: 'Educación' },\n      { id: 'shopping', name: 'Compras' },\n      { id: 'other', name: 'Otro' }\n    ],\n    income: [\n      { id: 'salary', name: 'Salario' },\n      { id: 'investment', name: 'Inversión' },\n      { id: 'gift', name: 'Regalo' },\n      { id: 'other', name: 'Otro' }\n    ]\n  });\n  const [platforms, setPlatforms] = useState({\n    cash: [],\n    virtual: []\n  });\n  const isEditMode = !!transaction?.id;\n\n  // Cargar categorías personalizadas guardadas\n  useEffect(() => {\n    const savedExpenseCategories = localStorage.getItem('expenseCategories');\n    const savedIncomeCategories = localStorage.getItem('incomeCategories');\n\n    if (savedExpenseCategories && savedIncomeCategories) {\n      setCustomCategories({\n        expense: JSON.parse(savedExpenseCategories),\n        income: JSON.parse(savedIncomeCategories)\n      });\n    }\n  }, []);\n\n  // Cargar plataformas guardadas\n  useEffect(() => {\n    const savedCashPlatforms = localStorage.getItem('cashPlatforms');\n    const savedVirtualPlatforms = localStorage.getItem('virtualPlatforms');\n\n    const defaultPlatforms = {\n      cash: ['Efectivo', 'Caja chica', 'Caja fuerte'],\n      virtual: ['Mercado Pago', 'Banco Nación', 'Banco Galicia', 'Ualá', 'Brubank', 'Naranja X', 'Prex']\n    };\n\n    setPlatforms({\n      cash: savedCashPlatforms ? JSON.parse(savedCashPlatforms) : defaultPlatforms.cash,\n      virtual: savedVirtualPlatforms ? JSON.parse(savedVirtualPlatforms) : defaultPlatforms.virtual\n    });\n  }, []);\n\n  useEffect(() => {\n    if (transaction) {\n      // Determinar el tipo de plataforma basado en la plataforma existente\n      let platformType = 'virtual';\n      if (transaction.platform) {\n        // Verificar si la plataforma está en la lista de efectivo\n        const isCashPlatform = platforms.cash.includes(transaction.platform);\n        platformType = isCashPlatform ? 'cash' : 'virtual';\n      }\n\n      setFormData({\n        title: transaction.title || '',\n        amount: transaction.amount || '',\n        type: transaction.type || 'expense',\n        category: transaction.category || 'other',\n        platformType: platformType,\n        platform: transaction.platform || '',\n        currency: transaction.currency || 'ARS',\n        date: transaction.date || new Date().toISOString().split('T')[0]\n      });\n    } else {\n      setFormData(initialFormState);\n    }\n  }, [transaction, platforms]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validación\n    if (!formData.title.trim()) {\n      setError('Por favor ingresa un título para la transacción.');\n      return;\n    }\n\n    if (!formData.amount || parseFloat(formData.amount) <= 0) {\n      setError('Por favor ingresa un monto válido.');\n      return;\n    }\n\n    // Enviar datos\n    onSubmit({\n      ...formData,\n      id: transaction?.id, // Solo incluir el ID si estamos editando\n      amount: parseFloat(formData.amount)\n      // No necesitamos mapear platformType a platform_type, lo haremos en el servicio\n    });\n\n    // Resetear formulario si no estamos en modo edición\n    if (!isEditMode) {\n      setFormData(initialFormState);\n    }\n\n    setError('');\n  };\n\n  const handleCategoriesChange = (newCategories) => {\n    setCustomCategories(newCategories);\n  };\n\n  const handlePlatformsChange = (newPlatforms) => {\n    setPlatforms(newPlatforms);\n  };\n\n  return (\n    <FormContainer>\n      <FormHeader>\n        <FormTitle>\n          {isEditMode ? 'Editar Transacción' : 'Registrar Nueva Transacción'}\n        </FormTitle>\n        <CloseButton onClick={onCancel}>\n          <FiX />\n        </CloseButton>\n      </FormHeader>\n\n      {showCategoryManager && (\n        <CategoryManager\n          onClose={() => setShowCategoryManager(false)}\n          onCategoriesChange={handleCategoriesChange}\n        />\n      )}\n\n      {showPlatformManager && (\n        <PlatformManager\n          onClose={() => setShowPlatformManager(false)}\n          onPlatformsChange={handlePlatformsChange}\n        />\n      )}\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"type\" required>Tipo de transacción</Label>\n          <RadioGroup>\n            <RadioLabel type=\"expense\" checked={formData.type === 'expense'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"type-expense\"\n                name=\"type\"\n                value=\"expense\"\n                checked={formData.type === 'expense'}\n                onChange={handleChange}\n              />\n              Gasto\n            </RadioLabel>\n\n            <RadioLabel type=\"income\" checked={formData.type === 'income'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"type-income\"\n                name=\"type\"\n                value=\"income\"\n                checked={formData.type === 'income'}\n                onChange={handleChange}\n              />\n              Ingreso\n            </RadioLabel>\n          </RadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"title\" required>Descripción</Label>\n          <Input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={formData.title}\n            onChange={handleChange}\n            placeholder=\"Ej: Compra de comestibles\"\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"currency\" required>Moneda</Label>\n          <RadioGroup>\n            <RadioLabel type=\"currency\" checked={formData.currency === 'ARS'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"currency-ars\"\n                name=\"currency\"\n                value=\"ARS\"\n                checked={formData.currency === 'ARS'}\n                onChange={handleChange}\n              />\n              Pesos (ARS)\n            </RadioLabel>\n\n            <RadioLabel type=\"currency\" checked={formData.currency === 'USD'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"currency-usd\"\n                name=\"currency\"\n                value=\"USD\"\n                checked={formData.currency === 'USD'}\n                onChange={handleChange}\n              />\n              Dólares (USD)\n            </RadioLabel>\n          </RadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"amount\" required>Monto ({formData.currency})</Label>\n          <Input\n            type=\"number\"\n            id=\"amount\"\n            name=\"amount\"\n            value={formData.amount}\n            onChange={handleChange}\n            placeholder=\"0.00\"\n            min=\"0.01\"\n            step=\"0.01\"\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"category\" required>Categoría</Label>\n          <ManageCategoriesButton\n            type=\"button\"\n            onClick={() => setShowCategoryManager(true)}\n            title=\"Gestionar categorías\"\n          >\n            <FiSettings />\n          </ManageCategoriesButton>\n          <Select\n            id=\"category\"\n            name=\"category\"\n            value={formData.category}\n            onChange={handleChange}\n            required\n          >\n            {formData.type === 'expense' ? (\n              customCategories.expense.map(category => (\n                <option key={category.id} value={category.id}>{category.name}</option>\n              ))\n            ) : (\n              customCategories.income.map(category => (\n                <option key={category.id} value={category.id}>{category.name}</option>\n              ))\n            )}\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"platformType\" required>Tipo de plataforma</Label>\n          <RadioGroup>\n            <RadioLabel type=\"cash\" checked={formData.platformType === 'cash'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"platformType-cash\"\n                name=\"platformType\"\n                value=\"cash\"\n                checked={formData.platformType === 'cash'}\n                onChange={handleChange}\n              />\n              <FiDollarSign style={{ marginRight: '4px' }} />\n              Efectivo\n            </RadioLabel>\n\n            <RadioLabel type=\"virtual\" checked={formData.platformType === 'virtual'}>\n              <RadioInput\n                type=\"radio\"\n                id=\"platformType-virtual\"\n                name=\"platformType\"\n                value=\"virtual\"\n                checked={formData.platformType === 'virtual'}\n                onChange={handleChange}\n              />\n              <FiCreditCard style={{ marginRight: '4px' }} />\n              Billeteras Virtuales\n            </RadioLabel>\n          </RadioGroup>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"platform\" required>Plataforma</Label>\n          <ManageCategoriesButton\n            type=\"button\"\n            onClick={() => setShowPlatformManager(true)}\n            title=\"Gestionar plataformas\"\n          >\n            <FiSettings />\n          </ManageCategoriesButton>\n          <Select\n            id=\"platform\"\n            name=\"platform\"\n            value={formData.platform}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"\">Seleccionar plataforma</option>\n            {formData.platformType === 'cash' ? (\n              platforms.cash.map((platform, index) => (\n                <option key={index} value={platform}>{platform}</option>\n              ))\n            ) : (\n              platforms.virtual.map((platform, index) => (\n                <option key={index} value={platform}>{platform}</option>\n              ))\n            )}\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"date\" required>Fecha</Label>\n          <Input\n            type=\"date\"\n            id=\"date\"\n            name=\"date\"\n            value={formData.date}\n            onChange={handleChange}\n            required\n          />\n        </FormGroup>\n\n        <ButtonGroup>\n          <SubmitButton type=\"submit\">\n            {isEditMode ? 'Guardar Cambios' : 'Registrar Transacción'}\n          </SubmitButton>\n          <CancelButton type=\"button\" onClick={onCancel}>\n            Cancelar\n          </CancelButton>\n        </ButtonGroup>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default TransactionForm;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiFilter, FiSearch } from 'react-icons/fi';\n\nconst FiltersContainer = styled.div`\n  background-color: var(--bg-medium);\n  padding: 16px;\n  border-radius: var(--border-radius);\n  margin-bottom: 20px;\n`;\n\nconst FiltersHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  gap: 8px;\n  color: var(--text-medium);\n  font-weight: 500;\n  font-size: 0.95rem;\n`;\n\nconst FiltersIcon = styled(FiFilter)`\n  font-size: 1.1rem;\n`;\n\nconst FiltersContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst SearchContainer = styled.div`\n  flex: 2;\n  position: relative;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst SearchIcon = styled(FiSearch)`\n  position: absolute;\n  left: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: var(--text-light);\n  font-size: 1rem;\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  padding: 10px 10px 10px 36px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n\n  &::placeholder {\n    color: var(--text-light);\n  }\n`;\n\nconst FilterGroup = styled.div`\n  flex: 1;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst FilterSelect = styled.select`\n  width: 100%;\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst DateContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  flex: 2;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nconst DateInput = styled.input`\n  flex: 1;\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst TransactionFilters = ({ filters, onFilterChange }) => {\n  const [customCategories, setCustomCategories] = useState({\n    expense: [\n      { id: 'food', name: 'Alimentación' },\n      { id: 'transport', name: 'Transporte' },\n      { id: 'housing', name: 'Vivienda' },\n      { id: 'entertainment', name: 'Entretenimiento' },\n      { id: 'utilities', name: 'Servicios' },\n      { id: 'health', name: 'Salud' },\n      { id: 'education', name: 'Educación' },\n      { id: 'shopping', name: 'Compras' },\n      { id: 'other', name: 'Otro' }\n    ],\n    income: [\n      { id: 'salary', name: 'Salario' },\n      { id: 'investment', name: 'Inversión' },\n      { id: 'gift', name: 'Regalo' },\n      { id: 'other', name: 'Otro' }\n    ]\n  });\n\n  // Cargar categorías personalizadas guardadas\n  useEffect(() => {\n    const savedExpenseCategories = localStorage.getItem('expenseCategories');\n    const savedIncomeCategories = localStorage.getItem('incomeCategories');\n\n    if (savedExpenseCategories && savedIncomeCategories) {\n      setCustomCategories({\n        expense: JSON.parse(savedExpenseCategories),\n        income: JSON.parse(savedIncomeCategories)\n      });\n    }\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    onFilterChange({ ...filters, [name]: value });\n  };\n\n  return (\n    <FiltersContainer>\n      <FiltersHeader>\n        <FiltersIcon />\n        Filtrar transacciones\n      </FiltersHeader>\n\n      <FiltersContent>\n        <SearchContainer>\n          <SearchIcon />\n          <SearchInput\n            type=\"text\"\n            placeholder=\"Buscar transacciones...\"\n            name=\"search\"\n            value={filters.search || ''}\n            onChange={handleChange}\n          />\n        </SearchContainer>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"type\"\n            value={filters.type || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todos los tipos</option>\n            <option value=\"income\">Ingresos</option>\n            <option value=\"expense\">Gastos</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"category\"\n            value={filters.category || 'all'}\n            onChange={handleChange}\n          >\n            <option value=\"all\">Todas las categorías</option>\n            <optgroup label=\"Gastos\">\n              <option value=\"food\">Alimentación</option>\n              <option value=\"transport\">Transporte</option>\n              <option value=\"housing\">Vivienda</option>\n              <option value=\"entertainment\">Entretenimiento</option>\n              <option value=\"utilities\">Servicios</option>\n              <option value=\"health\">Salud</option>\n              <option value=\"education\">Educación</option>\n              <option value=\"shopping\">Compras</option>\n            </optgroup>\n            <optgroup label=\"Ingresos\">\n              <option value=\"salary\">Salario</option>\n              <option value=\"investment\">Inversión</option>\n              <option value=\"gift\">Regalo</option>\n            </optgroup>\n            <option value=\"other\">Otro</option>\n          </FilterSelect>\n        </FilterGroup>\n\n        <DateContainer>\n          <DateInput\n            type=\"date\"\n            name=\"startDate\"\n            value={filters.startDate || ''}\n            onChange={handleChange}\n            placeholder=\"Fecha inicio\"\n          />\n          <DateInput\n            type=\"date\"\n            name=\"endDate\"\n            value={filters.endDate || ''}\n            onChange={handleChange}\n            placeholder=\"Fecha fin\"\n          />\n        </DateContainer>\n\n        <FilterGroup>\n          <FilterSelect\n            name=\"sort\"\n            value={filters.sort || 'date_desc'}\n            onChange={handleChange}\n          >\n            <option value=\"date_desc\">Más recientes primero</option>\n            <option value=\"date_asc\">Más antiguas primero</option>\n            <option value=\"amount_desc\">Mayor monto primero</option>\n            <option value=\"amount_asc\">Menor monto primero</option>\n            <option value=\"name_asc\">Nombre (A-Z)</option>\n            <option value=\"name_desc\">Nombre (Z-A)</option>\n          </FilterSelect>\n        </FilterGroup>\n      </FiltersContent>\n    </FiltersContainer>\n  );\n};\n\nexport default TransactionFilters;\n","import { supabase } from './supabase';\n\n/**\n * Suscribe a cambios en tiempo real en una tabla\n * @param {string} table - Nombre de la tabla\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {Object} options - Opciones adicionales\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToTable = (table, callback, options = {}) => {\n  const { event = '*', filter = '' } = options;\n\n  const subscription = supabase\n    .channel(`public:${table}`)\n    .on('postgres_changes', {\n      event,\n      schema: 'public',\n      table,\n      filter\n    }, (payload) => {\n      callback(payload);\n    })\n    .subscribe();\n\n  return subscription;\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de transacciones\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToTransactions = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('transactions', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('transactions', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de tareas\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToTasks = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('tasks', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('tasks', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de inversiones\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToInvestments = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('investments', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('investments', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de metas financieras\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToFinancialGoals = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('financial_goals', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('financial_goals', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de eventos\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @param {string} userId - ID del usuario (opcional)\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToEvents = async (callback, userId = null) => {\n  // Si no se proporciona un ID de usuario, obtener el usuario actual\n  if (!userId) {\n    try {\n      const { data: { user } } = await supabase.auth.getUser();\n      userId = user?.id;\n    } catch (error) {\n      console.error('Error al obtener el usuario actual:', error);\n    }\n  }\n\n  // Si hay un ID de usuario, filtrar por ese usuario\n  if (userId) {\n    return subscribeToTable('events', callback, {\n      filter: `user_id=eq.${userId}`\n    });\n  }\n\n  // Si no hay ID de usuario, suscribirse a todos los cambios\n  return subscribeToTable('events', callback);\n};\n\n/**\n * Suscribe a cambios en tiempo real en la tabla de perfiles\n * @param {string} userId - ID del usuario\n * @param {Function} callback - Función a llamar cuando hay cambios\n * @returns {Object} - Objeto de suscripción\n */\nexport const subscribeToProfile = (userId, callback) => {\n  return subscribeToTable('profiles', callback, {\n    filter: `id=eq.${userId}`\n  });\n};\n\n/**\n * Cancela una suscripción\n * @param {Object} subscription - Objeto de suscripción\n */\nexport const unsubscribe = (subscription) => {\n  if (subscription) {\n    supabase.removeChannel(subscription);\n  }\n};\n","import React from 'react';\nimport { useTransition, animated } from 'react-spring';\n\n/**\n * Componente para animar la transición de elementos\n * @param {Object} props - Propiedades del componente\n * @param {Array} props.items - Elementos a animar\n * @param {Function} props.renderItem - Función para renderizar cada elemento\n * @param {string} props.keyExtractor - Función para extraer la clave de cada elemento\n * @param {Object} props.config - Configuración de la animación\n * @returns {JSX.Element} - Componente de transición animada\n */\nconst AnimatedTransition = ({ \n  items, \n  renderItem, \n  keyExtractor = (item) => item.id,\n  config = { tension: 125, friction: 20, precision: 0.1 }\n}) => {\n  // Configuración de la transición\n  const transitions = useTransition(items, {\n    keys: keyExtractor,\n    from: { opacity: 0, transform: 'translate3d(0,40px,0)' },\n    enter: { opacity: 1, transform: 'translate3d(0,0px,0)' },\n    leave: { opacity: 0, transform: 'translate3d(0,-40px,0)' },\n    config\n  });\n\n  return (\n    <>\n      {transitions((style, item) => (\n        <animated.div style={style}>\n          {renderItem(item)}\n        </animated.div>\n      ))}\n    </>\n  );\n};\n\nexport default AnimatedTransition;\n","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { FiDownload, FiFileText, FiDatabase, FiX } from 'react-icons/fi';\nimport { useSpring, animated } from 'react-spring';\nimport { exportToCSV, exportToJSON, exportToExcel } from '../../services/exportService';\nimport AnimatedButton from './AnimatedButton';\n\n// Contenedor del menú\nconst MenuContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\n// Botón de exportar\nconst ExportButton = styled(AnimatedButton)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\n// Menú desplegable\nconst DropdownMenu = styled(animated.div)`\n  position: absolute;\n  top: 100%;\n  right: 0;\n  margin-top: 8px;\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  padding: 8px;\n  z-index: 100;\n  min-width: 200px;\n  overflow: hidden;\n`;\n\n// Título del menú\nconst MenuTitle = styled.div`\n  font-weight: 600;\n  padding: 8px 12px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\n// Opción del menú\nconst MenuItem = styled.div`\n  padding: 8px 12px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  border-radius: var(--border-radius);\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: rgba(var(--primary-color-rgb), 0.1);\n  }\n  \n  svg {\n    color: var(--primary-color);\n  }\n`;\n\n// Botón para cerrar el menú\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--text-medium);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  \n  &:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\n/**\n * Componente de menú de exportación\n * @param {Object} props - Propiedades del componente\n * @param {Array} props.data - Datos a exportar\n * @param {string} props.filename - Nombre del archivo\n * @returns {JSX.Element} - Componente de menú de exportación\n */\nconst ExportMenu = ({ data, filename = 'export' }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n  \n  // Animación del menú\n  const menuAnimation = useSpring({\n    opacity: isOpen ? 1 : 0,\n    transform: isOpen ? 'translateY(0)' : 'translateY(-20px)',\n    config: { tension: 300, friction: 20 }\n  });\n  \n  // Manejador para abrir/cerrar el menú\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n  \n  // Manejador para cerrar el menú al hacer clic fuera de él\n  const handleClickOutside = (event) => {\n    if (menuRef.current && !menuRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n  \n  // Agregar/eliminar el event listener al montar/desmontar el componente\n  React.useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n  \n  // Manejadores para exportar en diferentes formatos\n  const handleExportCSV = () => {\n    exportToCSV(data, filename);\n    setIsOpen(false);\n  };\n  \n  const handleExportJSON = () => {\n    exportToJSON(data, filename);\n    setIsOpen(false);\n  };\n  \n  const handleExportExcel = () => {\n    exportToExcel(data, `${filename}.xlsx`);\n    setIsOpen(false);\n  };\n  \n  return (\n    <MenuContainer ref={menuRef}>\n      <ExportButton \n        variant=\"outline\" \n        onClick={toggleMenu}\n      >\n        <FiDownload />\n        Exportar\n      </ExportButton>\n      \n      {isOpen && (\n        <DropdownMenu style={menuAnimation}>\n          <MenuTitle>\n            Exportar datos\n            <CloseButton onClick={() => setIsOpen(false)}>\n              <FiX />\n            </CloseButton>\n          </MenuTitle>\n          \n          <MenuItem onClick={handleExportCSV}>\n            <FiFileText />\n            Exportar como CSV\n          </MenuItem>\n          \n          <MenuItem onClick={handleExportJSON}>\n            <FiDatabase />\n            Exportar como JSON\n          </MenuItem>\n          \n          <MenuItem onClick={handleExportExcel}>\n            <FiFileText />\n            Exportar como Excel\n          </MenuItem>\n        </DropdownMenu>\n      )}\n    </MenuContainer>\n  );\n};\n\nexport default ExportMenu;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\nimport AnimatedButton from './AnimatedButton';\n\n// Fondo oscuro\nconst Overlay = styled(animated.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 16px;\n`;\n\n// Contenedor del diálogo\nconst DialogContainer = styled(animated.div)`\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  padding: 24px;\n  max-width: 500px;\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n`;\n\n// Título del diálogo\nconst DialogTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 16px;\n  color: var(--text-dark);\n  font-size: 1.3rem;\n  font-weight: 600;\n`;\n\n// Contenido del diálogo\nconst DialogContent = styled.div`\n  margin-bottom: 24px;\n  color: var(--text-medium);\n  font-size: 1rem;\n  line-height: 1.5;\n`;\n\n// Acciones del diálogo\nconst DialogActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  \n  @media (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\n/**\n * Componente de diálogo de confirmación\n * @param {Object} props - Propiedades del componente\n * @param {boolean} props.isOpen - Si el diálogo está abierto\n * @param {Function} props.onClose - Función a ejecutar al cerrar el diálogo\n * @param {Function} props.onConfirm - Función a ejecutar al confirmar\n * @param {string} props.title - Título del diálogo\n * @param {React.ReactNode} props.children - Contenido del diálogo\n * @param {string} props.confirmText - Texto del botón de confirmación\n * @param {string} props.cancelText - Texto del botón de cancelación\n * @param {string} props.confirmVariant - Variante del botón de confirmación\n * @returns {JSX.Element} - Componente de diálogo de confirmación\n */\nconst ConfirmDialog = ({\n  isOpen,\n  onClose,\n  onConfirm,\n  title = 'Confirmar',\n  children,\n  confirmText = 'Confirmar',\n  cancelText = 'Cancelar',\n  confirmVariant = 'primary'\n}) => {\n  // Animación del fondo\n  const overlayAnimation = useSpring({\n    opacity: isOpen ? 1 : 0,\n    config: { tension: 300, friction: 20 }\n  });\n  \n  // Animación del diálogo\n  const dialogAnimation = useSpring({\n    opacity: isOpen ? 1 : 0,\n    transform: isOpen ? 'translateY(0)' : 'translateY(-50px)',\n    config: { tension: 300, friction: 20 }\n  });\n  \n  // Si el diálogo no está abierto, no renderizar nada\n  if (!isOpen) {\n    return null;\n  }\n  \n  return (\n    <Overlay style={overlayAnimation} onClick={onClose}>\n      <DialogContainer \n        style={dialogAnimation} \n        onClick={e => e.stopPropagation()}\n      >\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>{children}</DialogContent>\n        <DialogActions>\n          <AnimatedButton \n            variant=\"outline\" \n            onClick={onClose}\n            fullWidth={window.innerWidth <= 480}\n          >\n            {cancelText}\n          </AnimatedButton>\n          <AnimatedButton \n            variant={confirmVariant} \n            onClick={() => {\n              onConfirm();\n              onClose();\n            }}\n            fullWidth={window.innerWidth <= 480}\n          >\n            {confirmText}\n          </AnimatedButton>\n        </DialogActions>\n      </DialogContainer>\n    </Overlay>\n  );\n};\n\nexport default ConfirmDialog;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus } from 'react-icons/fi';\nimport FinancialSummary from '../components/Finances/FinancialSummary';\nimport TransactionList from '../components/Finances/TransactionList';\nimport TransactionForm from '../components/Finances/TransactionForm';\nimport TransactionFilters from '../components/Finances/TransactionFilters';\nimport { getTransactions as getTransactionsFromAPI, createTransaction as createTransactionAPI, updateTransaction as updateTransactionAPI, deleteTransaction as deleteTransactionAPI } from '../services/transactionService';\nimport { subscribeToTransactions, unsubscribe } from '../services/realtimeService';\nimport AnimatedButton from '../components/common/AnimatedButton';\nimport AnimatedTransition from '../components/common/AnimatedTransition';\nimport { showSuccess, showError, showInfo } from '../components/common/Notification';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport ExportMenu from '../components/common/ExportMenu';\nimport ConfirmDialog from '../components/common/ConfirmDialog';\n// Importar el servicio de almacenamiento simple\nimport { getTransactions, saveTransactions, addTransaction, updateTransaction, deleteTransaction } from '../services/simpleStorage';\n\nconst FinancesContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst FinancesHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst TransactionsSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst TransactionsHeaderActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid var(--bg-medium);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\n// Usamos el componente AnimatedButton en lugar de un botón personalizado\n\n// Las transacciones se cargarán desde Supabase\n\nconst Finances = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingTransaction, setEditingTransaction] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    type: 'all',\n    category: 'all',\n    startDate: '',\n    endDate: '',\n    sort: 'date_desc'\n  });\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    message: '',\n    onConfirm: () => {},\n    confirmText: 'Confirmar',\n    confirmVariant: 'primary'\n  });\n\n  // Cargar transacciones desde el almacenamiento local y luego intentar desde Supabase\n  useEffect(() => {\n    const loadTransactions = async () => {\n      try {\n        setLoading(true);\n\n        // Primero, intentar cargar desde el almacenamiento local\n        const localData = getTransactions();\n\n        if (localData && localData.length > 0) {\n          console.log('Transacciones cargadas desde el almacenamiento local:', localData);\n          setTransactions(localData);\n          setError(null);\n          setLoading(false);\n\n          // Luego, intentar cargar desde la API en segundo plano\n          try {\n            const apiData = await getTransactionsFromAPI();\n            if (apiData && apiData.length > 0) {\n              console.log('Transacciones cargadas desde la API:', apiData);\n              setTransactions(apiData);\n              // Guardar en el almacenamiento local\n              saveTransactions(apiData);\n            }\n          } catch (apiError) {\n            console.error('Error al cargar transacciones desde la API:', apiError);\n            // No mostrar error al usuario si ya tenemos datos locales\n          }\n        } else {\n          // Si no hay datos locales, intentar cargar desde la API\n          try {\n            const apiData = await getTransactionsFromAPI();\n            console.log('Transacciones cargadas desde la API:', apiData);\n            setTransactions(apiData);\n            // Guardar en el almacenamiento local\n            saveTransactions(apiData);\n            setError(null);\n          } catch (apiError) {\n            console.error('Error al cargar transacciones desde la API:', apiError);\n            setError('Error al cargar las transacciones. Por favor, intenta de nuevo más tarde.');\n            // Usar un array vacío si no hay datos\n            setTransactions([]);\n          }\n        }\n      } catch (err) {\n        console.error('Error al cargar las transacciones:', err);\n        setError('Error al cargar las transacciones. Por favor, intenta de nuevo más tarde.');\n        // Usar un array vacío si hay error\n        setTransactions([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadTransactions();\n\n    // Suscribirse a cambios en tiempo real\n    let subscription;\n    const setupRealtimeSubscription = async () => {\n      try {\n        subscription = await subscribeToTransactions((payload) => {\n          console.log('Cambio en tiempo real:', payload);\n\n          const { eventType, new: newRecord, old: oldRecord } = payload;\n\n          // Manejar diferentes tipos de eventos\n          switch (eventType) {\n            case 'INSERT':\n              setTransactions(prev => {\n                const updated = [...prev, newRecord];\n                // Guardar en el almacenamiento local\n                saveTransactions(updated);\n                return updated;\n              });\n              showInfo(`Nueva transacción: ${newRecord.title}`);\n              break;\n            case 'UPDATE':\n              setTransactions(prev => {\n                const updated = prev.map(transaction =>\n                  transaction.id === newRecord.id ? newRecord : transaction\n                );\n                // Guardar en el almacenamiento local\n                saveTransactions(updated);\n                return updated;\n              });\n              showInfo(`Transacción actualizada: ${newRecord.title}`);\n              break;\n            case 'DELETE':\n              setTransactions(prev => {\n                const updated = prev.filter(transaction => transaction.id !== oldRecord.id);\n                // Guardar en el almacenamiento local\n                saveTransactions(updated);\n                return updated;\n              });\n              showInfo('Transacción eliminada');\n              break;\n            default:\n              break;\n          }\n        });\n      } catch (error) {\n        console.error('Error al suscribirse a cambios en tiempo real:', error);\n      }\n    };\n\n    setupRealtimeSubscription();\n\n    // Limpiar suscripción al desmontar\n    return () => {\n      unsubscribe(subscription);\n    };\n  }, []);\n\n  // Aplicar filtros y ordenamiento cuando cambian los filtros o las transacciones\n  useEffect(() => {\n    let result = [...transactions];\n\n    // Filtrar por búsqueda\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      result = result.filter(transaction =>\n        transaction.title.toLowerCase().includes(searchTerm)\n      );\n    }\n\n    // Filtrar por tipo\n    if (filters.type !== 'all') {\n      result = result.filter(transaction => transaction.type === filters.type);\n    }\n\n    // Filtrar por categoría\n    if (filters.category !== 'all') {\n      result = result.filter(transaction => transaction.category === filters.category);\n    }\n\n    // Filtrar por fecha de inicio\n    if (filters.startDate) {\n      result = result.filter(transaction => transaction.date >= filters.startDate);\n    }\n\n    // Filtrar por fecha de fin\n    if (filters.endDate) {\n      result = result.filter(transaction => transaction.date <= filters.endDate);\n    }\n\n    // Ordenar\n    result.sort((a, b) => {\n      switch (filters.sort) {\n        case 'date_asc':\n          return new Date(a.date) - new Date(b.date);\n        case 'date_desc':\n          return new Date(b.date) - new Date(a.date);\n        case 'amount_desc':\n          return b.amount - a.amount;\n        case 'amount_asc':\n          return a.amount - b.amount;\n        case 'name_asc':\n          return a.title.localeCompare(b.title);\n        case 'name_desc':\n          return b.title.localeCompare(a.title);\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredTransactions(result);\n  }, [transactions, filters]);\n\n  const handleAddTransaction = async (newTransaction) => {\n    try {\n      console.log('Transaction to save:', newTransaction);\n\n      // Si estamos editando, actualizar la transacción existente\n      if (editingTransaction) {\n        console.log('Updating transaction with ID:', newTransaction.id);\n\n        // Actualizar en el almacenamiento local primero\n        const updatedTransaction = updateTransaction(newTransaction.id, newTransaction);\n\n        if (updatedTransaction) {\n          console.log('Transaction updated successfully in local storage:', updatedTransaction);\n\n          // Actualizar el estado\n          setTransactions(prev => {\n            const updated = prev.map(transaction =>\n              transaction.id === updatedTransaction.id ? updatedTransaction : transaction\n            );\n            // Guardar en el almacenamiento local\n            saveTransactions(updated);\n            return updated;\n          });\n\n          setEditingTransaction(null);\n          showSuccess('Transacción actualizada correctamente');\n\n          // Intentar actualizar en la API en segundo plano\n          try {\n            const apiUpdated = await updateTransactionAPI(newTransaction.id, newTransaction);\n            console.log('Transaction updated in API:', apiUpdated);\n          } catch (apiError) {\n            console.error('Error updating transaction in API:', apiError);\n            // No mostrar error al usuario ya que la actualización local fue exitosa\n          }\n        }\n      } else {\n        // Si es una nueva transacción, agregarla a la lista\n        console.log('Creating new transaction');\n\n        // Agregar en el almacenamiento local primero\n        const createdTransaction = addTransaction(newTransaction);\n\n        if (createdTransaction) {\n          console.log('Transaction created successfully in local storage:', createdTransaction);\n\n          // Actualizar el estado\n          setTransactions(prev => {\n            const updated = [...prev, createdTransaction];\n            // Guardar en el almacenamiento local\n            saveTransactions(updated);\n            return updated;\n          });\n\n          showSuccess('Transacción creada correctamente');\n\n          // Intentar crear en la API en segundo plano\n          try {\n            const apiCreated = await createTransactionAPI(newTransaction);\n            console.log('Transaction created in API:', apiCreated);\n          } catch (apiError) {\n            console.error('Error creating transaction in API:', apiError);\n            // No mostrar error al usuario ya que la creación local fue exitosa\n          }\n        }\n      }\n\n      setShowForm(false);\n      setError(null);\n    } catch (err) {\n      console.error('Error al guardar la transacción:', err);\n      setError(`Error al guardar la transacción: ${err.message}`);\n      showError(`Error al guardar la transacción: ${err.message}`);\n    }\n  };\n\n  const handleEditTransaction = (transaction) => {\n    setEditingTransaction(transaction);\n    setShowForm(true);\n  };\n\n  const handleDeleteTransaction = (transactionId) => {\n    // Mostrar diálogo de confirmación\n    setConfirmDialog({\n      isOpen: true,\n      title: 'Eliminar transacción',\n      message: '¿Estás seguro de que deseas eliminar esta transacción? Esta acción no se puede deshacer.',\n      onConfirm: async () => {\n        try {\n          // Eliminar del almacenamiento local primero\n          const success = deleteTransaction(transactionId);\n\n          if (success) {\n            console.log('Transaction deleted successfully from local storage');\n\n            // Actualizar el estado\n            setTransactions(prev => {\n              const updated = prev.filter(transaction => transaction.id !== transactionId);\n              // Guardar en el almacenamiento local\n              saveTransactions(updated);\n              return updated;\n            });\n\n            showSuccess('Transacción eliminada correctamente');\n\n            // Intentar eliminar en la API en segundo plano\n            try {\n              await deleteTransactionAPI(transactionId);\n              console.log('Transaction deleted from API');\n            } catch (apiError) {\n              console.error('Error deleting transaction from API:', apiError);\n              // No mostrar error al usuario ya que la eliminación local fue exitosa\n            }\n          } else {\n            showError('No se pudo eliminar la transacción');\n          }\n        } catch (err) {\n          console.error('Error al eliminar la transacción:', err);\n          showError('Error al eliminar la transacción. Por favor, intenta de nuevo más tarde.');\n        }\n      },\n      confirmText: 'Eliminar',\n      confirmVariant: 'danger'\n    });\n  };\n\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingTransaction(null);\n  };\n\n  return (\n    <FinancesContainer>\n      <FinancesHeader>\n        <h1>Finanzas</h1>\n        <p>Controla tus ingresos y gastos</p>\n      </FinancesHeader>\n\n      {/* Mensaje de error con animación */}\n      {error && (\n        <AnimatedTransition\n          items={[error]}\n          keyExtractor={() => 'error'}\n          renderItem={(errorMessage) => (\n            <div style={{\n              padding: '16px',\n              backgroundColor: 'rgba(239, 68, 68, 0.1)',\n              color: 'var(--danger-color)',\n              borderRadius: 'var(--border-radius)',\n              marginBottom: '16px',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              boxShadow: '0 4px 6px rgba(239, 68, 68, 0.1)',\n              border: '1px solid rgba(239, 68, 68, 0.2)'\n            }}>\n              <div style={{\n                backgroundColor: 'var(--danger-color)',\n                color: 'white',\n                borderRadius: '50%',\n                width: '24px',\n                height: '24px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontWeight: 'bold'\n              }}>\n                !\n              </div>\n              {errorMessage}\n              <AnimatedButton\n                variant=\"outline\"\n                style={{\n                  marginLeft: 'auto',\n                  padding: '4px 8px',\n                  minWidth: 'auto',\n                  color: 'var(--danger-color)',\n                  borderColor: 'var(--danger-color)'\n                }}\n                onClick={() => setError(null)}\n              >\n                Cerrar\n              </AnimatedButton>\n            </div>\n          )}\n        />\n      )}\n\n      {/* Indicador de carga con animación */}\n      {loading ? (\n        <AnimatedTransition\n          items={[loading]}\n          keyExtractor={() => 'loading'}\n          renderItem={() => (\n            <LoadingSpinner text=\"Cargando transacciones...\" />\n          )}\n        />\n      ) : (\n        <>\n          {/* Resumen financiero */}\n          <FinancialSummary\n            transactions={transactions}\n            exchangeRate={1.1} // Tasa de cambio ARS a USD\n          />\n\n          {/* Sección de transacciones */}\n          <TransactionsSection>\n            <TransactionsHeaderActions>\n              <SectionTitle>Transacciones</SectionTitle>\n              <ButtonGroup>\n                <ExportMenu\n                  data={filteredTransactions}\n                  filename=\"transacciones\"\n                />\n                <AnimatedButton\n                  variant={showForm ? \"outline\" : \"primary\"}\n                  onClick={() => {\n                    setEditingTransaction(null);\n                    setShowForm(!showForm);\n                  }}\n                >\n                  <FiPlus />\n                  {showForm ? 'Cancelar' : 'Nueva Transacción'}\n                </AnimatedButton>\n              </ButtonGroup>\n            </TransactionsHeaderActions>\n\n            {/* Formulario para agregar/editar transacciones */}\n            {showForm && (\n              <TransactionForm\n                transaction={editingTransaction}\n                onSubmit={handleAddTransaction}\n                onCancel={handleCancelForm}\n              />\n            )}\n\n            {/* Filtros */}\n            <TransactionFilters filters={filters} onFilterChange={setFilters} />\n\n            {/* Lista de transacciones con carga progresiva */}\n            <TransactionList\n              transactions={filteredTransactions}\n              onEditTransaction={handleEditTransaction}\n              onDeleteTransaction={handleDeleteTransaction}\n              filters={{\n                type: filters.type !== 'all' ? filters.type : undefined,\n                category: filters.category !== 'all' ? filters.category : undefined,\n                startDate: filters.startDate || undefined,\n                endDate: filters.endDate || undefined,\n                search: filters.search || undefined\n              }}\n              sortConfig={{\n                column: filters.sort ? filters.sort.split('_')[0] : 'date',\n                direction: filters.sort ? filters.sort.split('_')[1] : 'desc'\n              }}\n              useProgressiveLoading={true}\n            />\n          </TransactionsSection>\n        </>\n      )}\n\n      {/* Diálogo de confirmación */}\n      <ConfirmDialog\n        isOpen={confirmDialog.isOpen}\n        onClose={() => setConfirmDialog({ ...confirmDialog, isOpen: false })}\n        onConfirm={confirmDialog.onConfirm}\n        title={confirmDialog.title}\n        confirmText={confirmDialog.confirmText}\n        confirmVariant={confirmDialog.confirmVariant}\n      >\n        {confirmDialog.message}\n      </ConfirmDialog>\n    </FinancesContainer>\n  );\n};\n\nexport default Finances;\n","/**\n * Servicio de almacenamiento local simple\n * Este servicio proporciona funciones básicas para guardar y recuperar datos\n * del localStorage de manera directa y sencilla\n */\n\n// Prefijo para las claves de almacenamiento\nconst STORAGE_PREFIX = 'mi_app_personal_simple_';\n\n/**\n * Guardar datos en localStorage\n * @param {string} key - Clave\n * @param {*} data - Datos a guardar\n */\nexport const saveData = (key, data) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.setItem(fullKey, JSON.stringify(data));\n    console.log(`Datos guardados en localStorage con clave ${key}:`, data);\n    return true;\n  } catch (error) {\n    console.error(`Error al guardar datos en localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n/**\n * Obtener datos de localStorage\n * @param {string} key - Clave\n * @param {*} defaultValue - Valor por defecto\n * @returns {*} - Datos guardados o valor por defecto\n */\nexport const getData = (key, defaultValue = null) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    const storedData = localStorage.getItem(fullKey);\n\n    if (!storedData) {\n      return defaultValue;\n    }\n\n    const parsedData = JSON.parse(storedData);\n    console.log(`Datos recuperados de localStorage con clave ${key}:`, parsedData);\n    return parsedData;\n  } catch (error) {\n    console.error(`Error al obtener datos de localStorage con clave ${key}:`, error);\n    return defaultValue;\n  }\n};\n\n/**\n * Eliminar datos de localStorage\n * @param {string} key - Clave\n */\nexport const removeData = (key) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.removeItem(fullKey);\n    console.log(`Datos eliminados de localStorage con clave ${key}`);\n    return true;\n  } catch (error) {\n    console.error(`Error al eliminar datos de localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n// Función genérica para generar un ID único\nconst generateId = () => `local_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// ==================== TRANSACCIONES ====================\n\n/**\n * Guardar transacciones en localStorage\n * @param {Array} transactions - Transacciones a guardar\n */\nexport const saveTransactions = (transactions) => {\n  return saveData('transactions', transactions);\n};\n\n/**\n * Obtener transacciones de localStorage\n * @returns {Array} - Transacciones guardadas o array vacío\n */\nexport const getTransactions = () => {\n  return getData('transactions', []);\n};\n\n/**\n * Agregar una transacción\n * @param {Object} transaction - Transacción a agregar\n */\nexport const addTransaction = (transaction) => {\n  try {\n    // Generar ID si no tiene\n    const transactionWithId = {\n      ...transaction,\n      id: transaction.id || generateId()\n    };\n\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Agregar la nueva transacción al principio\n    const updatedTransactions = [transactionWithId, ...currentTransactions];\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return transactionWithId;\n  } catch (error) {\n    console.error('Error al agregar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una transacción\n * @param {string} id - ID de la transacción\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTransaction = (id, updates) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Buscar la transacción\n    const index = currentTransactions.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la transacción\n    const updatedTransactions = [...currentTransactions];\n    updatedTransactions[index] = {\n      ...updatedTransactions[index],\n      ...updates\n    };\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return updatedTransactions[index];\n  } catch (error) {\n    console.error('Error al actualizar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una transacción\n * @param {string} id - ID de la transacción\n */\nexport const deleteTransaction = (id) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Filtrar la transacción a eliminar\n    const updatedTransactions = currentTransactions.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna transacción, retornar false\n    if (updatedTransactions.length === currentTransactions.length) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar transacción:', error);\n    return false;\n  }\n};\n\n// ==================== TAREAS ====================\n\n/**\n * Guardar tareas en localStorage\n * @param {Array} tasks - Tareas a guardar\n */\nexport const saveTasks = (tasks) => {\n  return saveData('tasks', tasks);\n};\n\n/**\n * Obtener tareas de localStorage\n * @returns {Array} - Tareas guardadas o array vacío\n */\nexport const getTasks = () => {\n  return getData('tasks', []);\n};\n\n/**\n * Agregar una tarea\n * @param {Object} task - Tarea a agregar\n */\nexport const addTask = (task) => {\n  try {\n    // Generar ID si no tiene\n    const taskWithId = {\n      ...task,\n      id: task.id || generateId(),\n      created_at: task.created_at || new Date().toISOString().split('T')[0]\n    };\n\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Agregar la nueva tarea\n    const updatedTasks = [...currentTasks, taskWithId];\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return taskWithId;\n  } catch (error) {\n    console.error('Error al agregar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una tarea\n * @param {string} id - ID de la tarea\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTask = (id, updates) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la tarea\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      ...updates\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al actualizar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una tarea\n * @param {string} id - ID de la tarea\n */\nexport const deleteTask = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Filtrar la tarea a eliminar\n    const updatedTasks = currentTasks.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna tarea, retornar false\n    if (updatedTasks.length === currentTasks.length) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar tarea:', error);\n    return false;\n  }\n};\n\n/**\n * Cambiar el estado de completado de una tarea\n * @param {string} id - ID de la tarea\n * @param {boolean} completed - Estado de completado\n */\nexport const toggleTaskComplete = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el estado de completado\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      completed: !updatedTasks[index].completed\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al cambiar estado de tarea:', error);\n    return null;\n  }\n};\n\n// ==================== INVERSIONES ====================\n\n/**\n * Guardar inversiones en localStorage\n * @param {Array} investments - Inversiones a guardar\n */\nexport const saveInvestments = (investments) => {\n  return saveData('investments', investments);\n};\n\n/**\n * Obtener inversiones de localStorage\n * @returns {Array} - Inversiones guardadas o array vacío\n */\nexport const getInvestments = () => {\n  return getData('investments', []);\n};\n\n/**\n * Agregar una inversión\n * @param {Object} investment - Inversión a agregar\n */\nexport const addInvestment = (investment) => {\n  try {\n    // Generar ID si no tiene\n    const investmentWithId = {\n      ...investment,\n      id: investment.id || generateId()\n    };\n\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Agregar la nueva inversión\n    const updatedInvestments = [...currentInvestments, investmentWithId];\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return investmentWithId;\n  } catch (error) {\n    console.error('Error al agregar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una inversión\n * @param {string} id - ID de la inversión\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateInvestment = (id, updates) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Buscar la inversión\n    const index = currentInvestments.findIndex(i => i.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la inversión\n    const updatedInvestments = [...currentInvestments];\n    updatedInvestments[index] = {\n      ...updatedInvestments[index],\n      ...updates\n    };\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return updatedInvestments[index];\n  } catch (error) {\n    console.error('Error al actualizar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una inversión\n * @param {string} id - ID de la inversión\n */\nexport const deleteInvestment = (id) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Filtrar la inversión a eliminar\n    const updatedInvestments = currentInvestments.filter(i => i.id !== id);\n\n    // Si no se eliminó ninguna inversión, retornar false\n    if (updatedInvestments.length === currentInvestments.length) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar inversión:', error);\n    return false;\n  }\n};\n\n// ==================== METAS FINANCIERAS ====================\n\n/**\n * Guardar metas financieras en localStorage\n * @param {Array} goals - Metas financieras a guardar\n */\nexport const saveFinancialGoals = (goals) => {\n  return saveData('financial_goals', goals);\n};\n\n/**\n * Obtener metas financieras de localStorage\n * @returns {Array} - Metas financieras guardadas o array vacío\n */\nexport const getFinancialGoals = () => {\n  return getData('financial_goals', []);\n};\n\n/**\n * Agregar una meta financiera\n * @param {Object} goal - Meta financiera a agregar\n */\nexport const addFinancialGoal = (goal) => {\n  try {\n    // Generar ID si no tiene\n    const goalWithId = {\n      ...goal,\n      id: goal.id || generateId()\n    };\n\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Agregar la nueva meta\n    const updatedGoals = [...currentGoals, goalWithId];\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return goalWithId;\n  } catch (error) {\n    console.error('Error al agregar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una meta financiera\n * @param {string} id - ID de la meta\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateFinancialGoal = (id, updates) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Buscar la meta\n    const index = currentGoals.findIndex(g => g.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la meta\n    const updatedGoals = [...currentGoals];\n    updatedGoals[index] = {\n      ...updatedGoals[index],\n      ...updates\n    };\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return updatedGoals[index];\n  } catch (error) {\n    console.error('Error al actualizar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una meta financiera\n * @param {string} id - ID de la meta\n */\nexport const deleteFinancialGoal = (id) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Filtrar la meta a eliminar\n    const updatedGoals = currentGoals.filter(g => g.id !== id);\n\n    // Si no se eliminó ninguna meta, retornar false\n    if (updatedGoals.length === currentGoals.length) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar meta financiera:', error);\n    return false;\n  }\n};\n"],"names":["exportToCSV","data","filename","length","headers","Object","keys","csvContent","join","map","row","header","value","undefined","JSON","stringify","replace","String","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportToJSON","exportToExcel","SummaryContainer","styled","div","SummaryCard","h3","span","CardHeader","IconContainer","props","CardTitle","Amount","SecondaryAmount","formatCurrency","amount","currency","arguments","Intl","NumberFormat","format","_ref","transactions","exchangeRate","activeTab","setActiveTab","useState","income","filter","t","reduce","sum","expense","balance","balanceUSD","incomeUSD","expenseUSD","cashTransactions","_t$platform","platform","toLowerCase","includes","digitalTransactions","cashIncome","cashExpense","cashBalance","digitalIncome","digitalExpense","digitalBalance","currentBalance","currentIncome","currentExpense","currentBalanceUSD","currentIncomeUSD","currentExpenseUSD","TabsContainer","Tab","button","active","_jsxs","children","onClick","_jsx","FiDollarSign","FiPocket","FiCreditCard","FiArrowUp","FiArrowDown","threshold","velocityThreshold","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","onTap","onDoubleTap","onLongPress","touchStart","setTouchStart","x","y","time","touchEnd","setTouchEnd","isTouching","setIsTouching","lastTap","useRef","longPressTimer","useEffect","current","clearTimeout","gestureHandlers","onTouchStart","e","touch","touches","now","Date","clientX","clientY","setTimeout","onTouchMove","Math","abs","onTouchEnd","deltaX","deltaY","timeElapsed","velocity","sqrt","onTouchCancel","handleTouchCancel","CardContainer","AnimatedCard","animated","LeftActions","RightActions","leftAction","rightAction","swiped","setSwiped","api","useSpring","config","tension","friction","useGestures","start","transform","to","ConverterContainer","ConvertedAmount","ExchangeRateTooltip","RefreshIcon","FiRefreshCw","isLoading","fromCurrency","toCurrency","convertedAmount","setConvertedAmount","setIsLoading","showTooltip","setShowTooltip","setExchangeRate","async","rate","getExchangeRate","converted","convertCurrency","error","console","fetchConvertedAmount","handleRefresh","stopPropagation","localStorage","removeItem","onMouseEnter","onMouseLeave","role","tabIndex","onKeyDown","key","preventDefault","_Fragment","marginLeft","cursor","toFixed","TransactionContainer","TransactionInfo","TransactionDetails","TransactionTitle","TransactionCategory","TransactionPlatform","TransactionDate","TransactionAmount","TransactionActions","TransactionAmountContainer","ActionButton","color","SwipeAction","DeleteAction","EditAction","TransactionItem","transaction","onEdit","onDelete","id","title","category","date","platformType","name","platformName","platformString","split","savedCashPlatforms","getItem","parse","getPlatformInfo","handleEdit","useCallback","handleDelete","formattedDate","useMemo","toLocaleDateString","formattedAmount","categoryName","expenseCategories","incomeCategories","savedExpenseCategories","savedIncomeCategories","foundCategory","find","cat","food","transport","housing","entertainment","utilities","health","education","shopping","salary","investment","gift","other","getCategoryName","window","innerWidth","SwipeableCard","FiEdit2","FiTrash2","CurrencyConverter","parseFloat","memo","fetchFunction","initialPageSize","incrementSize","maxItems","loadOnMount","dependencies","setData","loading","setLoading","setError","hasMore","setHasMore","pageSize","setPageSize","totalCount","setTotalCount","loadingRef","loadData","reset","end","result","prevData","count","loadedCount","hasMoreData","err","loadMore","prevSize","refresh","ListContainer","LoadingIndicator","LoadMoreButton","ErrorMessage","EmptyMessage","renderItem","keyExtractor","useInfiniteScroll","emptyMessage","loadingMessage","errorMessage","loadMoreText","observerTarget","useProgressiveLoading","observer","IntersectionObserver","entries","isIntersecting","observe","unobserve","renderItems","item","index","React","message","FiLoader","disabled","ref","height","textAlign","fontSize","margin","list","getItemKey","mapItem","deps","MemoizedTransactionItem","TransactionList","onEditTransaction","onDeleteTransaction","filters","sortConfig","column","direction","fetchTransactions","_ref2","slice","getTransactionsPaginated","sort","renderTransaction","getTransactionKey","memoizedItems","useMemoizedList","ProgressiveList","ManagerContainer","ManagerHeader","ManagerTitle","CloseButton","CategoriesList","CategoryItem","CategoryName","CategoryActions","AddCategoryForm","form","Input","input","AddButton","SaveButton","EditForm","EditInput","EditActions","onClose","onCategoriesChange","setExpenseCategories","setIncomeCategories","newCategory","setNewCategory","editingCategory","setEditingCategory","editValue","setEditValue","handleCancelEdit","currentCategories","FiX","onChange","target","autoFocus","categoryId","trim","some","alert","handleSaveEdit","FiCheck","handleEditCategory","confirm","onSubmit","newId","placeholder","FiPlus","saveCategories","setItem","FiSave","PlatformTypeContainer","PlatformTypeTitle","h4","PlatformList","ul","PlatformItem","li","PlatformName","DeleteButton","AddPlatformForm","Select","select","defaultPlatforms","cash","virtual","onPlatformsChange","platforms","setPlatforms","newPlatform","setNewPlatform","setPlatformType","savedVirtualPlatforms","cashPlatforms","virtualPlatforms","handleDeletePlatform","prev","_","i","savePlatforms","marginTop","handleReset","background","border","textDecoration","FormContainer","FormHeader","FormTitle","FormGroup","Label","label","required","RadioGroup","RadioLabel","checked","RadioInput","ButtonGroup","SubmitButton","CancelButton","ManageCategoriesButton","initialFormState","toISOString","onCancel","formData","setFormData","showCategoryManager","setShowCategoryManager","showPlatformManager","setShowPlatformManager","customCategories","setCustomCategories","isEditMode","handleChange","CategoryManager","newCategories","PlatformManager","newPlatforms","htmlFor","min","step","FiSettings","marginRight","FiltersContainer","FiltersHeader","FiltersIcon","FiFilter","FiltersContent","SearchContainer","SearchIcon","FiSearch","SearchInput","FilterGroup","FilterSelect","DateContainer","DateInput","onFilterChange","search","startDate","endDate","subscribeToTable","table","callback","options","event","supabase","channel","on","schema","payload","subscribe","items","precision","transitions","useTransition","from","opacity","enter","leave","MenuContainer","ExportButton","AnimatedButton","DropdownMenu","MenuTitle","MenuItem","isOpen","setIsOpen","menuRef","menuAnimation","handleClickOutside","contains","addEventListener","removeEventListener","variant","toggleMenu","FiDownload","handleExportCSV","FiFileText","handleExportJSON","FiDatabase","handleExportExcel","Overlay","DialogContainer","DialogTitle","DialogContent","DialogActions","onConfirm","confirmText","cancelText","confirmVariant","overlayAnimation","dialogAnimation","fullWidth","FinancesContainer","FinancesHeader","TransactionsSection","TransactionsHeaderActions","SectionTitle","h2","Finances","setTransactions","showForm","setShowForm","editingTransaction","setEditingTransaction","setFilters","filteredTransactions","setFilteredTransactions","confirmDialog","setConfirmDialog","subscription","localData","getTransactions","log","apiData","getTransactionsFromAPI","saveTransactions","apiError","loadTransactions","userId","user","auth","getUser","subscribeToTransactions","eventType","new","newRecord","old","oldRecord","updated","showInfo","setupRealtimeSubscription","removeChannel","unsubscribe","searchTerm","a","b","localeCompare","AnimatedTransition","padding","backgroundColor","borderRadius","marginBottom","display","alignItems","gap","boxShadow","width","justifyContent","fontWeight","minWidth","borderColor","LoadingSpinner","text","FinancialSummary","ExportMenu","TransactionForm","newTransaction","updatedTransaction","updateTransaction","showSuccess","apiUpdated","updateTransactionAPI","createdTransaction","addTransaction","apiCreated","createTransactionAPI","showError","handleCancelForm","TransactionFilters","transactionId","deleteTransaction","deleteTransactionAPI","ConfirmDialog","STORAGE_PREFIX","saveData","fullKey","getData","defaultValue","storedData","parsedData","generateId","random","toString","substr","transactionWithId","updatedTransactions","updates","currentTransactions","findIndex","saveTasks","tasks","getTasks","addTask","task","taskWithId","created_at","updatedTasks","updateTask","currentTasks","deleteTask","toggleTaskComplete","completed","saveInvestments","investments","getInvestments","addInvestment","investmentWithId","updatedInvestments","updateInvestment","currentInvestments","deleteInvestment","saveFinancialGoals","goals","getFinancialGoals","addFinancialGoal","goal","goalWithId","updatedGoals","updateFinancialGoal","currentGoals","g","deleteFinancialGoal"],"sourceRoot":""}