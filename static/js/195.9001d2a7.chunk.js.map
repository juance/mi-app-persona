{"version":3,"file":"static/js/195.9001d2a7.chunk.js","mappings":"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","sources":["context/AuthContext.js","components/common/SyncForceButton.js","pages/Dashboard.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../services/supabase';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Verificar sesión actual\n    const checkUser = async () => {\n      try {\n        const { data: { session } } = await supabase.auth.getSession();\n        setUser(session?.user || null);\n      } catch (error) {\n        console.error('Error checking auth session:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkUser();\n\n    // Escuchar cambios de autenticación\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        setUser(session?.user || null);\n        setLoading(false);\n      }\n    );\n\n    return () => {\n      authListener?.subscription?.unsubscribe();\n    };\n  }, []);\n\n  const signUp = async (email, password) => {\n    try {\n      setError(null);\n      const { data, error } = await supabase.auth.signUp({ \n        email, \n        password \n      });\n      \n      if (error) throw error;\n      \n      return data;\n    } catch (error) {\n      console.error('Error signing up:', error);\n      setError(error.message);\n      return null;\n    }\n  };\n\n  const signIn = async (email, password) => {\n    try {\n      setError(null);\n      const { data, error } = await supabase.auth.signInWithPassword({ \n        email, \n        password \n      });\n      \n      if (error) throw error;\n      \n      return data;\n    } catch (error) {\n      console.error('Error signing in:', error);\n      setError(error.message);\n      return null;\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      setError(null);\n      const { error } = await supabase.auth.signOut();\n      \n      if (error) throw error;\n      \n      return true;\n    } catch (error) {\n      console.error('Error signing out:', error);\n      setError(error.message);\n      return false;\n    }\n  };\n\n  const resetPassword = async (email) => {\n    try {\n      setError(null);\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`,\n      });\n      \n      if (error) throw error;\n      \n      return true;\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setError(error.message);\n      return false;\n    }\n  };\n\n  const updatePassword = async (password) => {\n    try {\n      setError(null);\n      const { error } = await supabase.auth.updateUser({ password });\n      \n      if (error) throw error;\n      \n      return true;\n    } catch (error) {\n      console.error('Error updating password:', error);\n      setError(error.message);\n      return false;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    signUp,\n    signIn,\n    signOut,\n    resetPassword,\n    updatePassword\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiRefreshCw } from 'react-icons/fi';\nimport { useAuth } from '../../context/AuthContext';\nimport { syncAllUserData } from '../../services/syncService';\nimport { showInfo, showError } from './Notification';\n\nconst SyncButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  background-color: ${props => props.syncing ? 'var(--bg-medium)' : 'var(--primary-color)'};\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: ${props => props.syncing ? 'not-allowed' : 'pointer'};\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n  &:hover {\n    background-color: ${props => props.syncing ? 'var(--bg-medium)' : 'var(--primary-dark)'};\n  }\n\n  svg {\n    animation: ${props => props.syncing ? 'spin 1s linear infinite' : 'none'};\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst SyncForceButton = () => {\n  const [syncing, setSyncing] = useState(false);\n  const { user } = useAuth();\n\n  const handleSync = async () => {\n    if (syncing || !user) return;\n\n    setSyncing(true);\n    showInfo('Iniciando sincronización forzada...');\n\n    try {\n      const result = await syncAllUserData(user.id, true);\n\n      if (result.success) {\n        showInfo(`Sincronización completada: ${result.succeeded} almacenes sincronizados`);\n      } else {\n        showError(`Sincronización parcial: ${result.succeeded} sincronizados, ${result.failed} fallidos`);\n      }\n    } catch (error) {\n      console.error('Error al forzar sincronización:', error);\n      showError('Error al sincronizar datos');\n    } finally {\n      setSyncing(false);\n    }\n  };\n\n  return (\n    <SyncButton\n      onClick={handleSync}\n      syncing={syncing}\n      disabled={syncing}\n      className=\"sync-force-button\"\n    >\n      <FiRefreshCw size={16} />\n      {syncing ? 'Sincronizando...' : 'Sincronizar datos'}\n    </SyncButton>\n  );\n};\n\nexport default SyncForceButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FiCheckSquare, FiDollarSign, FiTrendingUp, FiTarget, FiCalendar, FiDatabase } from 'react-icons/fi';\nimport SyncForceButton from '../components/common/SyncForceButton';\n\nconst DashboardContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst DashboardHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst ModulesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 24px;\n  margin-bottom: 40px;\n`;\n\nconst ModuleCard = styled(Link)`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  text-decoration: none;\n  color: var(--text-dark);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n    color: var(--text-dark);\n  }\n`;\n\nconst ModuleIcon = styled.div`\n  font-size: 2.5rem;\n  margin-bottom: 16px;\n  color: var(--primary-color);\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(99, 102, 241, 0.1);\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  ${ModuleCard}:hover & {\n    transform: scale(1.1);\n    background-color: rgba(99, 102, 241, 0.15);\n  }\n`;\n\nconst ModuleTitle = styled.h3`\n  margin: 0 0 8px 0;\n  font-size: 1.3rem;\n  font-weight: 600;\n`;\n\nconst ModuleDescription = styled.p`\n  margin: 0;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n`;\n\nconst WelcomeSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 32px;\n  margin-bottom: 32px;\n  box-shadow: var(--card-shadow);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nconst WelcomeTitle = styled.h2`\n  font-size: 1.8rem;\n  font-weight: 600;\n  margin-bottom: 16px;\n  color: var(--text-dark);\n`;\n\nconst WelcomeText = styled.p`\n  font-size: 1.1rem;\n  color: var(--text-medium);\n  max-width: 800px;\n  margin: 0 auto 24px;\n  line-height: 1.6;\n`;\n\nconst Dashboard = () => {\n  return (\n    <DashboardContainer>\n      <DashboardHeader>\n        <h1>Dashboard</h1>\n        <p>Bienvenido a tu panel de control personal</p>\n      </DashboardHeader>\n\n      <WelcomeSection>\n        <WelcomeTitle>¡Bienvenido a tu App Personal!</WelcomeTitle>\n        <WelcomeText>\n          Esta aplicación te ayudará a gestionar tus tareas, finanzas, inversiones, metas financieras y calendario en un solo lugar.\n          Explora los diferentes módulos para comenzar a organizar tu vida personal.\n        </WelcomeText>\n        <SyncForceButton />\n      </WelcomeSection>\n\n      <ModulesGrid>\n        <ModuleCard to=\"/tasks\">\n          <ModuleIcon>\n            <FiCheckSquare />\n          </ModuleIcon>\n          <ModuleTitle>Tareas</ModuleTitle>\n          <ModuleDescription>Gestiona tus tareas y pendientes</ModuleDescription>\n        </ModuleCard>\n\n        <ModuleCard to=\"/finances\">\n          <ModuleIcon>\n            <FiDollarSign />\n          </ModuleIcon>\n          <ModuleTitle>Finanzas</ModuleTitle>\n          <ModuleDescription>Controla tus ingresos y gastos</ModuleDescription>\n        </ModuleCard>\n\n        <ModuleCard to=\"/investments\">\n          <ModuleIcon>\n            <FiTrendingUp />\n          </ModuleIcon>\n          <ModuleTitle>Inversiones</ModuleTitle>\n          <ModuleDescription>Gestiona tu cartera de inversiones</ModuleDescription>\n        </ModuleCard>\n\n        <ModuleCard to=\"/financial-goals\">\n          <ModuleIcon>\n            <FiTarget />\n          </ModuleIcon>\n          <ModuleTitle>Metas Financieras</ModuleTitle>\n          <ModuleDescription>Establece y sigue tus objetivos financieros</ModuleDescription>\n        </ModuleCard>\n\n        <ModuleCard to=\"/calendar\">\n          <ModuleIcon>\n            <FiCalendar />\n          </ModuleIcon>\n          <ModuleTitle>Calendario</ModuleTitle>\n          <ModuleDescription>Organiza tus eventos y citas</ModuleDescription>\n        </ModuleCard>\n\n        <ModuleCard as=\"div\" onClick={() => document.querySelector('.sync-force-button').click()}>\n          <ModuleIcon>\n            <FiDatabase />\n          </ModuleIcon>\n          <ModuleTitle>Sincronización</ModuleTitle>\n          <ModuleDescription>Sincroniza tus datos entre dispositivos</ModuleDescription>\n        </ModuleCard>\n      </ModulesGrid>\n    </DashboardContainer>\n  );\n};\n\nexport default Dashboard;\n"],"names":["AuthContext","createContext","SyncButton","styled","button","props","syncing","SyncForceButton","setSyncing","useState","user","useContext","_jsxs","onClick","async","showInfo","result","syncAllUserData","id","success","succeeded","showError","failed","error","console","disabled","className","children","_jsx","FiRefreshCw","size","DashboardContainer","div","DashboardHeader","ModulesGrid","ModuleCard","Link","ModuleIcon","ModuleTitle","h3","ModuleDescription","p","WelcomeSection","WelcomeTitle","h2","WelcomeText","Dashboard","to","FiCheckSquare","FiDollarSign","FiTrendingUp","FiTarget","FiCalendar","as","document","querySelector","click","FiDatabase"],"sourceRoot":""}