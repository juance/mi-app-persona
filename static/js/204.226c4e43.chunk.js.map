{"version":3,"file":"static/js/204.226c4e43.chunk.js","mappings":"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","sources":["components/Calendar/CalendarGrid.js","components/Calendar/EventList.js","components/Calendar/EventForm.js","pages/Calendar.js","services/simpleStorage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\n\nconst CalendarContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 12px;\n  margin-bottom: 20px;\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (max-width: 768px) {\n    padding: 8px;\n    margin-bottom: 16px;\n  }\n`;\n\nconst CalendarHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n\n  @media (max-width: 768px) {\n    margin-bottom: 8px;\n  }\n`;\n\nconst MonthNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst MonthTitle = styled.h2`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  min-width: 150px;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    min-width: 120px;\n  }\n`;\n\nconst NavButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--primary-color);\n    background-color: rgba(99, 102, 241, 0.1);\n  }\n\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    padding: 3px;\n  }\n`;\n\nconst TodayButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 4px 8px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 0.75rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(99, 102, 241, 0.2);\n  }\n\n  @media (max-width: 768px) {\n    padding: 3px 6px;\n    font-size: 0.7rem;\n  }\n`;\n\nconst WeekdaysRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 4px;\n  margin-bottom: 4px;\n\n  @media (max-width: 768px) {\n    gap: 2px;\n    margin-bottom: 2px;\n  }\n`;\n\nconst Weekday = styled.div`\n  text-align: center;\n  font-weight: 600;\n  color: var(--text-medium);\n  padding: 4px 2px;\n  font-size: 0.7rem;\n\n  @media (max-width: 768px) {\n    padding: 2px 1px;\n    font-size: 0.65rem;\n  }\n`;\n\nconst DaysGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 4px;\n\n  @media (max-width: 768px) {\n    gap: 2px;\n  }\n`;\n\nconst DayCell = styled.div`\n  aspect-ratio: 1;\n  border-radius: var(--border-radius);\n  padding: 4px 2px;\n  cursor: pointer;\n  position: relative;\n  background-color: ${props => {\n    if (props.isToday) return 'rgba(99, 102, 241, 0.1)';\n    if (props.isSelected) return 'rgba(99, 102, 241, 0.2)';\n    if (props.isCurrentMonth) return 'var(--bg-light)';\n    return 'var(--bg-medium)';\n  }};\n  color: ${props => {\n    if (props.isToday) return 'var(--primary-color)';\n    if (!props.isCurrentMonth) return 'var(--text-light)';\n    return 'var(--text-dark)';\n  }};\n  font-weight: ${props => props.isToday ? '600' : 'normal'};\n  transition: all var(--transition-speed);\n\n  &:hover {\n    background-color: ${props => props.isToday\n      ? 'rgba(99, 102, 241, 0.2)'\n      : 'rgba(99, 102, 241, 0.1)'\n    };\n    transform: translateY(-1px);\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  }\n\n  @media (max-width: 768px) {\n    padding: 2px 1px;\n    border-radius: 4px;\n  }\n`;\n\nconst DayNumber = styled.div`\n  font-size: 0.75rem;\n  margin-bottom: 1px;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    font-size: 0.7rem;\n    margin-bottom: 0;\n  }\n`;\n\nconst EventIndicatorsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1px;\n  justify-content: center;\n  max-height: 8px;\n  overflow: hidden;\n\n  @media (max-width: 768px) {\n    max-height: 6px;\n  }\n`;\n\nconst EventIndicator = styled.div`\n  width: 3px;\n  height: 3px;\n  border-radius: 50%;\n  background-color: ${props => {\n    switch (props.category) {\n      case 'personal': return 'var(--primary-color)';\n      case 'familia': return 'var(--secondary-color)';\n      case 'duchene': return 'var(--accent-color)';\n      case 'lavadero': return 'var(--danger-color)';\n      case 'vapea': return 'var(--primary-dark)';\n      default: return 'var(--text-light)';\n    }\n  }};\n\n  @media (max-width: 768px) {\n    width: 2px;\n    height: 2px;\n  }\n`;\n\nconst CalendarGrid = ({ events, onSelectDate }) => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  // Obtener el primer día del mes actual\n  const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n\n  // Obtener el último día del mes actual\n  const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n\n  // Obtener el día de la semana del primer día del mes (0 = Domingo, 1 = Lunes, etc.)\n  const firstDayOfWeek = firstDayOfMonth.getDay();\n\n  // Ajustar para que la semana comience en lunes (0 = Lunes, 6 = Domingo)\n  const adjustedFirstDayOfWeek = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;\n\n  // Calcular el primer día que se mostrará en el calendario (puede ser del mes anterior)\n  const firstDayToShow = new Date(firstDayOfMonth);\n  firstDayToShow.setDate(firstDayToShow.getDate() - adjustedFirstDayOfWeek);\n\n  // Generar los días para mostrar en el calendario (6 semanas)\n  const daysToShow = [];\n  const currentDay = new Date(firstDayToShow);\n\n  for (let i = 0; i < 42; i++) {\n    daysToShow.push(new Date(currentDay));\n    currentDay.setDate(currentDay.getDate() + 1);\n  }\n\n  // Nombres de los días de la semana\n  const weekdays = ['Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb', 'Dom'];\n\n  // Nombres de los meses\n  const months = [\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\n    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\n  ];\n\n  // Navegar al mes anterior\n  const goToPreviousMonth = () => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() - 1);\n    setCurrentDate(newDate);\n  };\n\n  // Navegar al mes siguiente\n  const goToNextMonth = () => {\n    const newDate = new Date(currentDate);\n    newDate.setMonth(newDate.getMonth() + 1);\n    setCurrentDate(newDate);\n  };\n\n  // Ir al mes actual\n  const goToToday = () => {\n    setCurrentDate(new Date());\n    setSelectedDate(new Date());\n    onSelectDate(new Date());\n  };\n\n  // Verificar si una fecha es hoy\n  const isToday = (date) => {\n    const today = new Date();\n    return date.getDate() === today.getDate() &&\n           date.getMonth() === today.getMonth() &&\n           date.getFullYear() === today.getFullYear();\n  };\n\n  // Verificar si una fecha está seleccionada\n  const isSelected = (date) => {\n    return date.getDate() === selectedDate.getDate() &&\n           date.getMonth() === selectedDate.getMonth() &&\n           date.getFullYear() === selectedDate.getFullYear();\n  };\n\n  // Verificar si una fecha pertenece al mes actual\n  const isCurrentMonth = (date) => {\n    return date.getMonth() === currentDate.getMonth();\n  };\n\n  // Obtener eventos para una fecha específica\n  const getEventsForDate = (date) => {\n    return events.filter(event => {\n      const eventDate = new Date(event.date);\n      return eventDate.getDate() === date.getDate() &&\n             eventDate.getMonth() === date.getMonth() &&\n             eventDate.getFullYear() === date.getFullYear();\n    });\n  };\n\n  // Manejar clic en una celda de día\n  const handleDayClick = (date) => {\n    setSelectedDate(date);\n    onSelectDate(date);\n  };\n\n  return (\n    <CalendarContainer>\n      <CalendarHeader>\n        <MonthNavigation>\n          <NavButton onClick={goToPreviousMonth}>\n            <FiChevronLeft />\n          </NavButton>\n          <MonthTitle>\n            {months[currentDate.getMonth()]} {currentDate.getFullYear()}\n          </MonthTitle>\n          <NavButton onClick={goToNextMonth}>\n            <FiChevronRight />\n          </NavButton>\n        </MonthNavigation>\n\n        <TodayButton onClick={goToToday}>\n          Hoy\n        </TodayButton>\n      </CalendarHeader>\n\n      <WeekdaysRow>\n        {weekdays.map(day => (\n          <Weekday key={day}>{day}</Weekday>\n        ))}\n      </WeekdaysRow>\n\n      <DaysGrid>\n        {daysToShow.map((day, index) => {\n          const dayEvents = getEventsForDate(day);\n\n          return (\n            <DayCell\n              key={index}\n              isToday={isToday(day)}\n              isSelected={isSelected(day)}\n              isCurrentMonth={isCurrentMonth(day)}\n              onClick={() => handleDayClick(day)}\n            >\n              <DayNumber>{day.getDate()}</DayNumber>\n\n              <EventIndicatorsContainer>\n                {dayEvents.slice(0, 3).map((event, i) => (\n                  <EventIndicator key={i} category={event.category} />\n                ))}\n              </EventIndicatorsContainer>\n            </DayCell>\n          );\n        })}\n      </DaysGrid>\n    </CalendarContainer>\n  );\n};\n\nexport default CalendarGrid;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiClock, FiMapPin, FiEdit2, FiTrash2 } from 'react-icons/fi';\n\nconst ListContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst EventsTitle = styled.h3`\n  margin: 0 0 16px 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 30px 0;\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n`;\n\nconst EventItem = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 16px;\n  margin-bottom: 12px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  border-left: 4px solid ${props => {\n    switch (props.category) {\n      case 'personal': return 'var(--primary-color)';\n      case 'familia': return 'var(--secondary-color)';\n      case 'duchene': return 'var(--accent-color)';\n      case 'lavadero': return 'var(--danger-color)';\n      case 'vapea': return 'var(--primary-dark)';\n      default: return 'var(--text-light)';\n    }\n  }};\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: var(--card-shadow-hover);\n  }\n`;\n\nconst EventHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin-bottom: 12px;\n`;\n\nconst EventTitle = styled.h4`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst EventActions = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1rem;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: ${props => props.color || 'var(--primary-color)'};\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n`;\n\nconst EventDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst EventDetail = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: var(--text-medium);\n  font-size: 0.9rem;\n`;\n\nconst EventDescription = styled.p`\n  margin: 12px 0 0;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n  line-height: 1.5;\n`;\n\nconst CategoryBadge = styled.span`\n  font-size: 0.8rem;\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    switch (props.category) {\n      case 'personal': return 'rgba(99, 102, 241, 0.1)';\n      case 'familia': return 'rgba(16, 185, 129, 0.1)';\n      case 'duchene': return 'rgba(245, 158, 11, 0.1)';\n      case 'lavadero': return 'rgba(239, 68, 68, 0.1)';\n      case 'vapea': return 'rgba(168, 85, 247, 0.1)';\n      default: return 'rgba(156, 163, 175, 0.1)';\n    }\n  }};\n  color: ${props => {\n    switch (props.category) {\n      case 'personal': return 'var(--primary-color)';\n      case 'familia': return 'var(--secondary-color)';\n      case 'duchene': return 'var(--accent-color)';\n      case 'lavadero': return 'var(--danger-color)';\n      case 'vapea': return 'var(--primary-dark)';\n      default: return 'var(--text-medium)';\n    }\n  }};\n`;\n\nconst formatTime = (timeString) => {\n  if (!timeString) return '';\n\n  const [hours, minutes] = timeString.split(':');\n  return `${hours}:${minutes}`;\n};\n\nconst getCategoryName = (category) => {\n  switch (category) {\n    case 'personal': return 'Personal';\n    case 'familia': return 'Familia';\n    case 'duchene': return 'Duchene';\n    case 'lavadero': return 'Lavadero';\n    case 'vapea': return 'Vapea Conmigo';\n    default: return 'Otro';\n  }\n};\n\nconst EventList = ({ events, selectedDate, onEditEvent, onDeleteEvent }) => {\n  // Filtrar eventos para la fecha seleccionada\n  const filteredEvents = events.filter(event => {\n    const eventDate = new Date(event.date);\n    return eventDate.getDate() === selectedDate.getDate() &&\n           eventDate.getMonth() === selectedDate.getMonth() &&\n           eventDate.getFullYear() === selectedDate.getFullYear();\n  });\n\n  // Formatear fecha\n  const formatDate = (date) => {\n    const options = { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' };\n    return date.toLocaleDateString('es-ES', options);\n  };\n\n  return (\n    <ListContainer>\n      <EventsTitle>Eventos para {formatDate(selectedDate)}</EventsTitle>\n\n      {filteredEvents.length === 0 ? (\n        <EmptyMessage>\n          No hay eventos para esta fecha. ¡Agrega uno nuevo!\n        </EmptyMessage>\n      ) : (\n        filteredEvents.map(event => (\n          <EventItem key={event.id} category={event.category}>\n            <EventHeader>\n              <EventTitle>{event.title}</EventTitle>\n              <EventActions>\n                <ActionButton onClick={() => onEditEvent(event)} color=\"var(--primary-color)\">\n                  <FiEdit2 />\n                </ActionButton>\n                <ActionButton onClick={() => onDeleteEvent(event.id)} color=\"var(--danger-color)\">\n                  <FiTrash2 />\n                </ActionButton>\n              </EventActions>\n            </EventHeader>\n\n            <EventDetails>\n              {(event.start_time || event.end_time) && (\n                <EventDetail>\n                  <FiClock />\n                  {event.start_time && formatTime(event.start_time)}\n                  {event.end_time && ` - ${formatTime(event.end_time)}`}\n                </EventDetail>\n              )}\n\n              {event.location && (\n                <EventDetail>\n                  <FiMapPin />\n                  {event.location}\n                </EventDetail>\n              )}\n\n              <EventDetail>\n                <CategoryBadge category={event.category}>\n                  {getCategoryName(event.category)}\n                </CategoryBadge>\n              </EventDetail>\n            </EventDetails>\n\n            {event.description && (\n              <EventDescription>{event.description}</EventDescription>\n            )}\n          </EventItem>\n        ))\n      )}\n    </ListContainer>\n  );\n};\n\nexport default EventList;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiX } from 'react-icons/fi';\n\nconst FormContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst FormHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst FormTitle = styled.h3`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all var(--transition-speed);\n\n  &:hover {\n    color: var(--danger-color);\n    background-color: rgba(239, 68, 68, 0.1);\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  padding: 12px;\n  background-color: rgba(239, 68, 68, 0.08);\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--danger-color);\n`;\n\nconst FormGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n  grid-column: ${props => props.fullWidth ? 'span 2' : 'span 1'};\n\n  @media (max-width: 768px) {\n    grid-column: span 1;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n\n  &::after {\n    content: ' *';\n    color: var(--danger-color);\n    display: ${props => props.required ? 'inline' : 'none'};\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  min-height: 100px;\n  resize: vertical;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 12px;\n  margin-top: 24px;\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  flex: 1;\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst CancelButton = styled.button`\n  background-color: var(--bg-medium);\n  color: var(--text-medium);\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--bg-dark);\n    color: var(--text-light);\n  }\n`;\n\nconst EventForm = ({ event, selectedDate, onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    date: selectedDate ? selectedDate.toISOString().split('T')[0] : new Date().toISOString().split('T')[0],\n    start_time: '',\n    end_time: '',\n    location: '',\n    category: 'personal'\n  });\n  const [error, setError] = useState('');\n  const isEditMode = !!event?.id;\n\n  useEffect(() => {\n    if (event) {\n      setFormData({\n        title: event.title || '',\n        description: event.description || '',\n        date: event.date || (selectedDate ? selectedDate.toISOString().split('T')[0] : new Date().toISOString().split('T')[0]),\n        start_time: event.start_time || '',\n        end_time: event.end_time || '',\n        location: event.location || '',\n        category: event.category || 'personal'\n      });\n    } else if (selectedDate) {\n      setFormData(prev => ({\n        ...prev,\n        date: selectedDate.toISOString().split('T')[0]\n      }));\n    }\n  }, [event, selectedDate]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validación\n    if (!formData.title.trim()) {\n      setError('Por favor ingresa un título para el evento.');\n      return;\n    }\n\n    if (formData.start_time && formData.end_time && formData.start_time > formData.end_time) {\n      setError('La hora de inicio debe ser anterior a la hora de fin.');\n      return;\n    }\n\n    // Enviar datos\n    onSubmit({\n      ...formData,\n      id: event?.id || Date.now()\n    });\n\n    setError('');\n  };\n\n  return (\n    <FormContainer>\n      <FormHeader>\n        <FormTitle>\n          {isEditMode ? 'Editar Evento' : 'Crear Nuevo Evento'}\n        </FormTitle>\n        <CloseButton onClick={onCancel}>\n          <FiX />\n        </CloseButton>\n      </FormHeader>\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGrid>\n          <FormGroup fullWidth>\n            <Label htmlFor=\"title\" required>Título</Label>\n            <Input\n              type=\"text\"\n              id=\"title\"\n              name=\"title\"\n              value={formData.title}\n              onChange={handleChange}\n              placeholder=\"Ej: Reunión de trabajo\"\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"date\" required>Fecha</Label>\n            <Input\n              type=\"date\"\n              id=\"date\"\n              name=\"date\"\n              value={formData.date}\n              onChange={handleChange}\n              required\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"category\" required>Categoría</Label>\n            <Select\n              id=\"category\"\n              name=\"category\"\n              value={formData.category}\n              onChange={handleChange}\n              required\n            >\n              <option value=\"personal\">Personal</option>\n              <option value=\"familia\">Familia</option>\n              <option value=\"duchene\">Duchene</option>\n              <option value=\"lavadero\">Lavadero</option>\n              <option value=\"vapea\">Vapea Conmigo</option>\n              <option value=\"other\">Otro</option>\n            </Select>\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"start_time\">Hora de inicio</Label>\n            <Input\n              type=\"time\"\n              id=\"start_time\"\n              name=\"start_time\"\n              value={formData.start_time}\n              onChange={handleChange}\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"end_time\">Hora de fin</Label>\n            <Input\n              type=\"time\"\n              id=\"end_time\"\n              name=\"end_time\"\n              value={formData.end_time}\n              onChange={handleChange}\n            />\n          </FormGroup>\n\n          <FormGroup fullWidth>\n            <Label htmlFor=\"location\">Ubicación</Label>\n            <Input\n              type=\"text\"\n              id=\"location\"\n              name=\"location\"\n              value={formData.location}\n              onChange={handleChange}\n              placeholder=\"Ej: Oficina central\"\n            />\n          </FormGroup>\n\n          <FormGroup fullWidth>\n            <Label htmlFor=\"description\">Descripción</Label>\n            <Textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              placeholder=\"Añade detalles sobre este evento...\"\n            />\n          </FormGroup>\n        </FormGrid>\n\n        <ButtonGroup>\n          <SubmitButton type=\"submit\">\n            {isEditMode ? 'Guardar Cambios' : 'Crear Evento'}\n          </SubmitButton>\n          <CancelButton type=\"button\" onClick={onCancel}>\n            Cancelar\n          </CancelButton>\n        </ButtonGroup>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default EventForm;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiPlus } from 'react-icons/fi';\nimport CalendarGrid from '../components/Calendar/CalendarGrid';\nimport EventList from '../components/Calendar/EventList';\nimport EventForm from '../components/Calendar/EventForm';\nimport { showInfo } from '../components/common/Notification';\nimport { getEvents, saveEvents, addEvent, updateEvent, deleteEvent } from '../services/simpleStorage';\n\nconst CalendarContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst CalendarHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst EventsSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst EventsHeaderActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst AddEventButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst Calendar = () => {\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [showForm, setShowForm] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar eventos desde el almacenamiento local\n  useEffect(() => {\n    const loadEvents = () => {\n      try {\n        setLoading(true);\n        // Obtener eventos del almacenamiento local\n        const savedEvents = getEvents();\n        console.log('Eventos cargados desde el almacenamiento local:', savedEvents);\n        setEvents(savedEvents || []);\n      } catch (error) {\n        console.error('Error al cargar eventos:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadEvents();\n\n    // Escuchar eventos de sincronización\n    const handleDataSynced = (event) => {\n      const { detail } = event;\n      if (detail.success && detail.stores && detail.stores.includes('events')) {\n        console.log('Datos de eventos sincronizados, recargando...');\n        // Recargar eventos desde el almacenamiento local\n        const syncedData = getEvents();\n        if (syncedData && syncedData.length > 0) {\n          console.log('Eventos actualizados desde sincronización:', syncedData.length);\n          setEvents(syncedData);\n          showInfo('Eventos actualizados');\n        }\n      }\n    };\n\n    window.addEventListener('data-synced', handleDataSynced);\n\n    // Limpiar suscripciones al desmontar\n    return () => {\n      window.removeEventListener('data-synced', handleDataSynced);\n    };\n  }, []);\n\n  const handleSelectDate = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleAddEvent = (newEvent) => {\n    try {\n      // Si estamos editando, actualizar el evento existente\n      if (editingEvent) {\n        // Actualizar el evento en el almacenamiento local\n        const updatedEvent = updateEvent(newEvent.id, newEvent);\n\n        if (updatedEvent) {\n          console.log('Evento actualizado correctamente:', updatedEvent);\n          // Actualizar el estado\n          setEvents(prev => prev.map(event =>\n            event.id === newEvent.id ? updatedEvent : event\n          ));\n          setEditingEvent(null);\n          showInfo('Evento actualizado correctamente');\n        } else {\n          console.error('No se pudo actualizar el evento');\n          alert('No se pudo actualizar el evento. Por favor, intenta de nuevo.');\n        }\n      } else {\n        // Si es un nuevo evento, agregarlo a la lista\n        // Generar un ID si no tiene\n        const eventWithId = {\n          ...newEvent,\n          id: newEvent.id || `event_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n        };\n\n        // Agregar el evento al almacenamiento local\n        const savedEvent = addEvent(eventWithId);\n\n        if (savedEvent) {\n          console.log('Evento agregado correctamente:', savedEvent);\n          // Actualizar el estado\n          setEvents(prev => [...prev, savedEvent]);\n          showInfo('Evento creado correctamente');\n        } else {\n          console.error('No se pudo agregar el evento');\n          alert('No se pudo agregar el evento. Por favor, intenta de nuevo.');\n        }\n      }\n\n      setShowForm(false);\n    } catch (error) {\n      console.error('Error al guardar el evento:', error);\n      alert('Error al guardar el evento. Por favor, intenta de nuevo.');\n    }\n  };\n\n  const handleEditEvent = (event) => {\n    setEditingEvent(event);\n    setShowForm(true);\n  };\n\n  const handleDeleteEvent = (eventId) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este evento?')) {\n      try {\n        // Eliminar el evento del almacenamiento local\n        const success = deleteEvent(eventId);\n\n        if (success) {\n          console.log('Evento eliminado correctamente');\n          // Actualizar el estado\n          setEvents(prev => prev.filter(event => event.id !== eventId));\n          showInfo('Evento eliminado correctamente');\n        } else {\n          console.error('No se pudo eliminar el evento');\n          alert('No se pudo eliminar el evento. Por favor, intenta de nuevo.');\n        }\n      } catch (error) {\n        console.error('Error al eliminar el evento:', error);\n        alert('Error al eliminar el evento. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n\n  const handleCancelForm = () => {\n    setShowForm(false);\n    setEditingEvent(null);\n  };\n\n  return (\n    <CalendarContainer>\n      <CalendarHeader>\n        <h1>Calendario</h1>\n        <p>Organiza tus eventos y citas</p>\n      </CalendarHeader>\n\n      {/* Calendario */}\n      <CalendarGrid\n        events={events}\n        onSelectDate={handleSelectDate}\n      />\n\n      {/* Sección de eventos */}\n      <EventsSection>\n        <EventsHeaderActions>\n          <SectionTitle>Eventos</SectionTitle>\n          <AddEventButton onClick={() => {\n            setEditingEvent(null);\n            setShowForm(!showForm);\n          }}>\n            <FiPlus />\n            {showForm ? 'Cancelar' : 'Nuevo Evento'}\n          </AddEventButton>\n        </EventsHeaderActions>\n\n        {/* Formulario para agregar/editar eventos */}\n        {showForm && (\n          <EventForm\n            event={editingEvent}\n            selectedDate={selectedDate}\n            onSubmit={handleAddEvent}\n            onCancel={handleCancelForm}\n          />\n        )}\n\n        {/* Lista de eventos */}\n        {loading ? (\n          <div style={{ textAlign: 'center', padding: '20px' }}>\n            <p>Cargando eventos...</p>\n          </div>\n        ) : (\n          <EventList\n            events={events}\n            selectedDate={selectedDate}\n            onEditEvent={handleEditEvent}\n            onDeleteEvent={handleDeleteEvent}\n          />\n        )}\n      </EventsSection>\n    </CalendarContainer>\n  );\n};\n\nexport default Calendar;\n","/**\n * Servicio de almacenamiento local simple\n * Este servicio proporciona funciones básicas para guardar y recuperar datos\n * del localStorage de manera directa y sencilla\n */\n\n// Prefijo para las claves de almacenamiento\nconst STORAGE_PREFIX = 'mi_app_personal_simple_';\n\n/**\n * Guardar datos en localStorage\n * @param {string} key - Clave\n * @param {*} data - Datos a guardar\n */\nexport const saveData = (key, data) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.setItem(fullKey, JSON.stringify(data));\n    console.log(`Datos guardados en localStorage con clave ${key}:`, data);\n    return true;\n  } catch (error) {\n    console.error(`Error al guardar datos en localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n/**\n * Obtener datos de localStorage\n * @param {string} key - Clave\n * @param {*} defaultValue - Valor por defecto\n * @returns {*} - Datos guardados o valor por defecto\n */\nexport const getData = (key, defaultValue = null) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    const storedData = localStorage.getItem(fullKey);\n\n    if (!storedData) {\n      return defaultValue;\n    }\n\n    const parsedData = JSON.parse(storedData);\n    console.log(`Datos recuperados de localStorage con clave ${key}:`, parsedData);\n    return parsedData;\n  } catch (error) {\n    console.error(`Error al obtener datos de localStorage con clave ${key}:`, error);\n    return defaultValue;\n  }\n};\n\n/**\n * Eliminar datos de localStorage\n * @param {string} key - Clave\n */\nexport const removeData = (key) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.removeItem(fullKey);\n    console.log(`Datos eliminados de localStorage con clave ${key}`);\n    return true;\n  } catch (error) {\n    console.error(`Error al eliminar datos de localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n// Función genérica para generar un ID único\nconst generateId = () => `local_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// ==================== TRANSACCIONES ====================\n\n/**\n * Guardar transacciones en localStorage\n * @param {Array} transactions - Transacciones a guardar\n */\nexport const saveTransactions = (transactions) => {\n  return saveData('transactions', transactions);\n};\n\n/**\n * Obtener transacciones de localStorage\n * @returns {Array} - Transacciones guardadas o array vacío\n */\nexport const getTransactions = () => {\n  return getData('transactions', []);\n};\n\n/**\n * Agregar una transacción\n * @param {Object} transaction - Transacción a agregar\n */\nexport const addTransaction = (transaction) => {\n  try {\n    // Generar ID si no tiene\n    const transactionWithId = {\n      ...transaction,\n      id: transaction.id || generateId()\n    };\n\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Agregar la nueva transacción al principio\n    const updatedTransactions = [transactionWithId, ...currentTransactions];\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return transactionWithId;\n  } catch (error) {\n    console.error('Error al agregar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una transacción\n * @param {string} id - ID de la transacción\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTransaction = (id, updates) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Buscar la transacción\n    const index = currentTransactions.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la transacción\n    const updatedTransactions = [...currentTransactions];\n    updatedTransactions[index] = {\n      ...updatedTransactions[index],\n      ...updates\n    };\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return updatedTransactions[index];\n  } catch (error) {\n    console.error('Error al actualizar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una transacción\n * @param {string} id - ID de la transacción\n */\nexport const deleteTransaction = (id) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Filtrar la transacción a eliminar\n    const updatedTransactions = currentTransactions.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna transacción, retornar false\n    if (updatedTransactions.length === currentTransactions.length) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar transacción:', error);\n    return false;\n  }\n};\n\n// ==================== TAREAS ====================\n\n/**\n * Guardar tareas en localStorage\n * @param {Array} tasks - Tareas a guardar\n */\nexport const saveTasks = (tasks) => {\n  return saveData('tasks', tasks);\n};\n\n/**\n * Obtener tareas de localStorage\n * @returns {Array} - Tareas guardadas o array vacío\n */\nexport const getTasks = () => {\n  return getData('tasks', []);\n};\n\n/**\n * Agregar una tarea\n * @param {Object} task - Tarea a agregar\n */\nexport const addTask = (task) => {\n  try {\n    // Generar ID si no tiene\n    const taskWithId = {\n      ...task,\n      id: task.id || generateId(),\n      created_at: task.created_at || new Date().toISOString().split('T')[0]\n    };\n\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Agregar la nueva tarea\n    const updatedTasks = [...currentTasks, taskWithId];\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return taskWithId;\n  } catch (error) {\n    console.error('Error al agregar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una tarea\n * @param {string} id - ID de la tarea\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTask = (id, updates) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la tarea\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      ...updates\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al actualizar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una tarea\n * @param {string} id - ID de la tarea\n */\nexport const deleteTask = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Filtrar la tarea a eliminar\n    const updatedTasks = currentTasks.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna tarea, retornar false\n    if (updatedTasks.length === currentTasks.length) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar tarea:', error);\n    return false;\n  }\n};\n\n/**\n * Cambiar el estado de completado de una tarea\n * @param {string} id - ID de la tarea\n * @param {boolean} completed - Estado de completado\n */\nexport const toggleTaskComplete = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el estado de completado\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      completed: !updatedTasks[index].completed\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al cambiar estado de tarea:', error);\n    return null;\n  }\n};\n\n// ==================== INVERSIONES ====================\n\n/**\n * Guardar inversiones en localStorage\n * @param {Array} investments - Inversiones a guardar\n */\nexport const saveInvestments = (investments) => {\n  return saveData('investments', investments);\n};\n\n/**\n * Obtener inversiones de localStorage\n * @returns {Array} - Inversiones guardadas o array vacío\n */\nexport const getInvestments = () => {\n  return getData('investments', []);\n};\n\n/**\n * Agregar una inversión\n * @param {Object} investment - Inversión a agregar\n */\nexport const addInvestment = (investment) => {\n  try {\n    // Generar ID si no tiene\n    const investmentWithId = {\n      ...investment,\n      id: investment.id || generateId()\n    };\n\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Agregar la nueva inversión\n    const updatedInvestments = [...currentInvestments, investmentWithId];\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return investmentWithId;\n  } catch (error) {\n    console.error('Error al agregar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una inversión\n * @param {string} id - ID de la inversión\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateInvestment = (id, updates) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Buscar la inversión\n    const index = currentInvestments.findIndex(i => i.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la inversión\n    const updatedInvestments = [...currentInvestments];\n    updatedInvestments[index] = {\n      ...updatedInvestments[index],\n      ...updates\n    };\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return updatedInvestments[index];\n  } catch (error) {\n    console.error('Error al actualizar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una inversión\n * @param {string} id - ID de la inversión\n */\nexport const deleteInvestment = (id) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Filtrar la inversión a eliminar\n    const updatedInvestments = currentInvestments.filter(i => i.id !== id);\n\n    // Si no se eliminó ninguna inversión, retornar false\n    if (updatedInvestments.length === currentInvestments.length) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar inversión:', error);\n    return false;\n  }\n};\n\n// ==================== METAS FINANCIERAS ====================\n\n/**\n * Guardar metas financieras en localStorage\n * @param {Array} goals - Metas financieras a guardar\n */\nexport const saveFinancialGoals = (goals) => {\n  return saveData('financial_goals', goals);\n};\n\n/**\n * Obtener metas financieras de localStorage\n * @returns {Array} - Metas financieras guardadas o array vacío\n */\nexport const getFinancialGoals = () => {\n  return getData('financial_goals', []);\n};\n\n/**\n * Agregar una meta financiera\n * @param {Object} goal - Meta financiera a agregar\n */\nexport const addFinancialGoal = (goal) => {\n  try {\n    // Generar ID si no tiene\n    const goalWithId = {\n      ...goal,\n      id: goal.id || generateId()\n    };\n\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Agregar la nueva meta\n    const updatedGoals = [...currentGoals, goalWithId];\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return goalWithId;\n  } catch (error) {\n    console.error('Error al agregar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una meta financiera\n * @param {string} id - ID de la meta\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateFinancialGoal = (id, updates) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Buscar la meta\n    const index = currentGoals.findIndex(g => g.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la meta\n    const updatedGoals = [...currentGoals];\n    updatedGoals[index] = {\n      ...updatedGoals[index],\n      ...updates\n    };\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return updatedGoals[index];\n  } catch (error) {\n    console.error('Error al actualizar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una meta financiera\n * @param {string} id - ID de la meta\n */\nexport const deleteFinancialGoal = (id) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Filtrar la meta a eliminar\n    const updatedGoals = currentGoals.filter(g => g.id !== id);\n\n    // Si no se eliminó ninguna meta, retornar false\n    if (updatedGoals.length === currentGoals.length) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar meta financiera:', error);\n    return false;\n  }\n};\n\n// ==================== EVENTOS DEL CALENDARIO ====================\n\n/**\n * Guardar eventos en localStorage\n * @param {Array} events - Eventos a guardar\n */\nexport const saveEvents = (events) => {\n  return saveData('events', events);\n};\n\n/**\n * Obtener eventos de localStorage\n * @returns {Array} - Eventos guardados o array vacío\n */\nexport const getEvents = () => {\n  return getData('events', []);\n};\n\n/**\n * Agregar un evento\n * @param {Object} event - Evento a agregar\n */\nexport const addEvent = (event) => {\n  try {\n    // Generar ID si no tiene\n    const eventWithId = {\n      ...event,\n      id: event.id || generateId()\n    };\n\n    // Obtener eventos actuales\n    const currentEvents = getEvents();\n\n    // Agregar el nuevo evento\n    const updatedEvents = [...currentEvents, eventWithId];\n\n    // Guardar eventos actualizados\n    saveEvents(updatedEvents);\n\n    return eventWithId;\n  } catch (error) {\n    console.error('Error al agregar evento:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar un evento\n * @param {string} id - ID del evento\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateEvent = (id, updates) => {\n  try {\n    // Obtener eventos actuales\n    const currentEvents = getEvents();\n\n    // Buscar el evento\n    const index = currentEvents.findIndex(e => e.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró el evento con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el evento\n    const updatedEvents = [...currentEvents];\n    updatedEvents[index] = {\n      ...updatedEvents[index],\n      ...updates\n    };\n\n    // Guardar eventos actualizados\n    saveEvents(updatedEvents);\n\n    return updatedEvents[index];\n  } catch (error) {\n    console.error('Error al actualizar evento:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar un evento\n * @param {string} id - ID del evento\n */\nexport const deleteEvent = (id) => {\n  try {\n    // Obtener eventos actuales\n    const currentEvents = getEvents();\n\n    // Filtrar el evento a eliminar\n    const updatedEvents = currentEvents.filter(e => e.id !== id);\n\n    // Si no se eliminó ningún evento, retornar false\n    if (updatedEvents.length === currentEvents.length) {\n      console.error(`No se encontró el evento con ID ${id}`);\n      return false;\n    }\n\n    // Guardar eventos actualizados\n    saveEvents(updatedEvents);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar evento:', error);\n    return false;\n  }\n};\n"],"names":["CalendarContainer","styled","div","CalendarHeader","MonthNavigation","MonthTitle","h2","NavButton","button","TodayButton","WeekdaysRow","Weekday","DaysGrid","DayCell","props","isToday","isSelected","isCurrentMonth","DayNumber","EventIndicatorsContainer","EventIndicator","category","_ref","events","onSelectDate","currentDate","setCurrentDate","useState","Date","selectedDate","setSelectedDate","firstDayOfMonth","getFullYear","getMonth","firstDayOfWeek","getDay","adjustedFirstDayOfWeek","firstDayToShow","setDate","getDate","daysToShow","currentDay","i","push","date","today","_jsxs","children","_jsx","onClick","goToPreviousMonth","newDate","setMonth","FiChevronLeft","goToNextMonth","FiChevronRight","goToToday","map","day","index","dayEvents","filter","event","eventDate","handleDayClick","slice","ListContainer","EventsTitle","h3","EmptyMessage","EventItem","EventHeader","EventTitle","h4","EventActions","ActionButton","color","EventDetails","EventDetail","EventDescription","p","CategoryBadge","span","formatTime","timeString","hours","minutes","split","getCategoryName","onEditEvent","onDeleteEvent","filteredEvents","toLocaleDateString","weekday","month","year","length","title","FiEdit2","id","FiTrash2","start_time","end_time","FiClock","location","FiMapPin","description","FormContainer","FormHeader","FormTitle","CloseButton","ErrorMessage","FormGrid","FormGroup","fullWidth","Label","label","required","Input","input","Textarea","textarea","Select","select","ButtonGroup","SubmitButton","CancelButton","onSubmit","onCancel","formData","setFormData","toISOString","error","setError","isEditMode","useEffect","prev","handleChange","e","name","value","target","FiX","preventDefault","trim","now","htmlFor","type","onChange","placeholder","EventsSection","EventsHeaderActions","SectionTitle","AddEventButton","Calendar","setEvents","showForm","setShowForm","editingEvent","setEditingEvent","loading","setLoading","loadEvents","savedEvents","getEvents","console","log","handleDataSynced","detail","success","stores","includes","syncedData","showInfo","window","addEventListener","removeEventListener","CalendarGrid","FiPlus","EventForm","newEvent","updatedEvent","updateEvent","alert","eventWithId","Math","random","toString","substr","savedEvent","addEvent","handleCancelForm","style","textAlign","padding","EventList","eventId","confirm","deleteEvent","STORAGE_PREFIX","saveData","key","data","fullKey","localStorage","setItem","JSON","stringify","getData","defaultValue","arguments","undefined","storedData","getItem","parsedData","parse","generateId","saveTransactions","transactions","getTransactions","addTransaction","transaction","transactionWithId","updatedTransactions","updateTransaction","updates","currentTransactions","findIndex","t","deleteTransaction","saveTasks","tasks","getTasks","addTask","task","taskWithId","created_at","updatedTasks","updateTask","currentTasks","deleteTask","toggleTaskComplete","completed","saveInvestments","investments","getInvestments","addInvestment","investment","investmentWithId","updatedInvestments","updateInvestment","currentInvestments","deleteInvestment","saveFinancialGoals","goals","getFinancialGoals","addFinancialGoal","goal","goalWithId","updatedGoals","updateFinancialGoal","currentGoals","g","deleteFinancialGoal","saveEvents","updatedEvents","currentEvents"],"sourceRoot":""}