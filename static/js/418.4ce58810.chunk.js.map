{"version":3,"file":"static/js/418.4ce58810.chunk.js","mappings":"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","sources":["services/exportService.js","services/profileService.js","components/Profile/ProfileForm.js","components/Profile/PreferencesForm.js","components/Profile/AccessibilitySettings.js","components/Profile/AuditLogs.js","services/auditService.js","components/common/NotificationManager.js","pages/Profile.js","services/notificationService.js","components/common/AnimatedButton.js"],"sourcesContent":["/**\n * Exporta datos a un archivo CSV\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToCSV = (data, filename) => {\n  if (!data || !data.length) {\n    return;\n  }\n\n  // Obtener las cabeceras del CSV\n  const headers = Object.keys(data[0]);\n  \n  // Crear el contenido del CSV\n  const csvContent = [\n    // Cabeceras\n    headers.join(','),\n    // Filas de datos\n    ...data.map(row => \n      headers.map(header => {\n        // Manejar valores especiales\n        const value = row[header];\n        \n        // Si el valor es null o undefined, devolver una cadena vacía\n        if (value === null || value === undefined) {\n          return '';\n        }\n        \n        // Si el valor es un objeto o array, convertirlo a JSON\n        if (typeof value === 'object') {\n          return `\"${JSON.stringify(value).replace(/\"/g, '\"\"')}\"`;\n        }\n        \n        // Si el valor es una cadena, escapar las comillas\n        if (typeof value === 'string') {\n          return `\"${value.replace(/\"/g, '\"\"')}\"`;\n        }\n        \n        // Para otros tipos de datos, devolver el valor como cadena\n        return String(value);\n      }).join(',')\n    )\n  ].join('\\\\n');\n  \n  // Crear un blob con el contenido del CSV\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  \n  // Crear un enlace para descargar el archivo\n  const link = document.createElement('a');\n  \n  // Crear una URL para el blob\n  const url = URL.createObjectURL(blob);\n  \n  // Configurar el enlace\n  link.setAttribute('href', url);\n  link.setAttribute('download', `${filename}.csv`);\n  link.style.visibility = 'hidden';\n  \n  // Agregar el enlace al documento\n  document.body.appendChild(link);\n  \n  // Hacer clic en el enlace para descargar el archivo\n  link.click();\n  \n  // Eliminar el enlace\n  document.body.removeChild(link);\n};\n\n/**\n * Exporta datos a un archivo JSON\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToJSON = (data, filename) => {\n  if (!data) {\n    return;\n  }\n  \n  // Crear un blob con el contenido del JSON\n  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n  \n  // Crear un enlace para descargar el archivo\n  const link = document.createElement('a');\n  \n  // Crear una URL para el blob\n  const url = URL.createObjectURL(blob);\n  \n  // Configurar el enlace\n  link.setAttribute('href', url);\n  link.setAttribute('download', `${filename}.json`);\n  link.style.visibility = 'hidden';\n  \n  // Agregar el enlace al documento\n  document.body.appendChild(link);\n  \n  // Hacer clic en el enlace para descargar el archivo\n  link.click();\n  \n  // Eliminar el enlace\n  document.body.removeChild(link);\n};\n\n/**\n * Exporta datos a un archivo Excel\n * @param {Array} data - Datos a exportar\n * @param {string} filename - Nombre del archivo\n */\nexport const exportToExcel = (data, filename) => {\n  // Para exportar a Excel, primero exportamos a CSV\n  // y luego cambiamos la extensión a .xlsx\n  exportToCSV(data, filename.replace(/\\.xlsx$/, ''));\n};\n","import { supabase } from './supabase';\n\n/**\n * Obtiene el perfil del usuario actual\n * @returns {Promise<Object>} Perfil del usuario o null si no existe\n */\nexport const getUserProfile = async () => {\n  try {\n    // Obtener el usuario actual\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      throw new Error('No authenticated user found');\n    }\n    \n    // Obtener el perfil del usuario\n    const { data, error } = await supabase\n      .from('profiles')\n      .select('*')\n      .eq('id', user.id)\n      .single();\n      \n    if (error && error.code !== 'PGRST116') { // PGRST116 es el código de error cuando no se encuentra un registro\n      console.error('Error fetching user profile:', error);\n      throw error;\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Error in getUserProfile:', error);\n    return null;\n  }\n};\n\n/**\n * Crea o actualiza el perfil del usuario\n * @param {Object} profile Datos del perfil a crear o actualizar\n * @returns {Promise<Object>} Perfil creado o actualizado\n */\nexport const upsertUserProfile = async (profile) => {\n  try {\n    // Obtener el usuario actual\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      throw new Error('No authenticated user found');\n    }\n    \n    // Crear o actualizar el perfil\n    const { data, error } = await supabase\n      .from('profiles')\n      .upsert({\n        id: user.id,\n        ...profile,\n        updated_at: new Date()\n      })\n      .select();\n      \n    if (error) {\n      console.error('Error upserting user profile:', error);\n      throw error;\n    }\n    \n    return data?.[0] || null;\n  } catch (error) {\n    console.error('Error in upsertUserProfile:', error);\n    throw error;\n  }\n};\n\n/**\n * Actualiza el avatar del usuario\n * @param {File} file Archivo de imagen\n * @returns {Promise<string>} URL del avatar\n */\nexport const updateUserAvatar = async (file) => {\n  try {\n    // Obtener el usuario actual\n    const { data: { user } } = await supabase.auth.getUser();\n    \n    if (!user) {\n      throw new Error('No authenticated user found');\n    }\n    \n    // Generar un nombre de archivo único\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${user.id}-${Math.random().toString(36).substring(2)}.${fileExt}`;\n    const filePath = `avatars/${fileName}`;\n    \n    // Subir el archivo\n    const { error: uploadError } = await supabase.storage\n      .from('avatars')\n      .upload(filePath, file);\n      \n    if (uploadError) {\n      console.error('Error uploading avatar:', uploadError);\n      throw uploadError;\n    }\n    \n    // Obtener la URL pública del archivo\n    const { data: { publicUrl } } = supabase.storage\n      .from('avatars')\n      .getPublicUrl(filePath);\n    \n    // Actualizar el perfil con la URL del avatar\n    await upsertUserProfile({ avatar_url: publicUrl });\n    \n    return publicUrl;\n  } catch (error) {\n    console.error('Error in updateUserAvatar:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene las preferencias del usuario\n * @returns {Promise<Object>} Preferencias del usuario\n */\nexport const getUserPreferences = async () => {\n  try {\n    const profile = await getUserProfile();\n    return profile?.preferences || {};\n  } catch (error) {\n    console.error('Error in getUserPreferences:', error);\n    return {};\n  }\n};\n\n/**\n * Actualiza las preferencias del usuario\n * @param {Object} preferences Preferencias a actualizar\n * @returns {Promise<Object>} Perfil actualizado\n */\nexport const updateUserPreferences = async (preferences) => {\n  try {\n    const profile = await getUserProfile();\n    const updatedPreferences = {\n      ...(profile?.preferences || {}),\n      ...preferences\n    };\n    \n    return await upsertUserProfile({\n      preferences: updatedPreferences\n    });\n  } catch (error) {\n    console.error('Error in updateUserPreferences:', error);\n    throw error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiUser, FiSave, FiUpload } from 'react-icons/fi';\nimport { getUserProfile, upsertUserProfile, updateUserAvatar } from '../../services/profileService';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst ProfileContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 32px;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nconst ProfileTitle = styled.h2`\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin: 0;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-size: 0.95rem;\n  color: var(--text-medium);\n  font-weight: 500;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--bg-light);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst AvatarContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 24px;\n`;\n\nconst Avatar = styled.div`\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  background-color: var(--bg-medium);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n  \n  svg {\n    font-size: 2rem;\n    color: var(--text-light);\n  }\n`;\n\nconst AvatarUpload = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst UploadButton = styled.label`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  background-color: var(--bg-medium);\n  color: var(--text-medium);\n  border: none;\n  padding: 8px 16px;\n  border-radius: var(--border-radius);\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all var(--transition-speed);\n  \n  &:hover {\n    background-color: var(--bg-dark);\n  }\n  \n  input {\n    display: none;\n  }\n`;\n\nconst UploadInfo = styled.span`\n  font-size: 0.8rem;\n  color: var(--text-light);\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: all var(--transition-speed);\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  font-size: 0.9rem;\n  margin-top: 16px;\n  padding: 8px 12px;\n  background-color: rgba(239, 68, 68, 0.1);\n  border-radius: var(--border-radius);\n  text-align: center;\n`;\n\nconst SuccessMessage = styled.div`\n  color: var(--success-color);\n  font-size: 0.9rem;\n  margin-top: 16px;\n  padding: 8px 12px;\n  background-color: rgba(34, 197, 94, 0.1);\n  border-radius: var(--border-radius);\n  text-align: center;\n`;\n\nconst ProfileForm = () => {\n  const { user } = useAuth();\n  const [profile, setProfile] = useState({\n    first_name: '',\n    last_name: '',\n    avatar_url: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [avatarFile, setAvatarFile] = useState(null);\n  \n  useEffect(() => {\n    const loadProfile = async () => {\n      try {\n        setLoading(true);\n        const userProfile = await getUserProfile();\n        \n        if (userProfile) {\n          setProfile({\n            first_name: userProfile.first_name || '',\n            last_name: userProfile.last_name || '',\n            avatar_url: userProfile.avatar_url || ''\n          });\n        }\n      } catch (err) {\n        console.error('Error loading profile:', err);\n        setError('Error al cargar el perfil');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    if (user) {\n      loadProfile();\n    }\n  }, [user]);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProfile(prev => ({ ...prev, [name]: value }));\n  };\n  \n  const handleAvatarChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setAvatarFile(file);\n      // Crear una URL temporal para mostrar la vista previa\n      const previewUrl = URL.createObjectURL(file);\n      setProfile(prev => ({ ...prev, avatar_url: previewUrl }));\n    }\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setSaving(true);\n      setError('');\n      setSuccess('');\n      \n      // Si hay un archivo de avatar, subirlo primero\n      if (avatarFile) {\n        const avatarUrl = await updateUserAvatar(avatarFile);\n        setProfile(prev => ({ ...prev, avatar_url: avatarUrl }));\n      }\n      \n      // Actualizar el perfil\n      await upsertUserProfile({\n        first_name: profile.first_name,\n        last_name: profile.last_name,\n        avatar_url: profile.avatar_url\n      });\n      \n      setSuccess('Perfil actualizado correctamente');\n      setAvatarFile(null);\n    } catch (err) {\n      console.error('Error saving profile:', err);\n      setError('Error al guardar el perfil');\n    } finally {\n      setSaving(false);\n    }\n  };\n  \n  if (loading) {\n    return (\n      <ProfileContainer>\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n          Cargando perfil...\n        </div>\n      </ProfileContainer>\n    );\n  }\n  \n  return (\n    <ProfileContainer>\n      <ProfileHeader>\n        <ProfileTitle>Mi Perfil</ProfileTitle>\n      </ProfileHeader>\n      \n      <form onSubmit={handleSubmit}>\n        <AvatarContainer>\n          <Avatar>\n            {profile.avatar_url ? (\n              <img src={profile.avatar_url} alt=\"Avatar\" />\n            ) : (\n              <FiUser />\n            )}\n          </Avatar>\n          \n          <AvatarUpload>\n            <UploadButton>\n              <FiUpload /> Subir foto\n              <input \n                type=\"file\" \n                accept=\"image/*\" \n                onChange={handleAvatarChange} \n              />\n            </UploadButton>\n            <UploadInfo>JPG, PNG o GIF. Máximo 2MB.</UploadInfo>\n          </AvatarUpload>\n        </AvatarContainer>\n        \n        <FormGroup>\n          <Label htmlFor=\"first_name\">Nombre</Label>\n          <Input\n            type=\"text\"\n            id=\"first_name\"\n            name=\"first_name\"\n            value={profile.first_name}\n            onChange={handleChange}\n            placeholder=\"Tu nombre\"\n          />\n        </FormGroup>\n        \n        <FormGroup>\n          <Label htmlFor=\"last_name\">Apellido</Label>\n          <Input\n            type=\"text\"\n            id=\"last_name\"\n            name=\"last_name\"\n            value={profile.last_name}\n            onChange={handleChange}\n            placeholder=\"Tu apellido\"\n          />\n        </FormGroup>\n        \n        <FormGroup>\n          <Label>Email</Label>\n          <Input\n            type=\"email\"\n            value={user?.email || ''}\n            disabled\n          />\n        </FormGroup>\n        \n        <SubmitButton type=\"submit\" disabled={saving}>\n          {saving ? 'Guardando...' : (\n            <>\n              <FiSave /> Guardar Cambios\n            </>\n          )}\n        </SubmitButton>\n        \n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        {success && <SuccessMessage>{success}</SuccessMessage>}\n      </form>\n    </ProfileContainer>\n  );\n};\n\nexport default ProfileForm;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiSave, FiSettings } from 'react-icons/fi';\nimport { getUserPreferences, updateUserPreferences } from '../../services/profileService';\n\nconst PreferencesContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 32px;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  margin-top: 24px;\n`;\n\nconst PreferencesHeader = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nconst PreferencesTitle = styled.h2`\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin: 0;\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-size: 0.95rem;\n  color: var(--text-medium);\n  font-weight: 500;\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--bg-light);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst SwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 0;\n`;\n\nconst SwitchLabel = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-dark);\n`;\n\nconst Switch = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 48px;\n  height: 24px;\n  \n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n  \n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--bg-medium);\n    transition: .4s;\n    border-radius: 24px;\n    \n    &:before {\n      position: absolute;\n      content: \"\";\n      height: 18px;\n      width: 18px;\n      left: 3px;\n      bottom: 3px;\n      background-color: white;\n      transition: .4s;\n      border-radius: 50%;\n    }\n  }\n  \n  input:checked + span {\n    background-color: var(--primary-color);\n  }\n  \n  input:checked + span:before {\n    transform: translateX(24px);\n  }\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  transition: all var(--transition-speed);\n  \n  &:hover {\n    background-color: var(--primary-dark);\n  }\n  \n  &:disabled {\n    background-color: var(--text-light);\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  font-size: 0.9rem;\n  margin-top: 16px;\n  padding: 8px 12px;\n  background-color: rgba(239, 68, 68, 0.1);\n  border-radius: var(--border-radius);\n  text-align: center;\n`;\n\nconst SuccessMessage = styled.div`\n  color: var(--success-color);\n  font-size: 0.9rem;\n  margin-top: 16px;\n  padding: 8px 12px;\n  background-color: rgba(34, 197, 94, 0.1);\n  border-radius: var(--border-radius);\n  text-align: center;\n`;\n\nconst PreferencesForm = () => {\n  const [preferences, setPreferences] = useState({\n    currency: 'ARS',\n    language: 'es',\n    notifications_enabled: true,\n    email_notifications: true,\n    default_view: 'dashboard'\n  });\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  \n  useEffect(() => {\n    const loadPreferences = async () => {\n      try {\n        setLoading(true);\n        const userPreferences = await getUserPreferences();\n        \n        if (Object.keys(userPreferences).length > 0) {\n          setPreferences(prev => ({\n            ...prev,\n            ...userPreferences\n          }));\n        }\n      } catch (err) {\n        console.error('Error loading preferences:', err);\n        setError('Error al cargar las preferencias');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadPreferences();\n  }, []);\n  \n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setPreferences(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setSaving(true);\n      setError('');\n      setSuccess('');\n      \n      await updateUserPreferences(preferences);\n      \n      setSuccess('Preferencias actualizadas correctamente');\n    } catch (err) {\n      console.error('Error saving preferences:', err);\n      setError('Error al guardar las preferencias');\n    } finally {\n      setSaving(false);\n    }\n  };\n  \n  if (loading) {\n    return (\n      <PreferencesContainer>\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n          Cargando preferencias...\n        </div>\n      </PreferencesContainer>\n    );\n  }\n  \n  return (\n    <PreferencesContainer>\n      <PreferencesHeader>\n        <PreferencesTitle>Preferencias</PreferencesTitle>\n      </PreferencesHeader>\n      \n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"currency\">Moneda predeterminada</Label>\n          <Select\n            id=\"currency\"\n            name=\"currency\"\n            value={preferences.currency}\n            onChange={handleChange}\n          >\n            <option value=\"ARS\">Peso Argentino (ARS)</option>\n            <option value=\"USD\">Dólar Estadounidense (USD)</option>\n            <option value=\"EUR\">Euro (EUR)</option>\n          </Select>\n        </FormGroup>\n        \n        <FormGroup>\n          <Label htmlFor=\"language\">Idioma</Label>\n          <Select\n            id=\"language\"\n            name=\"language\"\n            value={preferences.language}\n            onChange={handleChange}\n          >\n            <option value=\"es\">Español</option>\n            <option value=\"en\">Inglés</option>\n          </Select>\n        </FormGroup>\n        \n        <FormGroup>\n          <Label htmlFor=\"default_view\">Vista predeterminada</Label>\n          <Select\n            id=\"default_view\"\n            name=\"default_view\"\n            value={preferences.default_view}\n            onChange={handleChange}\n          >\n            <option value=\"dashboard\">Dashboard</option>\n            <option value=\"finances\">Finanzas</option>\n            <option value=\"tasks\">Tareas</option>\n            <option value=\"investments\">Inversiones</option>\n            <option value=\"calendar\">Calendario</option>\n          </Select>\n        </FormGroup>\n        \n        <FormGroup>\n          <Label>Notificaciones</Label>\n          \n          <SwitchContainer>\n            <SwitchLabel>Notificaciones en la aplicación</SwitchLabel>\n            <Switch>\n              <input\n                type=\"checkbox\"\n                name=\"notifications_enabled\"\n                checked={preferences.notifications_enabled}\n                onChange={handleChange}\n              />\n              <span></span>\n            </Switch>\n          </SwitchContainer>\n          \n          <SwitchContainer>\n            <SwitchLabel>Notificaciones por email</SwitchLabel>\n            <Switch>\n              <input\n                type=\"checkbox\"\n                name=\"email_notifications\"\n                checked={preferences.email_notifications}\n                onChange={handleChange}\n              />\n              <span></span>\n            </Switch>\n          </SwitchContainer>\n        </FormGroup>\n        \n        <SubmitButton type=\"submit\" disabled={saving}>\n          {saving ? 'Guardando...' : (\n            <>\n              <FiSave /> Guardar Preferencias\n            </>\n          )}\n        </SubmitButton>\n        \n        {error && <ErrorMessage>{error}</ErrorMessage>}\n        {success && <SuccessMessage>{success}</SuccessMessage>}\n      </form>\n    </PreferencesContainer>\n  );\n};\n\nexport default PreferencesForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiEye, FiType, FiActivity, FiKey, FiRefreshCw } from 'react-icons/fi';\nimport { useAccessibility } from '../../contexts/AccessibilityContext';\nimport AnimatedButton from '../common/AnimatedButton';\n\n// Estilos\nconst AccessibilityContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst AccessibilityHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n  }\n`;\n\nconst AccessibilityTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst SettingsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 24px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst SettingCard = styled.div`\n  background-color: white;\n  border-radius: var(--border-radius);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nconst SettingHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  svg {\n    color: var(--primary-color);\n    font-size: 1.5rem;\n  }\n`;\n\nconst SettingTitle = styled.h3`\n  margin: 0;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--text-dark);\n`;\n\nconst SettingDescription = styled.p`\n  margin: 0;\n  font-size: 0.9rem;\n  color: var(--text-medium);\n`;\n\nconst SettingControl = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n\n  label {\n    font-size: 0.9rem;\n    color: var(--text-medium);\n  }\n\n  select {\n    padding: 8px 12px;\n    border-radius: var(--border-radius);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    background-color: white;\n    font-size: 0.9rem;\n    flex: 1;\n\n    &:focus {\n      outline: none;\n      border-color: var(--primary-color);\n      box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);\n    }\n  }\n`;\n\nconst ToggleSwitch = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 48px;\n  height: 24px;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n\n    &:checked + span {\n      background-color: var(--primary-color);\n    }\n\n    &:checked + span:before {\n      transform: translateX(24px);\n    }\n\n    &:focus + span {\n      box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);\n    }\n  }\n\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    transition: .4s;\n    border-radius: 24px;\n\n    &:before {\n      position: absolute;\n      content: \"\";\n      height: 18px;\n      width: 18px;\n      left: 3px;\n      bottom: 3px;\n      background-color: white;\n      transition: .4s;\n      border-radius: 50%;\n    }\n  }\n`;\n\nconst ResetButton = styled(AnimatedButton)`\n  margin-top: 16px;\n`;\n\n/**\n * Componente para configurar la accesibilidad\n * @returns {JSX.Element} - Componente de configuración de accesibilidad\n */\nconst AccessibilitySettings = () => {\n  const { settings, updateSetting, resetSettings } = useAccessibility();\n\n  return (\n    <AccessibilityContainer>\n      <AccessibilityHeader>\n        <AccessibilityTitle>Configuración de Accesibilidad</AccessibilityTitle>\n        <ResetButton\n          variant=\"outline\"\n          onClick={resetSettings}\n        >\n          <FiRefreshCw /> Restablecer valores predeterminados\n        </ResetButton>\n      </AccessibilityHeader>\n\n      <SettingsGrid>\n        <SettingCard>\n          <SettingHeader>\n            <FiType />\n            <div>\n              <SettingTitle>Tamaño de fuente</SettingTitle>\n              <SettingDescription>Ajusta el tamaño del texto en toda la aplicación</SettingDescription>\n            </div>\n          </SettingHeader>\n          <SettingControl>\n            <label htmlFor=\"fontSize\">Tamaño:</label>\n            <select\n              id=\"fontSize\"\n              value={settings.fontSize}\n              onChange={(e) => updateSetting('fontSize', e.target.value)}\n            >\n              <option value=\"small\">Pequeño</option>\n              <option value=\"medium\">Mediano</option>\n              <option value=\"large\">Grande</option>\n            </select>\n          </SettingControl>\n        </SettingCard>\n\n        <SettingCard>\n          <SettingHeader>\n            <FiEye />\n            <div>\n              <SettingTitle>Alto contraste</SettingTitle>\n              <SettingDescription>Mejora la visibilidad con colores de alto contraste</SettingDescription>\n            </div>\n          </SettingHeader>\n          <SettingControl>\n            <span>Desactivado</span>\n            <ToggleSwitch>\n              <input\n                type=\"checkbox\"\n                checked={settings.highContrast}\n                onChange={(e) => updateSetting('highContrast', e.target.checked)}\n              />\n              <span></span>\n            </ToggleSwitch>\n            <span>Activado</span>\n          </SettingControl>\n        </SettingCard>\n\n        <SettingCard>\n          <SettingHeader>\n            <FiActivity />\n            <div>\n              <SettingTitle>Reducir movimiento</SettingTitle>\n              <SettingDescription>Minimiza animaciones y transiciones</SettingDescription>\n            </div>\n          </SettingHeader>\n          <SettingControl>\n            <span>Desactivado</span>\n            <ToggleSwitch>\n              <input\n                type=\"checkbox\"\n                checked={settings.reducedMotion}\n                onChange={(e) => updateSetting('reducedMotion', e.target.checked)}\n              />\n              <span></span>\n            </ToggleSwitch>\n            <span>Activado</span>\n          </SettingControl>\n        </SettingCard>\n\n        <SettingCard>\n          <SettingHeader>\n            <FiKey />\n            <div>\n              <SettingTitle>Navegación por teclado</SettingTitle>\n              <SettingDescription>Mejora la visibilidad del foco al navegar con teclado</SettingDescription>\n            </div>\n          </SettingHeader>\n          <SettingControl>\n            <span>Desactivado</span>\n            <ToggleSwitch>\n              <input\n                type=\"checkbox\"\n                checked={settings.keyboardNavigation}\n                onChange={(e) => updateSetting('keyboardNavigation', e.target.checked)}\n              />\n              <span></span>\n            </ToggleSwitch>\n            <span>Activado</span>\n          </SettingControl>\n        </SettingCard>\n      </SettingsGrid>\n    </AccessibilityContainer>\n  );\n};\n\nexport default AccessibilitySettings;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiRefreshCw, FiFilter, FiDownload } from 'react-icons/fi';\nimport { getAuditLogs } from '../../services/auditService';\nimport { exportToCSV } from '../../services/exportService';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport AnimatedButton from '../common/AnimatedButton';\nimport { showError } from '../common/Notification';\n\n// Estilos\nconst AuditContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst AuditHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n  }\n`;\n\nconst AuditTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 8px;\n  \n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-bottom: 24px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  \n  label {\n    font-size: 0.9rem;\n    color: var(--text-medium);\n  }\n  \n  select, input {\n    padding: 8px 12px;\n    border-radius: var(--border-radius);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    background-color: white;\n    font-size: 0.9rem;\n    \n    &:focus {\n      outline: none;\n      border-color: var(--primary-color);\n      box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);\n    }\n  }\n`;\n\nconst AuditTable = styled.div`\n  overflow-x: auto;\n  \n  table {\n    width: 100%;\n    border-collapse: collapse;\n    \n    th, td {\n      padding: 12px 16px;\n      text-align: left;\n      border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n    }\n    \n    th {\n      font-weight: 600;\n      color: var(--text-dark);\n      background-color: rgba(0, 0, 0, 0.02);\n    }\n    \n    tr:hover td {\n      background-color: rgba(var(--primary-color-rgb), 0.05);\n    }\n  }\n`;\n\nconst ActionBadge = styled.span`\n  display: inline-block;\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  text-transform: uppercase;\n  \n  ${props => {\n    if (props.action === 'INSERT') {\n      return `\n        background-color: rgba(var(--success-color-rgb), 0.1);\n        color: var(--success-color);\n      `;\n    } else if (props.action === 'UPDATE') {\n      return `\n        background-color: rgba(var(--primary-color-rgb), 0.1);\n        color: var(--primary-color);\n      `;\n    } else if (props.action === 'DELETE') {\n      return `\n        background-color: rgba(var(--danger-color-rgb), 0.1);\n        color: var(--danger-color);\n      `;\n    }\n  }}\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 24px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n  }\n`;\n\nconst PaginationInfo = styled.div`\n  font-size: 0.9rem;\n  color: var(--text-medium);\n`;\n\nconst PaginationButtons = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 32px;\n  color: var(--text-medium);\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n`;\n\n/**\n * Componente para mostrar los registros de auditoría\n * @returns {JSX.Element} - Componente de registros de auditoría\n */\nconst AuditLogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filters, setFilters] = useState({\n    table: '',\n    action: '',\n    startDate: '',\n    endDate: '',\n  });\n  const [pagination, setPagination] = useState({\n    limit: 10,\n    offset: 0,\n    total: 0,\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  \n  // Cargar registros de auditoría\n  const loadAuditLogs = async () => {\n    try {\n      setLoading(true);\n      \n      const data = await getAuditLogs({\n        limit: pagination.limit,\n        offset: pagination.offset,\n        table: filters.table || null,\n        action: filters.action || null,\n        startDate: filters.startDate || null,\n        endDate: filters.endDate || null,\n      });\n      \n      setLogs(data);\n      setPagination(prev => ({\n        ...prev,\n        total: data.length >= prev.limit ? prev.total + data.length : prev.offset + data.length,\n      }));\n    } catch (error) {\n      console.error('Error al cargar registros de auditoría:', error);\n      showError('Error al cargar registros de auditoría');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Cargar registros al montar el componente y cuando cambian los filtros o la paginación\n  useEffect(() => {\n    loadAuditLogs();\n  }, [pagination.offset, pagination.limit, filters]);\n  \n  // Formatear fecha\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString('es-AR', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n  \n  // Manejar cambio de página\n  const handlePageChange = (direction) => {\n    if (direction === 'prev' && pagination.offset > 0) {\n      setPagination(prev => ({\n        ...prev,\n        offset: Math.max(0, prev.offset - prev.limit),\n      }));\n    } else if (direction === 'next' && logs.length === pagination.limit) {\n      setPagination(prev => ({\n        ...prev,\n        offset: prev.offset + prev.limit,\n      }));\n    }\n  };\n  \n  // Manejar cambio de filtros\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n    setPagination(prev => ({\n      ...prev,\n      offset: 0,\n    }));\n  };\n  \n  // Exportar registros\n  const handleExport = () => {\n    try {\n      const formattedLogs = logs.map(log => ({\n        ID: log.id,\n        Acción: log.action,\n        Tabla: log.table_name,\n        'ID de Registro': log.record_id,\n        'Fecha de Creación': formatDate(log.created_at),\n        'Agente de Usuario': log.user_agent,\n      }));\n      \n      exportToCSV(formattedLogs, 'registros-auditoria');\n    } catch (error) {\n      console.error('Error al exportar registros:', error);\n      showError('Error al exportar registros');\n    }\n  };\n  \n  return (\n    <AuditContainer>\n      <AuditHeader>\n        <AuditTitle>Registros de Auditoría</AuditTitle>\n        <ButtonGroup>\n          <AnimatedButton\n            variant=\"outline\"\n            onClick={() => setShowFilters(!showFilters)}\n          >\n            <FiFilter /> Filtros\n          </AnimatedButton>\n          <AnimatedButton\n            variant=\"outline\"\n            onClick={loadAuditLogs}\n            disabled={loading}\n          >\n            <FiRefreshCw /> Actualizar\n          </AnimatedButton>\n          <AnimatedButton\n            variant=\"outline\"\n            onClick={handleExport}\n            disabled={loading || logs.length === 0}\n          >\n            <FiDownload /> Exportar\n          </AnimatedButton>\n        </ButtonGroup>\n      </AuditHeader>\n      \n      {showFilters && (\n        <FiltersContainer>\n          <FilterGroup>\n            <label htmlFor=\"table\">Tabla</label>\n            <select\n              id=\"table\"\n              name=\"table\"\n              value={filters.table}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">Todas</option>\n              <option value=\"transactions\">Transacciones</option>\n              <option value=\"tasks\">Tareas</option>\n              <option value=\"investments\">Inversiones</option>\n              <option value=\"financial_goals\">Metas Financieras</option>\n              <option value=\"events\">Eventos</option>\n            </select>\n          </FilterGroup>\n          \n          <FilterGroup>\n            <label htmlFor=\"action\">Acción</label>\n            <select\n              id=\"action\"\n              name=\"action\"\n              value={filters.action}\n              onChange={handleFilterChange}\n            >\n              <option value=\"\">Todas</option>\n              <option value=\"INSERT\">Inserción</option>\n              <option value=\"UPDATE\">Actualización</option>\n              <option value=\"DELETE\">Eliminación</option>\n            </select>\n          </FilterGroup>\n          \n          <FilterGroup>\n            <label htmlFor=\"startDate\">Fecha de inicio</label>\n            <input\n              id=\"startDate\"\n              name=\"startDate\"\n              type=\"date\"\n              value={filters.startDate}\n              onChange={handleFilterChange}\n            />\n          </FilterGroup>\n          \n          <FilterGroup>\n            <label htmlFor=\"endDate\">Fecha de fin</label>\n            <input\n              id=\"endDate\"\n              name=\"endDate\"\n              type=\"date\"\n              value={filters.endDate}\n              onChange={handleFilterChange}\n            />\n          </FilterGroup>\n        </FiltersContainer>\n      )}\n      \n      {loading ? (\n        <LoadingSpinner text=\"Cargando registros de auditoría...\" />\n      ) : (\n        <>\n          {logs.length > 0 ? (\n            <>\n              <AuditTable>\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Acción</th>\n                      <th>Tabla</th>\n                      <th>ID de Registro</th>\n                      <th>Fecha</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {logs.map((log) => (\n                      <tr key={log.id}>\n                        <td>\n                          <ActionBadge action={log.action}>\n                            {log.action === 'INSERT' ? 'Inserción' : \n                             log.action === 'UPDATE' ? 'Actualización' : \n                             log.action === 'DELETE' ? 'Eliminación' : log.action}\n                          </ActionBadge>\n                        </td>\n                        <td>{log.table_name}</td>\n                        <td>{log.record_id || '-'}</td>\n                        <td>{formatDate(log.created_at)}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </AuditTable>\n              \n              <Pagination>\n                <PaginationInfo>\n                  Mostrando {pagination.offset + 1} - {Math.min(pagination.offset + logs.length, pagination.total)} de {pagination.total} registros\n                </PaginationInfo>\n                <PaginationButtons>\n                  <AnimatedButton\n                    variant=\"outline\"\n                    onClick={() => handlePageChange('prev')}\n                    disabled={pagination.offset === 0}\n                  >\n                    Anterior\n                  </AnimatedButton>\n                  <AnimatedButton\n                    variant=\"outline\"\n                    onClick={() => handlePageChange('next')}\n                    disabled={logs.length < pagination.limit}\n                  >\n                    Siguiente\n                  </AnimatedButton>\n                </PaginationButtons>\n              </Pagination>\n            </>\n          ) : (\n            <EmptyState>\n              <p>No se encontraron registros de auditoría</p>\n              <p>Intenta cambiar los filtros o realizar algunas acciones en la aplicación</p>\n            </EmptyState>\n          )}\n        </>\n      )}\n    </AuditContainer>\n  );\n};\n\nexport default AuditLogs;\n","import { supabase } from './supabase';\n\n/**\n * Obtiene los registros de auditoría del usuario actual\n * @param {Object} options - Opciones de consulta\n * @param {number} options.limit - Límite de registros a obtener\n * @param {number} options.offset - Desplazamiento para paginación\n * @param {string} options.table - Filtrar por tabla\n * @param {string} options.action - Filtrar por acción (INSERT, UPDATE, DELETE)\n * @param {string} options.startDate - Fecha de inicio (formato YYYY-MM-DD)\n * @param {string} options.endDate - Fecha de fin (formato YYYY-MM-DD)\n * @returns {Promise<Array>} - Registros de auditoría\n */\nexport const getAuditLogs = async (options = {}) => {\n  try {\n    const {\n      limit = 50,\n      offset = 0,\n      table = null,\n      action = null,\n      startDate = null,\n      endDate = null,\n    } = options;\n    \n    let query = supabase\n      .from('audit_logs')\n      .select('*')\n      .order('created_at', { ascending: false })\n      .limit(limit)\n      .range(offset, offset + limit - 1);\n    \n    // Aplicar filtros si se proporcionan\n    if (table) {\n      query = query.eq('table_name', table);\n    }\n    \n    if (action) {\n      query = query.eq('action', action.toUpperCase());\n    }\n    \n    if (startDate) {\n      query = query.gte('created_at', `${startDate}T00:00:00`);\n    }\n    \n    if (endDate) {\n      query = query.lte('created_at', `${endDate}T23:59:59`);\n    }\n    \n    const { data, error } = await query;\n    \n    if (error) {\n      throw error;\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Error al obtener registros de auditoría:', error);\n    throw error;\n  }\n};\n\n/**\n * Obtiene un resumen de actividad del usuario\n * @param {number} days - Número de días para el resumen\n * @returns {Promise<Object>} - Resumen de actividad\n */\nexport const getActivitySummary = async (days = 30) => {\n  try {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n    \n    const { data, error } = await supabase\n      .from('audit_logs')\n      .select('action, table_name, created_at')\n      .gte('created_at', startDate.toISOString());\n    \n    if (error) {\n      throw error;\n    }\n    \n    // Agrupar por acción\n    const actionSummary = data.reduce((acc, log) => {\n      const action = log.action;\n      acc[action] = (acc[action] || 0) + 1;\n      return acc;\n    }, {});\n    \n    // Agrupar por tabla\n    const tableSummary = data.reduce((acc, log) => {\n      const table = log.table_name;\n      acc[table] = (acc[table] || 0) + 1;\n      return acc;\n    }, {});\n    \n    // Agrupar por día\n    const dailyActivity = data.reduce((acc, log) => {\n      const date = new Date(log.created_at).toISOString().split('T')[0];\n      acc[date] = (acc[date] || 0) + 1;\n      return acc;\n    }, {});\n    \n    return {\n      total: data.length,\n      actionSummary,\n      tableSummary,\n      dailyActivity,\n    };\n  } catch (error) {\n    console.error('Error al obtener resumen de actividad:', error);\n    throw error;\n  }\n};\n\n/**\n * Registra una acción manual en el registro de auditoría\n * @param {string} action - Acción realizada\n * @param {string} tableName - Nombre de la tabla\n * @param {string} recordId - ID del registro\n * @param {Object} oldData - Datos antiguos\n * @param {Object} newData - Datos nuevos\n * @returns {Promise<Object>} - Registro de auditoría creado\n */\nexport const logAction = async (action, tableName, recordId = null, oldData = null, newData = null) => {\n  try {\n    const { data, error } = await supabase\n      .from('audit_logs')\n      .insert({\n        action: action.toUpperCase(),\n        table_name: tableName,\n        record_id: recordId,\n        old_data: oldData,\n        new_data: newData,\n        ip_address: null, // No podemos obtener la IP del cliente desde el navegador\n        user_agent: navigator.userAgent,\n      });\n    \n    if (error) {\n      throw error;\n    }\n    \n    return data;\n  } catch (error) {\n    console.error('Error al registrar acción:', error);\n    throw error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { FiBell, FiBellOff, FiInfo } from 'react-icons/fi';\nimport { \n  requestNotificationPermission, \n  getNotificationPermissionStatus,\n  registerServiceWorker,\n  checkScheduledNotifications\n} from '../../services/notificationService';\nimport AnimatedButton from './AnimatedButton';\nimport { showInfo } from './Notification';\n\n// Estilos\nconst NotificationContainer = styled.div`\n  margin-bottom: 24px;\n  padding: 16px;\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n`;\n\nconst NotificationHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 16px;\n`;\n\nconst NotificationTitle = styled.h3`\n  margin: 0;\n  font-size: 1.1rem;\n  color: var(--text-dark);\n`;\n\nconst NotificationIcon = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background-color: ${props => \n    props.status === 'granted' ? 'rgba(var(--success-color-rgb), 0.1)' : \n    props.status === 'denied' ? 'rgba(var(--danger-color-rgb), 0.1)' : \n    'rgba(var(--info-color-rgb), 0.1)'\n  };\n  color: ${props => \n    props.status === 'granted' ? 'var(--success-color)' : \n    props.status === 'denied' ? 'var(--danger-color)' : \n    'var(--info-color)'\n  };\n  font-size: 1.2rem;\n`;\n\nconst NotificationContent = styled.div`\n  margin-bottom: 16px;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n  line-height: 1.5;\n`;\n\nconst NotificationActions = styled.div`\n  display: flex;\n  gap: 12px;\n  \n  @media (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\n/**\n * Componente para gestionar las notificaciones push\n * @returns {JSX.Element} - Componente de gestión de notificaciones\n */\nconst NotificationManager = () => {\n  const [permissionStatus, setPermissionStatus] = useState('default');\n  const [serviceWorkerRegistered, setServiceWorkerRegistered] = useState(false);\n  \n  // Verificar el estado de los permisos y registrar el service worker al montar el componente\n  useEffect(() => {\n    const initNotifications = async () => {\n      // Verificar el estado de los permisos\n      const status = getNotificationPermissionStatus();\n      setPermissionStatus(status);\n      \n      // Registrar el service worker si los permisos están concedidos\n      if (status === 'granted') {\n        const registration = await registerServiceWorker();\n        setServiceWorkerRegistered(!!registration);\n        \n        // Verificar notificaciones programadas pendientes\n        checkScheduledNotifications();\n      }\n    };\n    \n    initNotifications();\n  }, []);\n  \n  // Solicitar permiso para notificaciones\n  const handleRequestPermission = async () => {\n    const status = await requestNotificationPermission();\n    setPermissionStatus(status);\n    \n    if (status === 'granted') {\n      showInfo('¡Notificaciones activadas! Ahora recibirás recordatorios importantes.');\n      \n      // Registrar el service worker\n      const registration = await registerServiceWorker();\n      setServiceWorkerRegistered(!!registration);\n      \n      // Verificar notificaciones programadas pendientes\n      checkScheduledNotifications();\n    } else if (status === 'denied') {\n      showInfo('Has denegado el permiso para notificaciones. Puedes cambiar esto en la configuración de tu navegador.');\n    }\n  };\n  \n  // Renderizar contenido según el estado de los permisos\n  const renderContent = () => {\n    switch (permissionStatus) {\n      case 'granted':\n        return (\n          <>\n            <NotificationContent>\n              Las notificaciones están activadas. Recibirás alertas sobre:\n              <ul>\n                <li>Recordatorios de tareas pendientes</li>\n                <li>Eventos próximos en tu calendario</li>\n                <li>Alertas de movimientos financieros importantes</li>\n              </ul>\n            </NotificationContent>\n            <NotificationActions>\n              <AnimatedButton\n                variant=\"outline\"\n                onClick={() => setPermissionStatus('default')}\n              >\n                <FiBellOff /> Desactivar notificaciones\n              </AnimatedButton>\n            </NotificationActions>\n          </>\n        );\n      \n      case 'denied':\n        return (\n          <>\n            <NotificationContent>\n              Has bloqueado las notificaciones para esta aplicación. Para activarlas, debes cambiar la configuración en tu navegador.\n            </NotificationContent>\n            <NotificationActions>\n              <AnimatedButton\n                variant=\"primary\"\n                onClick={() => {\n                  window.open('chrome://settings/content/notifications', '_blank');\n                }}\n              >\n                <FiInfo /> Abrir configuración del navegador\n              </AnimatedButton>\n            </NotificationActions>\n          </>\n        );\n      \n      case 'not-supported':\n        return (\n          <NotificationContent>\n            Tu navegador no soporta notificaciones. Para recibir notificaciones, por favor utiliza un navegador moderno como Chrome, Firefox, Safari o Edge.\n          </NotificationContent>\n        );\n      \n      default:\n        return (\n          <>\n            <NotificationContent>\n              Activa las notificaciones para recibir recordatorios de tareas pendientes, eventos próximos y alertas financieras importantes.\n            </NotificationContent>\n            <NotificationActions>\n              <AnimatedButton\n                variant=\"primary\"\n                onClick={handleRequestPermission}\n              >\n                <FiBell /> Activar notificaciones\n              </AnimatedButton>\n            </NotificationActions>\n          </>\n        );\n    }\n  };\n  \n  return (\n    <NotificationContainer>\n      <NotificationHeader>\n        <NotificationIcon status={permissionStatus}>\n          {permissionStatus === 'granted' ? <FiBell /> : \n           permissionStatus === 'denied' ? <FiBellOff /> : \n           <FiInfo />}\n        </NotificationIcon>\n        <NotificationTitle>Notificaciones</NotificationTitle>\n      </NotificationHeader>\n      \n      {renderContent()}\n    </NotificationContainer>\n  );\n};\n\nexport default NotificationManager;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ProfileForm from '../components/Profile/ProfileForm';\nimport PreferencesForm from '../components/Profile/PreferencesForm';\nimport AccessibilitySettings from '../components/Profile/AccessibilitySettings';\nimport AuditLogs from '../components/Profile/AuditLogs';\nimport NotificationManager from '../components/common/NotificationManager';\n\nconst ProfileContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst ProfileHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst Profile = () => {\n  return (\n    <ProfileContainer>\n      <ProfileHeader>\n        <h1>Mi Perfil</h1>\n        <p>Gestiona tu información personal y preferencias</p>\n      </ProfileHeader>\n\n      <ProfileForm />\n      <PreferencesForm />\n      <NotificationManager />\n      <AccessibilitySettings />\n      <AuditLogs />\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;\n","/**\n * Servicio para gestionar las notificaciones push\n */\n\n// Verificar si el navegador soporta notificaciones\nconst isNotificationSupported = () => {\n  return 'Notification' in window;\n};\n\n// Verificar si el servicio de trabajadores está disponible\nconst isServiceWorkerSupported = () => {\n  return 'serviceWorker' in navigator;\n};\n\n/**\n * Solicitar permiso para mostrar notificaciones\n * @returns {Promise<string>} - Estado del permiso ('granted', 'denied', 'default')\n */\nexport const requestNotificationPermission = async () => {\n  if (!isNotificationSupported()) {\n    console.warn('Las notificaciones no son soportadas en este navegador');\n    return 'not-supported';\n  }\n  \n  try {\n    const permission = await Notification.requestPermission();\n    return permission;\n  } catch (error) {\n    console.error('Error al solicitar permiso para notificaciones:', error);\n    return 'error';\n  }\n};\n\n/**\n * Verificar el estado actual del permiso de notificaciones\n * @returns {string} - Estado del permiso ('granted', 'denied', 'default', 'not-supported')\n */\nexport const getNotificationPermissionStatus = () => {\n  if (!isNotificationSupported()) {\n    return 'not-supported';\n  }\n  \n  return Notification.permission;\n};\n\n/**\n * Registrar el service worker para notificaciones push\n * @returns {Promise<ServiceWorkerRegistration|null>} - Registro del service worker\n */\nexport const registerServiceWorker = async () => {\n  if (!isServiceWorkerSupported()) {\n    console.warn('Service Worker no es soportado en este navegador');\n    return null;\n  }\n  \n  try {\n    const registration = await navigator.serviceWorker.register('/service-worker.js');\n    console.log('Service Worker registrado con éxito:', registration);\n    return registration;\n  } catch (error) {\n    console.error('Error al registrar el Service Worker:', error);\n    return null;\n  }\n};\n\n/**\n * Mostrar una notificación local (no push)\n * @param {string} title - Título de la notificación\n * @param {Object} options - Opciones de la notificación\n * @param {string} options.body - Cuerpo de la notificación\n * @param {string} options.icon - URL del icono\n * @param {string} options.tag - Etiqueta para agrupar notificaciones\n * @param {Object} options.data - Datos adicionales\n * @param {Array} options.actions - Acciones disponibles\n * @returns {Promise<Notification|null>} - Objeto de notificación\n */\nexport const showLocalNotification = async (title, options = {}) => {\n  if (getNotificationPermissionStatus() !== 'granted') {\n    console.warn('No se tiene permiso para mostrar notificaciones');\n    return null;\n  }\n  \n  try {\n    // Si hay un service worker activo, usar el service worker para mostrar la notificación\n    if (isServiceWorkerSupported() && navigator.serviceWorker.controller) {\n      const registration = await navigator.serviceWorker.ready;\n      await registration.showNotification(title, options);\n      return true;\n    } else {\n      // Si no hay service worker, mostrar una notificación normal\n      const notification = new Notification(title, options);\n      return notification;\n    }\n  } catch (error) {\n    console.error('Error al mostrar notificación:', error);\n    return null;\n  }\n};\n\n/**\n * Programar una notificación para una fecha futura\n * @param {string} title - Título de la notificación\n * @param {Object} options - Opciones de la notificación\n * @param {Date} scheduledTime - Fecha y hora programada\n * @returns {Promise<Object|null>} - Información de la notificación programada\n */\nexport const scheduleNotification = async (title, options = {}, scheduledTime) => {\n  if (getNotificationPermissionStatus() !== 'granted') {\n    console.warn('No se tiene permiso para mostrar notificaciones');\n    return null;\n  }\n  \n  try {\n    // Calcular el tiempo de espera en milisegundos\n    const now = new Date();\n    const delay = scheduledTime.getTime() - now.getTime();\n    \n    if (delay <= 0) {\n      console.warn('La fecha programada ya ha pasado');\n      return null;\n    }\n    \n    // Guardar la notificación programada en localStorage\n    const notificationId = `notification_${Date.now()}`;\n    const scheduledNotification = {\n      id: notificationId,\n      title,\n      options,\n      scheduledTime: scheduledTime.toISOString(),\n    };\n    \n    // Obtener notificaciones programadas existentes\n    const scheduledNotifications = getScheduledNotifications();\n    scheduledNotifications.push(scheduledNotification);\n    \n    // Guardar en localStorage\n    localStorage.setItem('scheduledNotifications', JSON.stringify(scheduledNotifications));\n    \n    // Programar la notificación con setTimeout\n    setTimeout(() => {\n      showLocalNotification(title, options);\n      removeScheduledNotification(notificationId);\n    }, delay);\n    \n    return scheduledNotification;\n  } catch (error) {\n    console.error('Error al programar notificación:', error);\n    return null;\n  }\n};\n\n/**\n * Obtener todas las notificaciones programadas\n * @returns {Array} - Lista de notificaciones programadas\n */\nexport const getScheduledNotifications = () => {\n  try {\n    const scheduledNotifications = localStorage.getItem('scheduledNotifications');\n    return scheduledNotifications ? JSON.parse(scheduledNotifications) : [];\n  } catch (error) {\n    console.error('Error al obtener notificaciones programadas:', error);\n    return [];\n  }\n};\n\n/**\n * Eliminar una notificación programada\n * @param {string} notificationId - ID de la notificación\n * @returns {boolean} - true si se eliminó correctamente\n */\nexport const removeScheduledNotification = (notificationId) => {\n  try {\n    const scheduledNotifications = getScheduledNotifications();\n    const updatedNotifications = scheduledNotifications.filter(\n      notification => notification.id !== notificationId\n    );\n    \n    localStorage.setItem('scheduledNotifications', JSON.stringify(updatedNotifications));\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar notificación programada:', error);\n    return false;\n  }\n};\n\n/**\n * Verificar y mostrar notificaciones programadas pendientes\n * (Llamar a esta función al iniciar la aplicación)\n */\nexport const checkScheduledNotifications = () => {\n  try {\n    const scheduledNotifications = getScheduledNotifications();\n    const now = new Date();\n    \n    scheduledNotifications.forEach(notification => {\n      const scheduledTime = new Date(notification.scheduledTime);\n      const delay = scheduledTime.getTime() - now.getTime();\n      \n      if (delay <= 0) {\n        // La notificación ya debería haberse mostrado, mostrarla ahora\n        showLocalNotification(notification.title, notification.options);\n        removeScheduledNotification(notification.id);\n      } else {\n        // Reprogramar la notificación\n        setTimeout(() => {\n          showLocalNotification(notification.title, notification.options);\n          removeScheduledNotification(notification.id);\n        }, delay);\n      }\n    });\n  } catch (error) {\n    console.error('Error al verificar notificaciones programadas:', error);\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\n\n// Estilos para el botón\nconst ButtonContainer = styled(animated.button)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  border-radius: var(--border-radius);\n  font-weight: 500;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background-color 0.2s, transform 0.1s;\n  border: none;\n  outline: none;\n  gap: 8px;\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  ${props => props.variant === 'primary' && `\n    background-color: var(--primary-color);\n    color: white;\n    \n    &:hover:not(:disabled) {\n      background-color: var(--primary-color-dark);\n    }\n  `}\n  \n  ${props => props.variant === 'secondary' && `\n    background-color: var(--secondary-color);\n    color: white;\n    \n    &:hover:not(:disabled) {\n      background-color: var(--secondary-color-dark);\n    }\n  `}\n  \n  ${props => props.variant === 'danger' && `\n    background-color: var(--danger-color);\n    color: white;\n    \n    &:hover:not(:disabled) {\n      background-color: var(--danger-color-dark);\n    }\n  `}\n  \n  ${props => props.variant === 'outline' && `\n    background-color: transparent;\n    color: var(--primary-color);\n    border: 1px solid var(--primary-color);\n    \n    &:hover:not(:disabled) {\n      background-color: rgba(var(--primary-color-rgb), 0.1);\n    }\n  `}\n  \n  ${props => props.fullWidth && `\n    width: 100%;\n  `}\n`;\n\n/**\n * Componente de botón con animación\n * @param {Object} props - Propiedades del componente\n * @param {string} props.variant - Variante del botón (primary, secondary, danger, outline)\n * @param {boolean} props.fullWidth - Si el botón debe ocupar todo el ancho disponible\n * @param {boolean} props.disabled - Si el botón está deshabilitado\n * @param {Function} props.onClick - Función a ejecutar al hacer clic en el botón\n * @param {React.ReactNode} props.children - Contenido del botón\n * @returns {JSX.Element} - Componente de botón animado\n */\nconst AnimatedButton = ({ \n  variant = 'primary', \n  fullWidth = false, \n  disabled = false, \n  onClick, \n  children,\n  ...rest \n}) => {\n  // Animación al pasar el mouse por encima\n  const [springs, api] = useSpring(() => ({\n    scale: 1,\n    config: { tension: 300, friction: 10 }\n  }));\n  \n  // Manejadores de eventos\n  const handleMouseEnter = () => {\n    if (!disabled) {\n      api.start({ scale: 1.05 });\n    }\n  };\n  \n  const handleMouseLeave = () => {\n    api.start({ scale: 1 });\n  };\n  \n  const handleClick = (e) => {\n    if (!disabled && onClick) {\n      // Animación al hacer clic\n      api.start({\n        scale: 0.95,\n        onRest: () => {\n          api.start({ scale: 1 });\n          onClick(e);\n        }\n      });\n    }\n  };\n  \n  return (\n    <ButtonContainer\n      variant={variant}\n      fullWidth={fullWidth}\n      disabled={disabled}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={springs}\n      {...rest}\n    >\n      {children}\n    </ButtonContainer>\n  );\n};\n\nexport default AnimatedButton;\n"],"names":["exportToCSV","data","filename","length","headers","Object","keys","csvContent","join","map","row","header","value","undefined","JSON","stringify","replace","String","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","exportToJSON","exportToExcel","getUserProfile","async","user","supabase","auth","getUser","Error","error","from","select","eq","id","single","code","console","upsertUserProfile","upsert","profile","updated_at","Date","ProfileContainer","styled","div","ProfileHeader","ProfileTitle","h2","FormGroup","Label","label","Input","input","AvatarContainer","Avatar","AvatarUpload","UploadButton","UploadInfo","span","SubmitButton","button","ErrorMessage","SuccessMessage","ProfileForm","useAuth","setProfile","useState","first_name","last_name","avatar_url","loading","setLoading","saving","setSaving","setError","success","setSuccess","avatarFile","setAvatarFile","useEffect","userProfile","err","loadProfile","handleChange","e","name","target","prev","_jsx","children","textAlign","padding","_jsxs","onSubmit","preventDefault","avatarUrl","fileExt","file","split","pop","filePath","Math","random","toString","substring","uploadError","storage","upload","publicUrl","getPublicUrl","updateUserAvatar","src","alt","FiUser","FiUpload","accept","onChange","files","previewUrl","htmlFor","placeholder","email","disabled","_Fragment","FiSave","PreferencesContainer","PreferencesHeader","PreferencesTitle","Select","SwitchContainer","SwitchLabel","Switch","PreferencesForm","preferences","setPreferences","currency","language","notifications_enabled","email_notifications","default_view","userPreferences","getUserPreferences","loadPreferences","checked","updatedPreferences","updateUserPreferences","AccessibilityContainer","AccessibilityHeader","AccessibilityTitle","SettingsGrid","SettingCard","SettingHeader","SettingTitle","h3","SettingDescription","p","SettingControl","ToggleSwitch","ResetButton","AnimatedButton","AccessibilitySettings","settings","updateSetting","resetSettings","useAccessibility","variant","onClick","FiRefreshCw","FiType","fontSize","FiEye","highContrast","FiActivity","reducedMotion","FiKey","keyboardNavigation","AuditContainer","AuditHeader","AuditTitle","ButtonGroup","FiltersContainer","FilterGroup","AuditTable","ActionBadge","props","action","Pagination","PaginationInfo","PaginationButtons","EmptyState","AuditLogs","logs","setLogs","filters","setFilters","table","startDate","endDate","pagination","setPagination","limit","offset","total","showFilters","setShowFilters","loadAuditLogs","options","arguments","query","order","ascending","range","toUpperCase","gte","lte","getAuditLogs","showError","formatDate","dateString","toLocaleString","year","month","day","hour","minute","handlePageChange","direction","max","handleFilterChange","FiFilter","handleExport","formattedLogs","log","ID","Acción","Tabla","table_name","record_id","created_at","user_agent","FiDownload","LoadingSpinner","text","min","NotificationContainer","NotificationHeader","NotificationTitle","NotificationIcon","status","NotificationContent","NotificationActions","NotificationManager","permissionStatus","setPermissionStatus","serviceWorkerRegistered","setServiceWorkerRegistered","getNotificationPermissionStatus","registration","registerServiceWorker","checkScheduledNotifications","initNotifications","handleRequestPermission","requestNotificationPermission","showInfo","FiBell","FiBellOff","FiInfo","renderContent","window","open","Profile","isNotificationSupported","isServiceWorkerSupported","navigator","warn","Notification","requestPermission","permission","serviceWorker","register","showLocalNotification","title","controller","ready","showNotification","getScheduledNotifications","scheduledNotifications","localStorage","getItem","parse","removeScheduledNotification","notificationId","updatedNotifications","filter","notification","setItem","now","forEach","delay","scheduledTime","getTime","setTimeout","ButtonContainer","animated","fullWidth","_ref","rest","springs","api","useSpring","scale","config","tension","friction","start","onRest","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave"],"sourceRoot":""}