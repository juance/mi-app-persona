{"version":3,"file":"static/js/187.716adfac.chunk.js","mappings":"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","sources":["components/FinancialGoals/GoalChart.js","components/FinancialGoals/GoalFilters.js","components/FinancialGoals/GoalForm.js","components/FinancialGoals/GoalCard.js","components/FinancialGoals/GoalList.js","pages/FinancialGoals.js","services/simpleStorage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\nimport useTheme from '../../hooks/useTheme';\n\n// Registrar componentes de Chart.js\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\n\nconst ChartContainer = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n  transition: transform var(--transition-speed), box-shadow var(--transition-speed);\n  overflow: hidden;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n`;\n\nconst ChartTitle = styled.h2`\n  margin-top: 0;\n  margin-bottom: 24px;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-align: center;\n`;\n\nconst ChartOptions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 24px;\n  gap: 12px;\n`;\n\nconst ChartTypeButton = styled.button`\n  background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--bg-medium)'};\n  color: ${props => props.active ? 'white' : 'var(--text-medium)'};\n  border: none;\n  padding: 10px 20px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: ${props => props.active ? '0 4px 8px rgba(99, 102, 241, 0.3)' : '0 2px 4px rgba(0, 0, 0, 0.05)'};\n\n  &:hover {\n    background-color: ${props => props.active ? 'var(--primary-color)' : 'var(--bg-light)'};\n    transform: translateY(-2px);\n  }\n`;\n\nconst ChartWrapper = styled.div`\n  height: 350px;\n  width: 100%;\n  position: relative;\n  padding: 10px;\n`;\n\nconst GoalChart = ({ goals }) => {\n  const [chartType, setChartType] = useState('bar');\n  const { darkMode } = useTheme();\n  const [chartData, setChartData] = useState(null);\n  const [chartOptions, setChartOptions] = useState(null);\n\n  useEffect(() => {\n    if (!goals || goals.length === 0) return;\n\n    const labels = goals.map(goal => goal.name);\n    const currentAmounts = goals.map(goal => goal.current_amount);\n    const targetAmounts = goals.map(goal => goal.target_amount);\n    const remainingAmounts = goals.map(goal => Math.max(0, goal.target_amount - goal.current_amount));\n\n    // Colores para las barras/sectores\n    const backgroundColors = [\n      'rgba(99, 102, 241, 0.7)',\n      'rgba(239, 68, 68, 0.7)',\n      'rgba(245, 158, 11, 0.7)',\n      'rgba(16, 185, 129, 0.7)',\n      'rgba(59, 130, 246, 0.7)',\n      'rgba(168, 85, 247, 0.7)',\n      'rgba(236, 72, 153, 0.7)'\n    ];\n\n    if (chartType === 'bar') {\n      setChartData({\n        labels,\n        datasets: [\n          {\n            label: 'Monto Actual',\n            data: currentAmounts,\n            backgroundColor: 'rgba(99, 102, 241, 0.7)',\n            borderColor: 'rgba(99, 102, 241, 1)',\n            borderWidth: 1\n          },\n          {\n            label: 'Monto Restante',\n            data: remainingAmounts,\n            backgroundColor: 'rgba(239, 68, 68, 0.7)',\n            borderColor: 'rgba(239, 68, 68, 1)',\n            borderWidth: 1\n          }\n        ]\n      });\n\n      setChartOptions({\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            stacked: true,\n            ticks: {\n              color: darkMode ? '#e5e7eb' : '#4b5563'\n            },\n            grid: {\n              color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n            }\n          },\n          y: {\n            stacked: true,\n            beginAtZero: true,\n            ticks: {\n              callback: function(value) {\n                return new Intl.NumberFormat('es-AR', {\n                  style: 'currency',\n                  currency: 'ARS',\n                  maximumFractionDigits: 0\n                }).format(value);\n              },\n              color: darkMode ? '#e5e7eb' : '#4b5563'\n            },\n            grid: {\n              color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: darkMode ? '#e5e7eb' : '#4b5563'\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: function(context) {\n                return context.dataset.label + ': ' +\n                  new Intl.NumberFormat('es-AR', {\n                    style: 'currency',\n                    currency: 'ARS'\n                  }).format(context.raw);\n              }\n            }\n          }\n        }\n      });\n    } else {\n      setChartData({\n        labels,\n        datasets: [{\n          data: currentAmounts,\n          backgroundColor: backgroundColors,\n          borderColor: backgroundColors.map(color => color.replace('0.7', '1')),\n          borderWidth: 1\n        }]\n      });\n\n      setChartOptions({\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'right',\n            labels: {\n              color: darkMode ? '#e5e7eb' : '#4b5563'\n            }\n          },\n          tooltip: {\n            callbacks: {\n              label: function(context) {\n                const goal = goals[context.dataIndex];\n                const percentage = Math.round((goal.current_amount / goal.target_amount) * 100);\n                return context.label + ': ' +\n                  new Intl.NumberFormat('es-AR', {\n                    style: 'currency',\n                    currency: 'ARS'\n                  }).format(context.raw) +\n                  ` (${percentage}% del objetivo)`;\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [goals, chartType, darkMode]);\n\n  if (!goals || goals.length === 0 || !chartData || !chartOptions) {\n    return null;\n  }\n\n  return (\n    <ChartContainer>\n      <ChartTitle>Resumen de Metas Financieras</ChartTitle>\n\n      <ChartOptions>\n        <ChartTypeButton\n          active={chartType === 'bar'}\n          onClick={() => setChartType('bar')}\n        >\n          Barras\n        </ChartTypeButton>\n        <ChartTypeButton\n          active={chartType === 'pie'}\n          onClick={() => setChartType('pie')}\n        >\n          Circular\n        </ChartTypeButton>\n      </ChartOptions>\n\n      <ChartWrapper>\n        {chartType === 'bar' ? (\n          <Bar data={chartData} options={chartOptions} />\n        ) : (\n          <Pie data={chartData} options={chartOptions} />\n        )}\n      </ChartWrapper>\n    </ChartContainer>\n  );\n};\n\nexport default GoalChart;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FiltersContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-bottom: 24px;\n  background-color: var(--bg-medium);\n  padding: 20px;\n  border-radius: var(--border-radius);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.03);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n  }\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n  flex: 1;\n  \n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Label = styled.label`\n  margin-bottom: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  color: var(--text-medium);\n`;\n\nconst Select = styled.select`\n  padding: 10px 12px;\n  border: 1px solid rgba(0, 0, 0, 0.08);\n  border-radius: var(--border-radius);\n  background-color: var(--card-bg);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  transition: all var(--transition-speed);\n  cursor: pointer;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n  \n  &:hover {\n    border-color: var(--primary-light);\n  }\n  \n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst GoalFilters = ({ filters, onFilterChange }) => {\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    onFilterChange({ ...filters, [name]: value });\n  };\n\n  return (\n    <FiltersContainer>\n      <FilterGroup>\n        <Label htmlFor=\"categoryFilter\">Filtrar por categoría:</Label>\n        <Select\n          id=\"categoryFilter\"\n          name=\"category\"\n          value={filters.category}\n          onChange={handleChange}\n        >\n          <option value=\"all\">Todas las categorías</option>\n          <option value=\"savings\">Ahorros</option>\n          <option value=\"investment\">Inversión</option>\n          <option value=\"purchase\">Compra</option>\n          <option value=\"travel\">Viaje</option>\n          <option value=\"education\">Educación</option>\n          <option value=\"home\">Hogar</option>\n          <option value=\"other\">Otro</option>\n        </Select>\n      </FilterGroup>\n      \n      <FilterGroup>\n        <Label htmlFor=\"progressFilter\">Filtrar por progreso:</Label>\n        <Select\n          id=\"progressFilter\"\n          name=\"progress\"\n          value={filters.progress}\n          onChange={handleChange}\n        >\n          <option value=\"all\">Todos</option>\n          <option value=\"less25\">Menos del 25%</option>\n          <option value=\"25to50\">25% - 50%</option>\n          <option value=\"50to75\">50% - 75%</option>\n          <option value=\"more75\">Más del 75%</option>\n          <option value=\"completed\">Completados</option>\n        </Select>\n      </FilterGroup>\n      \n      <FilterGroup>\n        <Label htmlFor=\"sortBy\">Ordenar por:</Label>\n        <Select\n          id=\"sortBy\"\n          name=\"sortBy\"\n          value={filters.sortBy}\n          onChange={handleChange}\n        >\n          <option value=\"name\">Nombre</option>\n          <option value=\"deadline\">Fecha límite</option>\n          <option value=\"progress\">Progreso</option>\n          <option value=\"amount\">Monto objetivo</option>\n        </Select>\n      </FilterGroup>\n    </FiltersContainer>\n  );\n};\n\nexport default GoalFilters;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst FormContainer = styled.div`\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst FormTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 20px;\n  color: var(--text-dark);\n  font-size: 1.25rem;\n  font-weight: 600;\n  position: relative;\n  padding-bottom: 10px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 40px;\n    height: 3px;\n    background: var(--primary-color);\n    border-radius: 2px;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  color: var(--danger-color);\n  margin-bottom: 16px;\n  font-size: 0.9rem;\n  padding: 12px;\n  background-color: rgba(239, 68, 68, 0.08);\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--danger-color);\n`;\n\nconst FormGroup = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 500;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n\n  &::after {\n    content: ' *';\n    color: var(--danger-color);\n    display: ${props => props.required ? 'inline' : 'none'};\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 14px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  font-size: 0.95rem;\n  font-family: 'Poppins', sans-serif;\n  color: var(--text-dark);\n  background-color: var(--card-bg);\n  transition: all var(--transition-speed);\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236366f1' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 12px center;\n  padding-right: 36px;\n\n  &:focus {\n    outline: none;\n    border-color: var(--primary-color);\n    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\n  }\n`;\n\nconst SubmitButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  padding: 12px 20px;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  width: 100%;\n  box-shadow: 0 4px 6px rgba(99, 102, 241, 0.2);\n  font-family: 'Poppins', sans-serif;\n\n  &:hover {\n    background-color: var(--primary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(99, 102, 241, 0.3);\n  }\n`;\n\nconst initialFormState = {\n  name: '',\n  target_amount: '',\n  current_amount: '0',\n  category: 'savings',\n  deadline: ''\n};\n\nconst GoalForm = ({ onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState(initialFormState);\n  const [error, setError] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Validación\n    if (!formData.name.trim()) {\n      setError('Por favor ingresa un nombre para el objetivo.');\n      return;\n    }\n\n    if (!formData.target_amount || parseFloat(formData.target_amount) <= 0) {\n      setError('Por favor ingresa un monto objetivo válido.');\n      return;\n    }\n\n    if (parseFloat(formData.current_amount) > parseFloat(formData.target_amount)) {\n      setError('El monto actual no puede ser mayor que el monto objetivo.');\n      return;\n    }\n\n    // Enviar datos\n    onSubmit({\n      ...formData,\n      target_amount: parseFloat(formData.target_amount),\n      current_amount: parseFloat(formData.current_amount || 0)\n    });\n\n    // Resetear formulario\n    setFormData(initialFormState);\n    setError('');\n  };\n\n  return (\n    <FormContainer>\n      <FormTitle>Crear Nuevo Objetivo Financiero</FormTitle>\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"name\" required>Nombre del objetivo</Label>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"target_amount\" required>Monto objetivo (ARS)</Label>\n          <Input\n            type=\"number\"\n            id=\"target_amount\"\n            name=\"target_amount\"\n            min=\"1\"\n            step=\"0.01\"\n            value={formData.target_amount}\n            onChange={handleChange}\n            required\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"current_amount\">Monto actual (ARS)</Label>\n          <Input\n            type=\"number\"\n            id=\"current_amount\"\n            name=\"current_amount\"\n            min=\"0\"\n            step=\"0.01\"\n            value={formData.current_amount}\n            onChange={handleChange}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"category\" required>Categoría</Label>\n          <Select\n            id=\"category\"\n            name=\"category\"\n            value={formData.category}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"savings\">Ahorros</option>\n            <option value=\"investment\">Inversión</option>\n            <option value=\"purchase\">Compra</option>\n            <option value=\"travel\">Viaje</option>\n            <option value=\"education\">Educación</option>\n            <option value=\"home\">Hogar</option>\n            <option value=\"other\">Otro</option>\n          </Select>\n        </FormGroup>\n\n        <FormGroup>\n          <Label htmlFor=\"deadline\">Fecha límite</Label>\n          <Input\n            type=\"date\"\n            id=\"deadline\"\n            name=\"deadline\"\n            value={formData.deadline}\n            onChange={handleChange}\n          />\n        </FormGroup>\n\n        <SubmitButton type=\"submit\">Guardar Objetivo</SubmitButton>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default GoalForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FiDollarSign, FiTarget, FiTrendingUp, FiShoppingBag, FiMapPin, FiBook, FiHome } from 'react-icons/fi';\n\nconst Card = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  padding: 24px;\n  box-shadow: var(--card-shadow);\n  transition: all var(--transition-speed);\n  border: 1px solid rgba(0, 0, 0, 0.04);\n  position: relative;\n  overflow: hidden;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: var(--card-shadow-hover);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 4px;\n    background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst IconContainer = styled.div`\n  font-size: 1.5rem;\n  margin-right: 12px;\n  width: 48px;\n  height: 48px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(99, 102, 241, 0.1);\n  border-radius: 12px;\n  transition: all var(--transition-speed);\n  color: var(--primary-color);\n\n  ${Card}:hover & {\n    transform: scale(1.1);\n    background-color: rgba(99, 102, 241, 0.15);\n  }\n`;\n\nconst Title = styled.h3`\n  margin: 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--text-dark);\n  line-height: 1.4;\n`;\n\nconst Amounts = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  background-color: var(--bg-light);\n  padding: 16px;\n  border-radius: var(--border-radius);\n`;\n\nconst AmountContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AmountLabel = styled.span`\n  font-size: 0.85rem;\n  color: var(--text-medium);\n  margin-bottom: 4px;\n  font-weight: 500;\n`;\n\nconst AmountValue = styled.span`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${props => props.type === 'current' ? 'var(--primary-color)' : 'var(--secondary-color)'};\n`;\n\nconst ProgressContainer = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst ProgressBar = styled.div`\n  height: 12px;\n  background-color: var(--bg-medium);\n  border-radius: 6px;\n  overflow: hidden;\n  margin-bottom: 8px;\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05);\n`;\n\nconst ProgressFill = styled.div`\n  height: 100%;\n  width: ${props => props.progress}%;\n  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n  border-radius: 6px;\n  transition: width 0.5s ease;\n  position: relative;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.2) 25%,\n      transparent 25%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.2) 50%,\n      rgba(255, 255, 255, 0.2) 75%,\n      transparent 75%\n    );\n    background-size: 20px 20px;\n    animation: progress-animation 1s linear infinite;\n  }\n\n  @keyframes progress-animation {\n    0% {\n      background-position: 0 0;\n    }\n    100% {\n      background-position: 20px 0;\n    }\n  }\n`;\n\nconst ProgressText = styled.div`\n  text-align: right;\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: var(--text-medium);\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n  padding-top: 16px;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst Deadline = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: var(--bg-light);\n  padding: 10px 14px;\n  border-radius: var(--border-radius);\n  border-left: 3px solid var(--accent-color);\n`;\n\nconst DeadlineLabel = styled.span`\n  font-size: 0.8rem;\n  color: var(--text-medium);\n  margin-bottom: 4px;\n  font-weight: 500;\n`;\n\nconst DeadlineValue = styled.span`\n  font-size: 0.95rem;\n  color: var(--text-dark);\n  font-weight: 600;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nconst UpdateButton = styled.button`\n  background-color: var(--accent-color);\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(245, 158, 11, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 6px;\n\n  &::before {\n    content: '↑';\n    font-weight: bold;\n  }\n\n  &:hover {\n    background-color: var(--accent-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(245, 158, 11, 0.3);\n  }\n`;\n\nconst DeleteButton = styled.button`\n  background-color: var(--danger-color);\n  color: white;\n  border: none;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--transition-speed);\n  box-shadow: 0 2px 4px rgba(239, 68, 68, 0.2);\n\n  &:hover {\n    background-color: var(--danger-dark);\n    transform: rotate(90deg);\n    box-shadow: 0 4px 8px rgba(239, 68, 68, 0.3);\n  }\n`;\n\nconst getCategoryIcon = (category) => {\n  switch (category) {\n    case 'savings':\n      return <FiDollarSign />;\n    case 'investment':\n      return <FiTrendingUp />;\n    case 'purchase':\n      return <FiShoppingBag />;\n    case 'travel':\n      return <FiMapPin />;\n    case 'education':\n      return <FiBook />;\n    case 'home':\n      return <FiHome />;\n    default:\n      return <FiTarget />;\n  }\n};\n\nconst formatCurrency = (amount) => {\n  return new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency: 'ARS'\n  }).format(amount);\n};\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Sin fecha límite';\n  const date = new Date(dateString);\n  return date.toLocaleDateString('es-ES');\n};\n\nconst GoalCard = ({ goal, onUpdate, onDelete }) => {\n  const progress = Math.min(100, Math.round((goal.current_amount / goal.target_amount) * 100));\n\n  return (\n    <Card>\n      <Header>\n        <IconContainer>\n          {getCategoryIcon(goal.category)}\n        </IconContainer>\n        <Title>{goal.name}</Title>\n      </Header>\n\n      <Amounts>\n        <AmountContainer>\n          <AmountLabel>Actual:</AmountLabel>\n          <AmountValue type=\"current\">{formatCurrency(goal.current_amount)}</AmountValue>\n        </AmountContainer>\n        <AmountContainer>\n          <AmountLabel>Objetivo:</AmountLabel>\n          <AmountValue type=\"target\">{formatCurrency(goal.target_amount)}</AmountValue>\n        </AmountContainer>\n      </Amounts>\n\n      <ProgressContainer>\n        <ProgressBar>\n          <ProgressFill progress={progress} />\n        </ProgressBar>\n        <ProgressText>{progress}%</ProgressText>\n      </ProgressContainer>\n\n      <Footer>\n        <Deadline>\n          <DeadlineLabel>Fecha límite:</DeadlineLabel>\n          <DeadlineValue>{formatDate(goal.deadline)}</DeadlineValue>\n        </Deadline>\n\n        <Actions>\n          <UpdateButton onClick={() => onUpdate(goal.id)}>\n            Actualizar\n          </UpdateButton>\n          <DeleteButton onClick={() => onDelete(goal.id)}>\n            🗑️\n          </DeleteButton>\n        </Actions>\n      </Footer>\n    </Card>\n  );\n};\n\nexport default GoalCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GoalCard from './GoalCard';\n\nconst ListContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 24px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst NoGoalsMessage = styled.div`\n  text-align: center;\n  color: var(--text-light);\n  font-style: italic;\n  padding: 30px 0;\n  background-color: var(--bg-light);\n  border-radius: var(--border-radius);\n  border: 1px dashed rgba(0, 0, 0, 0.1);\n  grid-column: 1 / -1;\n`;\n\nconst GoalList = ({ goals, onUpdateGoal, onDeleteGoal }) => {\n  if (!goals || goals.length === 0) {\n    return (\n      <ListContainer>\n        <NoGoalsMessage>\n          No hay objetivos financieros. ¡Crea uno nuevo!\n        </NoGoalsMessage>\n      </ListContainer>\n    );\n  }\n\n  return (\n    <ListContainer>\n      {goals.map(goal => (\n        <GoalCard \n          key={goal.id} \n          goal={goal} \n          onUpdate={onUpdateGoal} \n          onDelete={onDeleteGoal} \n        />\n      ))}\n    </ListContainer>\n  );\n};\n\nexport default GoalList;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GoalChart from '../components/FinancialGoals/GoalChart';\nimport GoalFilters from '../components/FinancialGoals/GoalFilters';\nimport GoalForm from '../components/FinancialGoals/GoalForm';\nimport GoalList from '../components/FinancialGoals/GoalList';\nimport { getFinancialGoals, saveFinancialGoals, addFinancialGoal, updateFinancialGoal, deleteFinancialGoal } from '../services/simpleStorage';\n\nconst FinancialGoalsContainer = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst FinancialGoalsHeader = styled.div`\n  margin-bottom: 36px;\n\n  h1 {\n    font-size: 2.2rem;\n    font-weight: 700;\n    color: var(--text-dark);\n    margin-bottom: 12px;\n    position: relative;\n    padding-bottom: 12px;\n\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 60px;\n      height: 4px;\n      background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    color: var(--text-medium);\n    font-size: 1.1rem;\n  }\n`;\n\nconst GoalsSection = styled.div`\n  background-color: var(--card-bg);\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  padding: 24px;\n  margin-bottom: 32px;\n`;\n\nconst GoalsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 16px;\n    align-items: flex-start;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  margin: 0;\n  color: var(--text-dark);\n  font-size: 1.5rem;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 4px;\n    height: 24px;\n    background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));\n    border-radius: 2px;\n  }\n`;\n\nconst AddGoalButton = styled.button`\n  background-color: var(--secondary-color);\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.95rem;\n  font-weight: 500;\n  transition: all var(--transition-speed);\n  box-shadow: 0 4px 6px rgba(16, 185, 129, 0.2);\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &::before {\n    content: '+';\n    font-size: 1.2rem;\n    font-weight: 600;\n  }\n\n  &:hover {\n    background-color: var(--secondary-dark);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 10px rgba(16, 185, 129, 0.3);\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    justify-content: center;\n  }\n`;\n\nconst FinancialGoals = () => {\n  const [goals, setGoals] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [filters, setFilters] = useState({\n    category: 'all',\n    progress: 'all',\n    sortBy: 'name'\n  });\n  const [filteredGoals, setFilteredGoals] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar metas financieras desde el almacenamiento local\n  useEffect(() => {\n    const loadGoals = () => {\n      try {\n        setLoading(true);\n        // Obtener metas financieras del almacenamiento local\n        const savedGoals = getFinancialGoals();\n        console.log('Metas financieras cargadas desde el almacenamiento local:', savedGoals);\n        setGoals(savedGoals || []);\n      } catch (error) {\n        console.error('Error al cargar metas financieras:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadGoals();\n  }, []);\n\n  // Aplicar filtros y ordenamiento cuando cambian los filtros o las metas\n  useEffect(() => {\n    let result = [...goals];\n\n    // Filtrar por categoría\n    if (filters.category !== 'all') {\n      result = result.filter(goal => goal.category === filters.category);\n    }\n\n    // Filtrar por progreso\n    if (filters.progress !== 'all') {\n      result = result.filter(goal => {\n        const progress = Math.round((goal.current_amount / goal.target_amount) * 100);\n\n        switch (filters.progress) {\n          case 'less25':\n            return progress < 25;\n          case '25to50':\n            return progress >= 25 && progress < 50;\n          case '50to75':\n            return progress >= 50 && progress < 75;\n          case 'more75':\n            return progress >= 75 && progress < 100;\n          case 'completed':\n            return progress >= 100;\n          default:\n            return true;\n        }\n      });\n    }\n\n    // Ordenar\n    result.sort((a, b) => {\n      switch (filters.sortBy) {\n        case 'name':\n          return a.name.localeCompare(b.name);\n        case 'deadline':\n          // Si no hay fecha límite, colocar al final\n          if (!a.deadline) return 1;\n          if (!b.deadline) return -1;\n          return new Date(a.deadline) - new Date(b.deadline);\n        case 'progress':\n          const progressA = (a.current_amount / a.target_amount) * 100;\n          const progressB = (b.current_amount / b.target_amount) * 100;\n          return progressB - progressA; // Mayor progreso primero\n        case 'amount':\n          return b.target_amount - a.target_amount; // Mayor monto primero\n        default:\n          return 0;\n      }\n    });\n\n    setFilteredGoals(result);\n  }, [goals, filters]);\n\n  const handleAddGoal = (newGoal) => {\n    try {\n      // Agregar la meta al almacenamiento local\n      const savedGoal = addFinancialGoal(newGoal);\n\n      if (savedGoal) {\n        console.log('Meta financiera agregada correctamente:', savedGoal);\n        // Actualizar el estado\n        setGoals(prev => [...prev, savedGoal]);\n        setShowForm(false);\n      } else {\n        console.error('No se pudo agregar la meta financiera');\n        alert('No se pudo agregar la meta financiera. Por favor, intenta de nuevo.');\n      }\n    } catch (error) {\n      console.error('Error al agregar meta financiera:', error);\n      alert('Error al agregar meta financiera. Por favor, intenta de nuevo.');\n    }\n  };\n\n  const handleUpdateGoal = (goalId) => {\n    const amount = prompt('Ingresa el monto a agregar:');\n\n    if (amount && !isNaN(amount) && parseFloat(amount) > 0) {\n      try {\n        // Encontrar la meta actual\n        const currentGoal = goals.find(goal => goal.id === goalId);\n\n        if (!currentGoal) {\n          console.error('No se encontró la meta financiera');\n          return;\n        }\n\n        // Calcular el nuevo monto\n        const newAmount = currentGoal.current_amount + parseFloat(amount);\n\n        // Actualizar la meta en el almacenamiento local\n        const updatedGoal = updateFinancialGoal(goalId, {\n          ...currentGoal,\n          current_amount: newAmount\n        });\n\n        if (updatedGoal) {\n          console.log('Meta financiera actualizada correctamente:', updatedGoal);\n          // Actualizar el estado\n          setGoals(prev => prev.map(goal => {\n            if (goal.id === goalId) {\n              return {\n                ...goal,\n                current_amount: newAmount\n              };\n            }\n            return goal;\n          }));\n        } else {\n          console.error('No se pudo actualizar la meta financiera');\n          alert('No se pudo actualizar la meta financiera. Por favor, intenta de nuevo.');\n        }\n      } catch (error) {\n        console.error('Error al actualizar meta financiera:', error);\n        alert('Error al actualizar meta financiera. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n\n  const handleDeleteGoal = (goalId) => {\n    const goalToDelete = goals.find(goal => goal.id === goalId);\n\n    if (window.confirm(`¿Estás seguro de que deseas eliminar \"${goalToDelete?.name || 'esta meta'}\"?`)) {\n      try {\n        // Eliminar la meta del almacenamiento local\n        const success = deleteFinancialGoal(goalId);\n\n        if (success) {\n          console.log('Meta financiera eliminada correctamente');\n          // Actualizar el estado\n          setGoals(prev => prev.filter(goal => goal.id !== goalId));\n        } else {\n          console.error('No se pudo eliminar la meta financiera');\n          alert('No se pudo eliminar la meta financiera. Por favor, intenta de nuevo.');\n        }\n      } catch (error) {\n        console.error('Error al eliminar meta financiera:', error);\n        alert('Error al eliminar meta financiera. Por favor, intenta de nuevo.');\n      }\n    }\n  };\n\n  return (\n    <FinancialGoalsContainer>\n      <FinancialGoalsHeader>\n        <h1>Metas Financieras</h1>\n        <p>Establece y realiza seguimiento de tus objetivos financieros</p>\n      </FinancialGoalsHeader>\n\n      {/* Gráfico de resumen */}\n      <GoalChart goals={goals} />\n\n      {/* Sección de metas */}\n      <GoalsSection>\n        <GoalsHeader>\n          <SectionTitle>Objetivos Financieros</SectionTitle>\n          <AddGoalButton onClick={() => setShowForm(!showForm)}>\n            {showForm ? 'Cancelar' : 'Nuevo Objetivo'}\n          </AddGoalButton>\n        </GoalsHeader>\n\n        {/* Formulario para agregar nuevas metas */}\n        {showForm && (\n          <GoalForm onSubmit={handleAddGoal} onCancel={() => setShowForm(false)} />\n        )}\n\n        {/* Filtros */}\n        <GoalFilters filters={filters} onFilterChange={setFilters} />\n\n        {/* Lista de metas */}\n        <GoalList\n          goals={filteredGoals}\n          onUpdateGoal={handleUpdateGoal}\n          onDeleteGoal={handleDeleteGoal}\n        />\n      </GoalsSection>\n    </FinancialGoalsContainer>\n  );\n};\n\nexport default FinancialGoals;\n","/**\n * Servicio de almacenamiento local simple\n * Este servicio proporciona funciones básicas para guardar y recuperar datos\n * del localStorage de manera directa y sencilla\n */\n\n// Prefijo para las claves de almacenamiento\nconst STORAGE_PREFIX = 'mi_app_personal_simple_';\n\n/**\n * Guardar datos en localStorage\n * @param {string} key - Clave\n * @param {*} data - Datos a guardar\n */\nexport const saveData = (key, data) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.setItem(fullKey, JSON.stringify(data));\n    console.log(`Datos guardados en localStorage con clave ${key}:`, data);\n    return true;\n  } catch (error) {\n    console.error(`Error al guardar datos en localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n/**\n * Obtener datos de localStorage\n * @param {string} key - Clave\n * @param {*} defaultValue - Valor por defecto\n * @returns {*} - Datos guardados o valor por defecto\n */\nexport const getData = (key, defaultValue = null) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    const storedData = localStorage.getItem(fullKey);\n\n    if (!storedData) {\n      return defaultValue;\n    }\n\n    const parsedData = JSON.parse(storedData);\n    console.log(`Datos recuperados de localStorage con clave ${key}:`, parsedData);\n    return parsedData;\n  } catch (error) {\n    console.error(`Error al obtener datos de localStorage con clave ${key}:`, error);\n    return defaultValue;\n  }\n};\n\n/**\n * Eliminar datos de localStorage\n * @param {string} key - Clave\n */\nexport const removeData = (key) => {\n  try {\n    const fullKey = `${STORAGE_PREFIX}${key}`;\n    localStorage.removeItem(fullKey);\n    console.log(`Datos eliminados de localStorage con clave ${key}`);\n    return true;\n  } catch (error) {\n    console.error(`Error al eliminar datos de localStorage con clave ${key}:`, error);\n    return false;\n  }\n};\n\n// Función genérica para generar un ID único\nconst generateId = () => `local_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// ==================== TRANSACCIONES ====================\n\n/**\n * Guardar transacciones en localStorage\n * @param {Array} transactions - Transacciones a guardar\n */\nexport const saveTransactions = (transactions) => {\n  return saveData('transactions', transactions);\n};\n\n/**\n * Obtener transacciones de localStorage\n * @returns {Array} - Transacciones guardadas o array vacío\n */\nexport const getTransactions = () => {\n  return getData('transactions', []);\n};\n\n/**\n * Agregar una transacción\n * @param {Object} transaction - Transacción a agregar\n */\nexport const addTransaction = (transaction) => {\n  try {\n    // Generar ID si no tiene\n    const transactionWithId = {\n      ...transaction,\n      id: transaction.id || generateId()\n    };\n\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Agregar la nueva transacción al principio\n    const updatedTransactions = [transactionWithId, ...currentTransactions];\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return transactionWithId;\n  } catch (error) {\n    console.error('Error al agregar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una transacción\n * @param {string} id - ID de la transacción\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTransaction = (id, updates) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Buscar la transacción\n    const index = currentTransactions.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la transacción\n    const updatedTransactions = [...currentTransactions];\n    updatedTransactions[index] = {\n      ...updatedTransactions[index],\n      ...updates\n    };\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return updatedTransactions[index];\n  } catch (error) {\n    console.error('Error al actualizar transacción:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una transacción\n * @param {string} id - ID de la transacción\n */\nexport const deleteTransaction = (id) => {\n  try {\n    // Obtener transacciones actuales\n    const currentTransactions = getTransactions();\n\n    // Filtrar la transacción a eliminar\n    const updatedTransactions = currentTransactions.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna transacción, retornar false\n    if (updatedTransactions.length === currentTransactions.length) {\n      console.error(`No se encontró la transacción con ID ${id}`);\n      return false;\n    }\n\n    // Guardar transacciones actualizadas\n    saveTransactions(updatedTransactions);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar transacción:', error);\n    return false;\n  }\n};\n\n// ==================== TAREAS ====================\n\n/**\n * Guardar tareas en localStorage\n * @param {Array} tasks - Tareas a guardar\n */\nexport const saveTasks = (tasks) => {\n  return saveData('tasks', tasks);\n};\n\n/**\n * Obtener tareas de localStorage\n * @returns {Array} - Tareas guardadas o array vacío\n */\nexport const getTasks = () => {\n  return getData('tasks', []);\n};\n\n/**\n * Agregar una tarea\n * @param {Object} task - Tarea a agregar\n */\nexport const addTask = (task) => {\n  try {\n    // Generar ID si no tiene\n    const taskWithId = {\n      ...task,\n      id: task.id || generateId(),\n      created_at: task.created_at || new Date().toISOString().split('T')[0]\n    };\n\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Agregar la nueva tarea\n    const updatedTasks = [...currentTasks, taskWithId];\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return taskWithId;\n  } catch (error) {\n    console.error('Error al agregar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una tarea\n * @param {string} id - ID de la tarea\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateTask = (id, updates) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la tarea\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      ...updates\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al actualizar tarea:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una tarea\n * @param {string} id - ID de la tarea\n */\nexport const deleteTask = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Filtrar la tarea a eliminar\n    const updatedTasks = currentTasks.filter(t => t.id !== id);\n\n    // Si no se eliminó ninguna tarea, retornar false\n    if (updatedTasks.length === currentTasks.length) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar tarea:', error);\n    return false;\n  }\n};\n\n/**\n * Cambiar el estado de completado de una tarea\n * @param {string} id - ID de la tarea\n * @param {boolean} completed - Estado de completado\n */\nexport const toggleTaskComplete = (id) => {\n  try {\n    // Obtener tareas actuales\n    const currentTasks = getTasks();\n\n    // Buscar la tarea\n    const index = currentTasks.findIndex(t => t.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la tarea con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar el estado de completado\n    const updatedTasks = [...currentTasks];\n    updatedTasks[index] = {\n      ...updatedTasks[index],\n      completed: !updatedTasks[index].completed\n    };\n\n    // Guardar tareas actualizadas\n    saveTasks(updatedTasks);\n\n    return updatedTasks[index];\n  } catch (error) {\n    console.error('Error al cambiar estado de tarea:', error);\n    return null;\n  }\n};\n\n// ==================== INVERSIONES ====================\n\n/**\n * Guardar inversiones en localStorage\n * @param {Array} investments - Inversiones a guardar\n */\nexport const saveInvestments = (investments) => {\n  return saveData('investments', investments);\n};\n\n/**\n * Obtener inversiones de localStorage\n * @returns {Array} - Inversiones guardadas o array vacío\n */\nexport const getInvestments = () => {\n  return getData('investments', []);\n};\n\n/**\n * Agregar una inversión\n * @param {Object} investment - Inversión a agregar\n */\nexport const addInvestment = (investment) => {\n  try {\n    // Generar ID si no tiene\n    const investmentWithId = {\n      ...investment,\n      id: investment.id || generateId()\n    };\n\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Agregar la nueva inversión\n    const updatedInvestments = [...currentInvestments, investmentWithId];\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return investmentWithId;\n  } catch (error) {\n    console.error('Error al agregar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una inversión\n * @param {string} id - ID de la inversión\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateInvestment = (id, updates) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Buscar la inversión\n    const index = currentInvestments.findIndex(i => i.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la inversión\n    const updatedInvestments = [...currentInvestments];\n    updatedInvestments[index] = {\n      ...updatedInvestments[index],\n      ...updates\n    };\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return updatedInvestments[index];\n  } catch (error) {\n    console.error('Error al actualizar inversión:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una inversión\n * @param {string} id - ID de la inversión\n */\nexport const deleteInvestment = (id) => {\n  try {\n    // Obtener inversiones actuales\n    const currentInvestments = getInvestments();\n\n    // Filtrar la inversión a eliminar\n    const updatedInvestments = currentInvestments.filter(i => i.id !== id);\n\n    // Si no se eliminó ninguna inversión, retornar false\n    if (updatedInvestments.length === currentInvestments.length) {\n      console.error(`No se encontró la inversión con ID ${id}`);\n      return false;\n    }\n\n    // Guardar inversiones actualizadas\n    saveInvestments(updatedInvestments);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar inversión:', error);\n    return false;\n  }\n};\n\n// ==================== METAS FINANCIERAS ====================\n\n/**\n * Guardar metas financieras en localStorage\n * @param {Array} goals - Metas financieras a guardar\n */\nexport const saveFinancialGoals = (goals) => {\n  return saveData('financial_goals', goals);\n};\n\n/**\n * Obtener metas financieras de localStorage\n * @returns {Array} - Metas financieras guardadas o array vacío\n */\nexport const getFinancialGoals = () => {\n  return getData('financial_goals', []);\n};\n\n/**\n * Agregar una meta financiera\n * @param {Object} goal - Meta financiera a agregar\n */\nexport const addFinancialGoal = (goal) => {\n  try {\n    // Generar ID si no tiene\n    const goalWithId = {\n      ...goal,\n      id: goal.id || generateId()\n    };\n\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Agregar la nueva meta\n    const updatedGoals = [...currentGoals, goalWithId];\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return goalWithId;\n  } catch (error) {\n    console.error('Error al agregar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Actualizar una meta financiera\n * @param {string} id - ID de la meta\n * @param {Object} updates - Datos a actualizar\n */\nexport const updateFinancialGoal = (id, updates) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Buscar la meta\n    const index = currentGoals.findIndex(g => g.id === id);\n\n    if (index === -1) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Actualizar la meta\n    const updatedGoals = [...currentGoals];\n    updatedGoals[index] = {\n      ...updatedGoals[index],\n      ...updates\n    };\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return updatedGoals[index];\n  } catch (error) {\n    console.error('Error al actualizar meta financiera:', error);\n    return null;\n  }\n};\n\n/**\n * Eliminar una meta financiera\n * @param {string} id - ID de la meta\n */\nexport const deleteFinancialGoal = (id) => {\n  try {\n    // Obtener metas actuales\n    const currentGoals = getFinancialGoals();\n\n    // Filtrar la meta a eliminar\n    const updatedGoals = currentGoals.filter(g => g.id !== id);\n\n    // Si no se eliminó ninguna meta, retornar false\n    if (updatedGoals.length === currentGoals.length) {\n      console.error(`No se encontró la meta financiera con ID ${id}`);\n      return false;\n    }\n\n    // Guardar metas actualizadas\n    saveFinancialGoals(updatedGoals);\n\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar meta financiera:', error);\n    return false;\n  }\n};\n"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","ChartContainer","styled","div","ChartTitle","h2","ChartOptions","ChartTypeButton","button","props","active","ChartWrapper","_ref","goals","chartType","setChartType","useState","darkMode","useTheme","chartData","setChartData","chartOptions","setChartOptions","useEffect","length","labels","map","goal","name","currentAmounts","current_amount","remainingAmounts","target_amount","Math","max","backgroundColors","datasets","label","data","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio","scales","x","stacked","ticks","color","grid","y","beginAtZero","callback","value","Intl","NumberFormat","style","currency","maximumFractionDigits","format","plugins","legend","tooltip","callbacks","context","dataset","raw","replace","position","dataIndex","percentage","round","_jsxs","children","_jsx","onClick","Bar","options","Pie","FiltersContainer","FilterGroup","Label","Select","select","filters","onFilterChange","handleChange","e","target","htmlFor","id","category","onChange","progress","sortBy","FormContainer","FormTitle","h3","ErrorMessage","FormGroup","required","Input","input","SubmitButton","initialFormState","deadline","onSubmit","onCancel","formData","setFormData","error","setError","prev","preventDefault","trim","parseFloat","type","min","step","Card","Header","IconContainer","Amounts","AmountContainer","AmountLabel","span","AmountValue","ProgressContainer","ProgressBar","ProgressFill","ProgressText","Footer","Deadline","DeadlineLabel","DeadlineValue","Actions","UpdateButton","DeleteButton","getCategoryIcon","FiDollarSign","FiTrendingUp","FiShoppingBag","FiMapPin","FiBook","FiHome","FiTarget","formatCurrency","amount","formatDate","dateString","Date","toLocaleDateString","onUpdate","onDelete","ListContainer","NoGoalsMessage","onUpdateGoal","onDeleteGoal","GoalCard","FinancialGoalsContainer","FinancialGoalsHeader","GoalsSection","GoalsHeader","SectionTitle","AddGoalButton","FinancialGoals","setGoals","showForm","setShowForm","setFilters","filteredGoals","setFilteredGoals","loading","setLoading","loadGoals","savedGoals","getFinancialGoals","console","log","result","filter","sort","a","b","localeCompare","progressA","GoalChart","GoalForm","newGoal","savedGoal","addFinancialGoal","alert","GoalFilters","GoalList","goalId","prompt","isNaN","currentGoal","find","newAmount","updatedGoal","updateFinancialGoal","goalToDelete","window","confirm","deleteFinancialGoal","STORAGE_PREFIX","saveData","key","fullKey","localStorage","setItem","JSON","stringify","getData","defaultValue","arguments","undefined","storedData","getItem","parsedData","parse","generateId","now","random","toString","substr","saveTransactions","transactions","getTransactions","addTransaction","transaction","transactionWithId","updatedTransactions","updateTransaction","updates","currentTransactions","index","findIndex","t","deleteTransaction","saveTasks","tasks","getTasks","addTask","task","taskWithId","created_at","toISOString","split","updatedTasks","updateTask","currentTasks","deleteTask","toggleTaskComplete","completed","saveInvestments","investments","getInvestments","addInvestment","investment","investmentWithId","updatedInvestments","updateInvestment","currentInvestments","i","deleteInvestment","saveFinancialGoals","goalWithId","updatedGoals","currentGoals","g"],"sourceRoot":""}